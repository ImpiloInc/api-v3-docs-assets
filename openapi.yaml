---
openapi: "3.0.0"
info:
  title: "Impilo API"
  version: "3.0"
servers:
- url: "https://app.impiloplatform.com"
  description: "Production server"
- url: "https://staging.impiloplatform.com"
  description: "Staging server"
security:
- ApiKeyAuth: []
tags:
- name: "Clinical Notes"
- name: "Devices"
- name: "Inventory"
- name: "Items"
- name: "Kits"
- name: "Manufacturers"
- name: "Orders"
- name: "Patients"
- name: "Procurements"
- name: "Sites"
- name: "Transfers"
- name: "Webhooks"
- name: "Readings - Blood Glucose"
- name: "Readings - Blood Oxygen"
- name: "Readings - Blood Pressure"
- name: "Readings - Heart Rate"
- name: "Readings - Heart Rate Variability"
- name: "Readings - Peak Flow"
- name: "Readings - Temperature"
- name: "Readings - Weight"
- name: "Tests"
paths:
  /api/v3/clinical-note:
    get:
      tags:
      - "Clinical Notes"
      description: "Lists clinical notes with various filtering options including\
        \ pagination, sorting, and specific attributes such as IDs, types, assignee\
        \ details, creator details, patient details, and more.\nThis endpoint supports\
        \ comprehensive filtering to retrieve relevant clinical notes based on the\
        \ provided criteria.\n"
      operationId: "listClinicalNotes"
      parameters:
      - name: "page"
        in: "query"
        description: "The page number of the content returned."
        schema:
          format: "int32"
          type: "integer"
      - name: "size"
        in: "query"
        description: "The size of the page of content returned."
        schema:
          format: "int32"
          type: "integer"
      - name: "sort"
        in: "query"
        description: "The attribute to sort on."
        schema:
          $ref: "#/components/schemas/ClinicalNoteSort"
      - name: "sortDescending"
        in: "query"
        description: "True if the sort direction should be descending."
        schema:
          type: "boolean"
      - name: "id"
        in: "query"
        description: "Lists only clinical notes with the IDs provided."
        schema:
          type: "array"
          items:
            format: "int64"
            type: "integer"
      - name: "open"
        in: "query"
        description: "Lists only open clinical notes."
        schema:
          type: "boolean"
      - name: "description"
        in: "query"
        description: "Lists only clinical notes with the provided description."
        schema:
          type: "string"
      - name: "type"
        in: "query"
        description: "Lists only clinical notes with the provided types."
        schema:
          type: "array"
          items:
            $ref: "#/components/schemas/ClinicalNoteType"
      - name: "cptCodeValue"
        in: "query"
        description: "Lists only clinical notes with the provided CPT code values."
        schema:
          type: "array"
          items:
            type: "string"
      - name: "assigneeId"
        in: "query"
        description: "Lists only clinical notes assigned to the provided assignee\
          \ IDs."
        schema:
          type: "array"
          items:
            format: "int64"
            type: "integer"
      - name: "assigneeName"
        in: "query"
        description: "Lists only clinical notes assigned to the provided assignee\
          \ name."
        schema:
          type: "string"
      - name: "assigneeEmail"
        in: "query"
        description: "Lists only clinical notes assigned to the provided assignee\
          \ email."
        schema:
          type: "string"
      - name: "createdById"
        in: "query"
        description: "Lists only clinical notes created by the provided creator IDs."
        schema:
          type: "array"
          items:
            format: "int64"
            type: "integer"
      - name: "createdByName"
        in: "query"
        description: "Lists only clinical notes created by the provided creator name."
        schema:
          type: "string"
      - name: "createdByEmail"
        in: "query"
        description: "Lists only clinical notes created by the provided creator email."
        schema:
          type: "string"
      - name: "patientId"
        in: "query"
        description: "Lists only clinical notes associated with the provided patient\
          \ IDs."
        schema:
          type: "array"
          items:
            format: "int64"
            type: "integer"
      - name: "patientSiteId"
        in: "query"
        description: "Lists only clinical notes associated with the provided patient\
          \ site IDs."
        schema:
          type: "array"
          items:
            format: "int64"
            type: "integer"
      - name: "patientExternalIdentifier"
        in: "query"
        description: "Lists only clinical notes associated with the provided patient\
          \ external identifiers."
        schema:
          type: "array"
          items:
            type: "string"
      - name: "patientEmail"
        in: "query"
        description: "Lists only clinical notes associated with the provided patient\
          \ email."
        schema:
          type: "string"
      - name: "patientName"
        in: "query"
        description: "Lists only clinical notes associated with the provided patient\
          \ name."
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageClinicalNote"
              examples:
                clinicalNotePagedResponseExample:
                  value:
                    content:
                    - id: 88
                      type: "cptCode"
                      cptCode:
                        value: "99457"
                        displayAs: "CPT 99457"
                      createTimestamp: "2024-07-04T00:00:00Z"
                      lastUpdateTimestamp: "2024-07-14T00:00:00Z"
                      open: true
                      mdCode: "md-123"
                      dxCode: "dx-123"
                      description: "This is a clinical note."
                      createdBy:
                        id: 1772
                        firstName: "John"
                        lastName: "Doe"
                        email: "user_1772@example.com"
                      assignee:
                        id: 100
                        firstName: "John"
                        lastName: "Doe"
                        email: "user_100@example.com"
                      patient:
                        id: 456
                        externalIdentifier: "external-identifier-123"
                        firstName: "John"
                        lastName: "Doe"
                        dateOfBirth: "1987-09-13"
                        email: "email@example.com"
                        phoneNumber: "111-222-3333"
                        address:
                          lineOne: "1234 Market Street"
                          lineTwo: "Suite 110"
                          city: "Philadelphia"
                          state: "PA"
                          zipCode: "19137"
                          country: "USA"
                        sex: "unknown"
                      activity:
                      - createTimestamp: "2024-07-04T00:00:00Z"
                        comment: "Activity comment 1"
                        minutesSpent: 2
                        createdBy:
                          id: 4
                          firstName: "John"
                          lastName: "Doe"
                          email: "user_4@example.com"
                      - createTimestamp: "2024-07-04T00:00:00Z"
                        comment: "Activity comment 2"
                        minutesSpent: 4
                        createdBy:
                          id: 8
                          firstName: "John"
                          lastName: "Doe"
                          email: "user_8@example.com"
                      - createTimestamp: "2024-07-04T00:00:00Z"
                        comment: "Activity comment 3"
                        minutesSpent: 6
                        createdBy:
                          id: 12
                          firstName: "John"
                          lastName: "Doe"
                          email: "user_12@example.com"
                      - createTimestamp: "2024-07-04T00:00:00Z"
                        comment: "Activity comment 4"
                        minutesSpent: 8
                        createdBy:
                          id: 16
                          firstName: "John"
                          lastName: "Doe"
                          email: "user_16@example.com"
                      totalTime: 20
                    - id: 89
                      type: "other"
                      createTimestamp: "2024-07-04T00:00:00Z"
                      lastUpdateTimestamp: "2024-07-14T00:00:00Z"
                      open: true
                      mdCode: "md-123"
                      dxCode: "dx-123"
                      description: "This is a clinical note."
                      createdBy:
                        id: 1772
                        firstName: "John"
                        lastName: "Doe"
                        email: "user_1772@example.com"
                      assignee:
                        id: 100
                        firstName: "John"
                        lastName: "Doe"
                        email: "user_100@example.com"
                      patient:
                        id: 456
                        externalIdentifier: "external-identifier-123"
                        firstName: "John"
                        lastName: "Doe"
                        dateOfBirth: "1987-09-13"
                        email: "email@example.com"
                        phoneNumber: "111-222-3333"
                        address:
                          lineOne: "1234 Market Street"
                          lineTwo: "Suite 110"
                          city: "Philadelphia"
                          state: "PA"
                          zipCode: "19137"
                          country: "USA"
                        sex: "unknown"
                      activity:
                      - createTimestamp: "2024-07-04T00:00:00Z"
                        comment: "Activity comment 1"
                        minutesSpent: 2
                        createdBy:
                          id: 4
                          firstName: "John"
                          lastName: "Doe"
                          email: "user_4@example.com"
                      - createTimestamp: "2024-07-04T00:00:00Z"
                        comment: "Activity comment 2"
                        minutesSpent: 4
                        createdBy:
                          id: 8
                          firstName: "John"
                          lastName: "Doe"
                          email: "user_8@example.com"
                      - createTimestamp: "2024-07-04T00:00:00Z"
                        comment: "Activity comment 3"
                        minutesSpent: 6
                        createdBy:
                          id: 12
                          firstName: "John"
                          lastName: "Doe"
                          email: "user_12@example.com"
                      - createTimestamp: "2024-07-04T00:00:00Z"
                        comment: "Activity comment 4"
                        minutesSpent: 8
                        createdBy:
                          id: 16
                          firstName: "John"
                          lastName: "Doe"
                          email: "user_16@example.com"
                      totalTime: 20
                    page: 1
                    size: 2
                    total: 4
                    first: true
                    last: false
      x-response-example: "clinicalNotePagedResponseExample"
  /api/v3/clinical-note/{clinicalNoteId}:
    get:
      tags:
      - "Clinical Notes"
      description: "Fetches details of a specific clinical note by its unique ID."
      operationId: "fetchClinicalNote"
      parameters:
      - name: "clinicalNoteId"
        in: "path"
        required: true
        schema:
          format: "int64"
          type: "integer"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClinicalNote"
              examples:
                clinicalNoteExample:
                  value:
                    id: 99
                    type: "other"
                    createTimestamp: "2024-07-04T00:00:00Z"
                    lastUpdateTimestamp: "2024-07-14T00:00:00Z"
                    open: true
                    mdCode: "md-123"
                    dxCode: "dx-123"
                    description: "This is a clinical note."
                    createdBy:
                      id: 1772
                      firstName: "John"
                      lastName: "Doe"
                      email: "user_1772@example.com"
                    assignee:
                      id: 100
                      firstName: "John"
                      lastName: "Doe"
                      email: "user_100@example.com"
                    patient:
                      id: 456
                      externalIdentifier: "external-identifier-123"
                      firstName: "John"
                      lastName: "Doe"
                      dateOfBirth: "1987-09-13"
                      email: "email@example.com"
                      phoneNumber: "111-222-3333"
                      address:
                        lineOne: "1234 Market Street"
                        lineTwo: "Suite 110"
                        city: "Philadelphia"
                        state: "PA"
                        zipCode: "19137"
                        country: "USA"
                      sex: "unknown"
                    activity:
                    - createTimestamp: "2024-07-04T00:00:00Z"
                      comment: "Activity comment 1"
                      minutesSpent: 2
                      createdBy:
                        id: 4
                        firstName: "John"
                        lastName: "Doe"
                        email: "user_4@example.com"
                    - createTimestamp: "2024-07-04T00:00:00Z"
                      comment: "Activity comment 2"
                      minutesSpent: 4
                      createdBy:
                        id: 8
                        firstName: "John"
                        lastName: "Doe"
                        email: "user_8@example.com"
                    - createTimestamp: "2024-07-04T00:00:00Z"
                      comment: "Activity comment 3"
                      minutesSpent: 6
                      createdBy:
                        id: 12
                        firstName: "John"
                        lastName: "Doe"
                        email: "user_12@example.com"
                    - createTimestamp: "2024-07-04T00:00:00Z"
                      comment: "Activity comment 4"
                      minutesSpent: 8
                      createdBy:
                        id: 16
                        firstName: "John"
                        lastName: "Doe"
                        email: "user_16@example.com"
                    totalTime: 20
      x-response-example: "clinicalNoteExample"
  /api/v3/device:
    get:
      tags:
      - "Devices"
      description: "Returns a paginated list of all devices associated with the customer."
      operationId: "listDevices"
      parameters:
      - name: "page"
        in: "query"
        description: "The page number of the content returned."
        schema:
          format: "int32"
          type: "integer"
      - name: "size"
        in: "query"
        description: "The size of the page of content returned."
        schema:
          format: "int32"
          type: "integer"
      - name: "sort"
        in: "query"
        description: "The attribute to sort on"
        schema:
          $ref: "#/components/schemas/DeviceSort"
      - name: "sortDescending"
        in: "query"
        description: "True if the sort direction should be descending"
        schema:
          type: "boolean"
      - name: "id"
        in: "query"
        description: "Lists only devices with the IDs provided."
        schema:
          type: "array"
          items:
            format: "int64"
            type: "integer"
      - name: "externalIdentifier"
        in: "query"
        description: "Lists only devices with the external IDs provided."
        schema:
          type: "array"
          items:
            type: "string"
      - name: "identifierType"
        in: "query"
        description: "The device identifier type of the devices."
        schema:
          $ref: "#/components/schemas/DeviceIdentifierType"
      - name: "identifier"
        in: "query"
        description: "Lists only devices with the device identifiers provided."
        schema:
          type: "array"
          items:
            type: "string"
      - name: "status"
        in: "query"
        description: "The status of the devices."
        schema:
          type: "array"
          items:
            $ref: "#/components/schemas/DeviceStatus"
      - name: "itemId"
        in: "query"
        description: "Lists only devices with the provided Item ID type."
        schema:
          type: "array"
          items:
            format: "int64"
            type: "integer"
      - name: "itemName"
        in: "query"
        description: "The name of the item."
        schema:
          type: "string"
      - name: "itemModel"
        in: "query"
        description: "The model of the item."
        schema:
          type: "string"
      - name: "itemSku"
        in: "query"
        description: "The SKU of the item."
        schema:
          type: "string"
      - name: "manufacturerId"
        in: "query"
        description: "Lists only devices created by the Manufacturer ID provided."
        schema:
          type: "array"
          items:
            format: "int64"
            type: "integer"
      - name: "itemSize"
        in: "query"
        description: "Lists only devices of the sizes provided."
        schema:
          type: "array"
          items:
            $ref: "#/components/schemas/ItemSize"
      - name: "itemClass"
        in: "query"
        description: "Lists only devices of the Classes provided."
        schema:
          type: "array"
          items:
            $ref: "#/components/schemas/ItemClass"
      - name: "readingType"
        in: "query"
        description: "Lists only devices that support the Reading Types provided."
        schema:
          type: "array"
          items:
            $ref: "#/components/schemas/ReadingType"
      - name: "siteId"
        in: "query"
        description: "The ID of the site."
        schema:
          type: "array"
          items:
            format: "int64"
            type: "integer"
      - name: "patientId"
        in: "query"
        description: "The ID of the patient."
        schema:
          type: "array"
          items:
            format: "int64"
            type: "integer"
      - name: "patientExternalIdentifier"
        in: "query"
        description: "The external identifier of the patient."
        schema:
          type: "array"
          items:
            type: "string"
      - name: "patientEmail"
        in: "query"
        description: "The email of the patient."
        schema:
          type: "string"
      - name: "patientName"
        in: "query"
        description: "The name of the patient."
        schema:
          type: "string"
      - name: "patientSiteId"
        in: "query"
        description: "The ID of the patient site."
        schema:
          type: "array"
          items:
            format: "int64"
            type: "integer"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageDevice"
              examples:
                listDevicesResponseExample:
                  value:
                    content:
                    - id: 599
                      item:
                        id: 791
                        manufacturer:
                          id: 2
                          name: "Custom Manufacturer"
                        name: "Blood Pressure Monitor"
                        model: "iBloodPressureMonitor123"
                        sku: "0000001"
                      currentStatus: "withPatient"
                      currentPatient:
                        id: 456
                        externalIdentifier: "external-identifier-123"
                        firstName: "John"
                        lastName: "Doe"
                        dateOfBirth: "1987-09-13"
                        email: "email@example.com"
                        phoneNumber: "111-222-3333"
                        address:
                          lineOne: "1234 Market Street"
                          lineTwo: "Suite 110"
                          city: "Philadelphia"
                          state: "PA"
                          zipCode: "19137"
                          country: "USA"
                        sex: "unknown"
                      deviceIdentifiers:
                      - type: "imei"
                        value: "354833969951611"
                      - type: "serial"
                        value: "A44-A0623930"
                      - type: "macAddress"
                        value: "f51da43314fc"
                      disabledReadings: false
                    - id: 600
                      item:
                        id: 791
                        manufacturer:
                          id: 2
                          name: "Custom Manufacturer"
                        name: "Blood Pressure Monitor"
                        model: "iBloodPressureMonitor123"
                        sku: "0000001"
                      currentStatus: "withPatient"
                      currentPatient:
                        id: 456
                        externalIdentifier: "external-identifier-123"
                        firstName: "John"
                        lastName: "Doe"
                        dateOfBirth: "1987-09-13"
                        email: "email@example.com"
                        phoneNumber: "111-222-3333"
                        address:
                          lineOne: "1234 Market Street"
                          lineTwo: "Suite 110"
                          city: "Philadelphia"
                          state: "PA"
                          zipCode: "19137"
                          country: "USA"
                        sex: "unknown"
                      deviceIdentifiers:
                      - type: "imei"
                        value: "354833969951611"
                      - type: "serial"
                        value: "A44-A0623930"
                      - type: "macAddress"
                        value: "f51da43314fc"
                      disabledReadings: false
                    page: 1
                    size: 2
                    total: 4
                    first: true
                    last: false
      x-response-example: "listDevicesResponseExample"
  /api/v3/device/associate-patient:
    patch:
      tags:
      - "Devices"
      description: "This endpoint associates the device to the patient provided in\
        \ the request body.\n\nIn order to associate a device with a patient, all\
        \ of the following must apply:\n- The Patient must be associated with the\
        \ Customer making the request\n- The Device must be owned by the Customer\
        \ making the request\n- The Device must be associated with a non-Impilo site\n\
        - The Device must have a current status of \"availableAtSite\"\n***\nFor more\
        \ information see the [AssociateDeviceRequest Model](/resources/models#schema_AssociateDeviceRequest)."
      operationId: "associateDevice"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociateDeviceRequest"
            examples:
              associateDeviceRequest:
                value:
                  deviceId: 1
                  patientExternalIdentifier: "external-identifier"
      responses:
        "204":
          description: "No Content"
      x-request-example: "associateDeviceRequest"
      externalDocs:
        url: "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_AssociateDeviceRequest"
  /api/v3/device/disable-readings:
    patch:
      tags:
      - "Devices"
      description: "This endpoint disables readings for the device provided in the\
        \ request body. Readings received while\nin this status will not be processed\
        \ or saved. No alerts or webhooks will be triggered for these readings.\n\n\
        In order to disable readings for a device, all of the following must apply:\n\
        - The Device must be owned by the Customer making the request\n- The Device's\
        \ \"disabledReadings\" field must be false\n***\nFor more information see\
        \ the [DeviceReferenceRequest Model](/resources/models#schema_DeviceReferenceRequest)."
      operationId: "disableReadings"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeviceReferenceRequest"
      responses:
        "204":
          description: "No Content"
      externalDocs:
        url: "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_DeviceReferenceRequest"
  /api/v3/device/disassociate-patient:
    patch:
      tags:
      - "Devices"
      description: "This endpoint disassociates the device from the patient provided\
        \ in the Request body.\n\nIn order to disassociate a device from a patient,\
        \ all of the following must apply:\n- The Patient must be associated with\
        \ the Customer making the request\n- The Device must be owned by the Customer\
        \ making the request\n- The Device must already be associated with the provided\
        \ Patient\n- The Device must be associated with a non-Impilo site\n- The Device\
        \ must have a current status of \"withPatient\"\n***\nFor more information\
        \ see the [AssociateDeviceRequest Model](/resources/models#schema_AssociateDeviceRequest)."
      operationId: "disassociateDevice"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociateDeviceRequest"
            examples:
              disassociateDeviceRequestExample:
                value:
                  deviceId: 1
                  patientExternalIdentifier: "external-identifier"
      responses:
        "204":
          description: "No Content"
      x-request-example: "disassociateDeviceRequestExample"
      externalDocs:
        url: "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_AssociateDeviceRequest"
  /api/v3/device/enable-readings:
    patch:
      tags:
      - "Devices"
      description: "This endpoint re-enables readings for the device provided in the\
        \ request body.\n\nIn order to re-enable readings for a device, all of the\
        \ following must apply:\n- The Device must be owned by the Customer making\
        \ the request\n- The Device's \"disabledReadings\" field must be true\n***\n\
        For more information see the [DeviceReferenceRequest Model](/resources/models#schema_DeviceReferenceRequest)."
      operationId: "enableReadings"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeviceReferenceRequest"
      responses:
        "204":
          description: "No Content"
      externalDocs:
        url: "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_DeviceReferenceRequest"
  /api/v3/device/validate/{deviceIdentifier}:
    get:
      tags:
      - "Devices"
      description: "This endpoint validates that a Device Identifier exists and returns\
        \ the Device upon matching. On failure, it indicates that the Identifier is\
        \ not valid.\n"
      operationId: "validateDevice"
      parameters:
      - name: "deviceIdentifier"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidateDeviceResponse"
              examples:
                validateDeviceResponseExample:
                  value:
                    valid: true
                    device:
                      id: 599
                      item:
                        id: 791
                        manufacturer:
                          id: 2
                          name: "Custom Manufacturer"
                        name: "Blood Pressure Monitor"
                        model: "iBloodPressureMonitor123"
                        sku: "0000001"
                      currentStatus: "withPatient"
                      currentPatient:
                        id: 456
                        externalIdentifier: "external-identifier-123"
                        firstName: "John"
                        lastName: "Doe"
                        dateOfBirth: "1987-09-13"
                        email: "email@example.com"
                        phoneNumber: "111-222-3333"
                        address:
                          lineOne: "1234 Market Street"
                          lineTwo: "Suite 110"
                          city: "Philadelphia"
                          state: "PA"
                          zipCode: "19137"
                          country: "USA"
                        sex: "unknown"
                      deviceIdentifiers:
                      - type: "imei"
                        value: "354833969951611"
                      - type: "serial"
                        value: "A44-A0623930"
                      - type: "macAddress"
                        value: "f51da43314fc"
                      disabledReadings: false
      x-response-example: "validateDeviceResponseExample"
  /api/v3/device/{deviceId}:
    get:
      tags:
      - "Devices"
      description: "This endpoint returns the Device specified by ID in the URL path.\n"
      operationId: "fetchDevice"
      parameters:
      - name: "deviceId"
        in: "path"
        required: true
        schema:
          format: "int64"
          type: "integer"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Device"
              examples:
                device:
                  value:
                    id: 599
                    item:
                      id: 791
                      manufacturer:
                        id: 2
                        name: "Custom Manufacturer"
                      name: "Blood Pressure Monitor"
                      model: "iBloodPressureMonitor123"
                      sku: "0000001"
                    currentStatus: "withPatient"
                    currentPatient:
                      id: 456
                      externalIdentifier: "external-identifier-123"
                      firstName: "John"
                      lastName: "Doe"
                      dateOfBirth: "1987-09-13"
                      email: "email@example.com"
                      phoneNumber: "111-222-3333"
                      address:
                        lineOne: "1234 Market Street"
                        lineTwo: "Suite 110"
                        city: "Philadelphia"
                        state: "PA"
                        zipCode: "19137"
                        country: "USA"
                      sex: "unknown"
                    deviceIdentifiers:
                    - type: "imei"
                      value: "354833969951611"
                    - type: "serial"
                      value: "A44-A0623930"
                    - type: "macAddress"
                      value: "f51da43314fc"
                    disabledReadings: false
      x-response-example: "ApiV3ControllerExamples.device"
  /api/v3/inventory:
    get:
      tags:
      - "Inventory"
      description: "Returns a paginated list that aggregates all Used and New inventory\
        \ across\nall Impilo and Customer locations by Item type. One entry per Item\
        \ ID.\n"
      operationId: "listInventorySummary"
      parameters:
      - name: "itemId"
        in: "query"
        description: "The Item ID to filter the content by."
        schema:
          format: "int64"
          type: "integer"
      - name: "page"
        in: "query"
        description: "The page number of the content returned."
        schema:
          format: "int32"
          default: "1"
          type: "integer"
      - name: "size"
        in: "query"
        description: "The size of the page returned. Max size is 100."
        schema:
          format: "int32"
          default: "15"
          type: "integer"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageInventorySummaryRecord"
  /api/v3/inventory/impilo:
    get:
      tags:
      - "Inventory"
      description: "Returns a paginated list of a Customer's inventory by Item type\n\
        across each of the Impilo Sites. One record per Item-Site combination.\n"
      operationId: "listImpiloInventory"
      parameters:
      - name: "itemId"
        in: "query"
        description: "The Item ID to filter the content by."
        schema:
          format: "int64"
          type: "integer"
      - name: "page"
        in: "query"
        description: "The page number of the content returned."
        schema:
          format: "int32"
          default: "1"
          type: "integer"
      - name: "size"
        in: "query"
        description: "The size of the page returned. Max size is 100."
        schema:
          format: "int32"
          default: "15"
          type: "integer"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageInventoryRecord"
  /api/v3/inventory/site:
    get:
      tags:
      - "Inventory"
      description: "Returns a paginated list of a Customer's inventory by Item type\n\
        across each of the Customer Sites that there is inventory held. One record\
        \ per Item-Site combination.\n"
      operationId: "listSiteInventory"
      parameters:
      - name: "itemId"
        in: "query"
        description: "The Item ID to filter the content by."
        schema:
          format: "int64"
          type: "integer"
      - name: "siteId"
        in: "query"
        description: "The Site ID to filter the content by."
        schema:
          format: "int64"
          type: "integer"
      - name: "page"
        in: "query"
        description: "The page number of the content returned."
        schema:
          format: "int32"
          default: "1"
          type: "integer"
      - name: "size"
        in: "query"
        description: "The size of the page returned. Max size is 100."
        schema:
          format: "int32"
          default: "15"
          type: "integer"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageInventoryRecord"
  /api/v3/item:
    get:
      tags:
      - "Items"
      description: "This endpoint returns a paginated list of all items in a customer's\
        \ catalog with various filtering options including pagination, sorting, and\
        \ specific attributes such as IDs, names, models, SKUs, sizes, classes, reading\
        \ types, and manufacturer IDs.\n"
      operationId: "listItems"
      parameters:
      - name: "page"
        in: "query"
        description: "The page number of the content returned."
        schema:
          format: "int32"
          type: "integer"
      - name: "size"
        in: "query"
        description: "The size of the page of content returned. Max value is 100."
        schema:
          format: "int32"
          type: "integer"
      - name: "sort"
        in: "query"
        description: "The attribute to sort on."
        schema:
          $ref: "#/components/schemas/ItemSort"
      - name: "sortDescending"
        in: "query"
        description: "True if the sort direction should be descending."
        schema:
          type: "boolean"
      - name: "id"
        in: "query"
        description: "Lists only items with the provided Item IDs."
        schema:
          type: "array"
          items:
            format: "int64"
            type: "integer"
      - name: "name"
        in: "query"
        description: "Lists only items with the provided name."
        schema:
          type: "string"
      - name: "model"
        in: "query"
        description: "Lists only items with the provided model."
        schema:
          type: "string"
      - name: "sku"
        in: "query"
        description: "Lists only items with the provided SKU."
        schema:
          type: "string"
      - name: "itemSize"
        in: "query"
        description: "Lists only items with the provided sizes."
        schema:
          type: "array"
          items:
            $ref: "#/components/schemas/ItemSize"
      - name: "itemClass"
        in: "query"
        description: "Lists only items with the provided classes."
        schema:
          type: "array"
          items:
            $ref: "#/components/schemas/ItemClass"
      - name: "readingType"
        in: "query"
        description: "Lists only items with the provided reading types."
        schema:
          type: "array"
          items:
            $ref: "#/components/schemas/ReadingType"
      - name: "manufacturerId"
        in: "query"
        description: "Lists only items created by the provided Manufacturer IDs."
        schema:
          type: "array"
          items:
            format: "int64"
            type: "integer"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageItemDetailed"
              examples:
                listItemsResponseExample:
                  value:
                    content:
                    - id: 791
                      manufacturer:
                        id: 2
                        name: "Custom Manufacturer"
                      name: "Blood Pressure Monitor"
                      model: "iBloodPressureMonitor123"
                      sku: "0000001"
                      deviceIdentifierType: "imei"
                      itemClass: "glucose"
                      itemClassType: "bpMonitor"
                      size: "large"
                      dimensions:
                        length: 1.5
                        width: 1.0
                        height: 0.75
                        unit: "in"
                      readingType: "bloodGlucose"
                    - id: 791
                      manufacturer:
                        id: 2
                        name: "Custom Manufacturer"
                      name: "Blood Pressure Monitor"
                      model: "iBloodPressureMonitor123"
                      sku: "0000001"
                      deviceIdentifierType: "imei"
                      itemClass: "glucose"
                      itemClassType: "bpMonitor"
                      size: "large"
                      dimensions:
                        length: 1.5
                        width: 1.0
                        height: 0.75
                        unit: "in"
                      readingType: "bloodGlucose"
                    page: 1
                    size: 2
                    total: 4
                    first: true
                    last: false
      x-response-example: "listItemsResponseExample"
    post:
      tags:
      - "Items"
      description: "This endpoint creates a new Item in the Impilo platform. This\
        \ endpoint is only enabled for Customers that are also Manufacturer accounts.\n\
        \nItems created via this endpoint will:\n- receive a generated SKU and ID\n\
        - have a Manufacturer set to the requesting Customer\n- be set to an Orderable\
        \ status of FALSE\n\nItems created with this endpoint are not able to be ordered\
        \ until approved manually by an Impilo Admin.\nItems can still be procured\
        \ and received within Impilo's system while the orderable parameter is false.\n\
        ***\nFor more information see the [ItemRequest Model](/resources/models#schema_ItemRequest)."
      operationId: "createItem"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ItemRequest"
            examples:
              without-identifier:
                value:
                  name: "Blood Pressure Monitor"
                  model: "iBloodPressureMonitor123"
              with-identifier:
                value:
                  name: "Blood Pressure Monitor"
                  model: "iBloodPressureMonitor123"
                  deviceIdentifierType: "serial"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ItemDetailed"
              examples:
                itemRequestResponse:
                  value:
                    id: 791
                    manufacturer:
                      id: 2
                      name: "Custom Manufacturer"
                    name: "Blood Pressure Monitor"
                    model: "iBloodPressureMonitor123"
                    sku: "0000001"
                    orderable: false
                    deviceIdentifierType: "imei"
                    itemClass: "glucose"
                    itemClassType: "bpMonitor"
                    size: "large"
                    dimensions:
                      length: 1.5
                      width: 1.0
                      height: 0.75
                      unit: "in"
                    readingType: "bloodGlucose"
      x-request-example-without-identifier: "itemRequestWithoutIdentifier"
      x-request-example-with-identifier: "itemRequestWithIdentifier"
      x-response-example: "itemRequestResponse"
      externalDocs:
        url: "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_ItemRequest"
  /api/v3/item/{itemId}:
    get:
      tags:
      - "Items"
      description: "This endpoint returns the Item specified by ID in the URL path.\n"
      operationId: "fetchItem"
      parameters:
      - name: "itemId"
        in: "path"
        description: "The ID of the Item to be returned."
        required: true
        schema:
          format: "int64"
          type: "integer"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ItemDetailed"
              examples:
                fullItem:
                  value:
                    id: 791
                    manufacturer:
                      id: 2
                      name: "Custom Manufacturer"
                    name: "Blood Pressure Monitor"
                    model: "iBloodPressureMonitor123"
                    sku: "0000001"
                    deviceIdentifierType: "imei"
                    itemClass: "glucose"
                    itemClassType: "bpMonitor"
                    size: "large"
                    dimensions:
                      length: 1.5
                      width: 1.0
                      height: 0.75
                      unit: "in"
                    readingType: "bloodGlucose"
      x-response-example: "fullItem"
  /api/v3/kit:
    get:
      tags:
      - "Kits"
      description: "This endpoint returns a paginated list of all kits belonging to\
        \ a customer.\n\nYou can filter by the following parameters as query params:\n\
        - page (integer) -- The page number of the content returned.\n- size (integer)\
        \ -- The size of the page of content returned.\n- itemId (long) -- Shows only\
        \ kits that contain the specified Item ID.\n- archived (bool) -- Shows kits\
        \ that are/aren't archived, based on provided boolean value.\n"
      operationId: "listKits"
      parameters:
      - name: "page"
        in: "query"
        schema:
          format: "int32"
          type: "integer"
      - name: "size"
        in: "query"
        schema:
          format: "int32"
          type: "integer"
      - name: "itemId"
        in: "query"
        schema:
          format: "int64"
          type: "integer"
      - name: "archived"
        in: "query"
        schema:
          type: "boolean"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageKit"
              examples:
                listKitsResponse:
                  value:
                    content:
                    - id: 123
                      name: "Example Kit"
                      archived: false
                      kitItems:
                      - item:
                          id: 1
                          manufacturer:
                            id: 2
                            name: "Custom Manufacturer"
                          name: "Blood Pressure Monitor"
                          model: "iBloodPressureMonitor123"
                          sku: "0000001"
                        count: 1
                    page: 1
                    size: 15
                    total: 1
                    first: true
                    last: true
      x-response-example: "listKitsResponse"
  /api/v3/kit/{kitId}:
    get:
      tags:
      - "Kits"
      description: "This endpoint returns the Kit specified by ID in the URL path.\n"
      operationId: "fetchKit"
      parameters:
      - name: "kitId"
        in: "path"
        required: true
        schema:
          format: "int64"
          type: "integer"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Kit"
              examples:
                fetchKitResponse:
                  value:
                    id: 123
                    name: "Example Kit"
                    archived: false
                    kitItems:
                    - item:
                        id: 1
                        manufacturer:
                          id: 2
                          name: "Custom Manufacturer"
                        name: "Blood Pressure Monitor"
                        model: "iBloodPressureMonitor123"
                        sku: "0000001"
                      count: 1
      x-response-example: "fetchKitResponse"
  /api/v3/manufacturer:
    get:
      tags:
      - "Manufacturers"
      description: "This endpoint returns a paginated list of all manufacturers in\
        \ a customer's catalog.\n\nYou can filter by the following parameters as query\
        \ params:\n- page (integer) -- The page number of the content returned.\n\
        - size (integer) -- The size of the page of content returned.\n"
      operationId: "listManufacturers"
      parameters:
      - name: "page"
        in: "query"
        schema:
          format: "int32"
          type: "integer"
      - name: "size"
        in: "query"
        schema:
          format: "int32"
          type: "integer"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageManufacturer"
              examples:
                listManufacturersResponse:
                  value:
                    content:
                    - id: 2
                      name: "Custom Manufacturer"
                    page: 1
                    size: 15
                    total: 1
                    first: true
                    last: true
      x-response-example: "listManufacturersResponse"
  /api/v3/manufacturer/{manufacturerId}:
    get:
      tags:
      - "Manufacturers"
      description: "This endpoint returns the Manufacturer specified by ID in the\
        \ URL path.\n"
      operationId: "fetchManufacturer"
      parameters:
      - name: "manufacturerId"
        in: "path"
        required: true
        schema:
          format: "int64"
          type: "integer"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Manufacturer"
              examples:
                fetchManufacturerResponse:
                  value:
                    id: 2
                    name: "Custom Manufacturer"
      x-response-example: "fetchManufacturerResponse"
  /api/v3/order:
    get:
      tags:
      - "Orders"
      operationId: "listOrders"
      parameters:
      - name: "page"
        in: "query"
        schema:
          format: "int32"
          type: "integer"
      - name: "size"
        in: "query"
        schema:
          format: "int32"
          type: "integer"
      - name: "patientId"
        in: "query"
        schema:
          format: "int64"
          type: "integer"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageOrder"
    post:
      tags:
      - "Orders"
      description: "This endpoint is for creating orders linked to either a patient\
        \ or a site, with order content specified by item or kit IDs and an association\
        \ with a patient or site ID. Optional attributes offer further customization,\
        \ such as tracking through external order IDs.\\n\\nFor a comprehensive guide\
        \ on utilizing this endpoint, including examples, required and optional attributes,\
        \ and additional functionalities like listing and fetching orders, visit the\
        \ [Order Management Guide](/guides/order-management).\n***\nFor more information\
        \ see the [Order Model](/resources/models#schema_Order)."
      operationId: "createOrder"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Order"
            examples:
              existing-patient-order:
                value:
                  externalOrderIds:
                  - "xyz_123_0"
                  - "xyz_123_1"
                  - "xyz_123_2"
                  - "xyz_123_3"
                  patient:
                    id: 1234
                    sex: "unknown"
                  orderItems:
                  - item:
                      id: 1000
                    count: 10
                  - item:
                      id: 1001
                    count: 10
                  - item:
                      id: 1002
                    count: 10
                  - item:
                      id: 1003
                    count: 10
                  orderKits:
                  - kit:
                      id: 1000
                    count: 10
                  - kit:
                      id: 1001
                    count: 10
                  - kit:
                      id: 1002
                    count: 10
                  - kit:
                      id: 1003
                    count: 10
                  shippingOption: "standard"
              new-patient-order:
                value:
                  externalOrderIds:
                  - "xyz_123_0"
                  - "xyz_123_1"
                  - "xyz_123_2"
                  - "xyz_123_3"
                  patient:
                    firstName: "Steven"
                    lastName: "Glansberg"
                    email: "steve.g@gmail.com"
                    address:
                      lineOne: "123 Main Street"
                      city: "Anytown"
                      state: "PA"
                      zipCode: "19334"
                    sex: "unknown"
                  orderItems:
                  - item:
                      id: 1000
                    count: 10
                  - item:
                      id: 1001
                    count: 10
                  - item:
                      id: 1002
                    count: 10
                  - item:
                      id: 1003
                    count: 10
                  orderKits:
                  - kit:
                      id: 1000
                    count: 10
                  - kit:
                      id: 1001
                    count: 10
                  - kit:
                      id: 1002
                    count: 10
                  - kit:
                      id: 1003
                    count: 10
                  shippingOption: "standard"
              site-order:
                value:
                  externalOrderIds:
                  - "xyz_123_0"
                  - "xyz_123_1"
                  - "xyz_123_2"
                  - "xyz_123_3"
                  site:
                    id: 1234
                  orderItems:
                  - item:
                      id: 1000
                    count: 10
                  - item:
                      id: 1001
                    count: 10
                  - item:
                      id: 1002
                    count: 10
                  - item:
                      id: 1003
                    count: 10
                  orderKits:
                  - kit:
                      id: 1000
                    count: 10
                  - kit:
                      id: 1001
                    count: 10
                  - kit:
                      id: 1002
                    count: 10
                  - kit:
                      id: 1003
                    count: 10
                  shippingOption: "standard"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
      x-request-example-existing-patient-order: "createRequestExampleExistingPatientOrder"
      x-request-example-new-patient-order: "createRequestExampleNewPatientOrder"
      x-request-example-site-order: "createRequestExampleNewSiteOrder"
      externalDocs:
        url: "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_Order"
  /api/v3/order/{orderId}:
    get:
      tags:
      - "Orders"
      operationId: "fetchOrder"
      parameters:
      - name: "orderId"
        in: "path"
        required: true
        schema:
          format: "int64"
          type: "integer"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
    delete:
      tags:
      - "Orders"
      operationId: "voidOrder"
      parameters:
      - name: "orderId"
        in: "path"
        required: true
        schema:
          format: "int64"
          type: "integer"
      responses:
        "204":
          description: "No Content"
  /api/v3/patient:
    get:
      tags:
      - "Patients"
      description: "Retrieves a paginated list of patients. Optional parameters allow\
        \ specifying the page number and page size."
      operationId: "listPatients"
      parameters:
      - name: "page"
        in: "query"
        description: "The page number of the content returned."
        schema:
          format: "int32"
          type: "integer"
      - name: "size"
        in: "query"
        description: "The size of the page of content returned."
        schema:
          format: "int32"
          type: "integer"
      - name: "sort"
        in: "query"
        description: "The attribute to sort on."
        schema:
          $ref: "#/components/schemas/PatientSort"
      - name: "sortDescending"
        in: "query"
        description: "True if the sort direction should be descending."
        schema:
          type: "boolean"
      - name: "id"
        in: "query"
        description: "Lists only patients with the IDs provided."
        schema:
          type: "array"
          items:
            format: "int64"
            type: "integer"
      - name: "siteId"
        in: "query"
        description: "Lists only patients with the site IDs provided."
        schema:
          type: "array"
          items:
            format: "int64"
            type: "integer"
      - name: "externalIdentifier"
        in: "query"
        description: "Lists only patients with the external identifiers provided."
        schema:
          type: "array"
          items:
            type: "string"
      - name: "email"
        in: "query"
        description: "Lists only patients with the provided email."
        schema:
          type: "string"
      - name: "name"
        in: "query"
        description: "Lists only patients with the provided name."
        schema:
          type: "string"
      - name: "archived"
        in: "query"
        description: "Lists only patients who are archived."
        schema:
          type: "boolean"
      - name: "enrolled"
        in: "query"
        description: "Lists only patients who are enrolled."
        schema:
          type: "boolean"
      - name: "dateOfBirthMin"
        in: "query"
        description: "Lists only patients born on or after the provided date."
        schema:
          $ref: "#/components/schemas/LocalDate"
      - name: "dateOfBirthMax"
        in: "query"
        description: "Lists only patients born on or before the provided date."
        schema:
          $ref: "#/components/schemas/LocalDate"
      - name: "postalCode"
        in: "query"
        description: "Lists only patients with the provided postal code."
        schema:
          type: "string"
      - name: "country"
        in: "query"
        description: "Lists only patients with the provided country."
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagePatient"
              examples:
                patientPagedResponseExample:
                  value:
                    content:
                    - id: 456
                      externalIdentifier: "external-identifier-123"
                      firstName: "John"
                      lastName: "Doe"
                      dateOfBirth: "1987-09-13"
                      email: "email@example.com"
                      phoneNumber: "111-222-3333"
                      address:
                        lineOne: "1234 Market Street"
                        lineTwo: "Suite 110"
                        city: "Philadelphia"
                        state: "PA"
                        zipCode: "19137"
                        country: "USA"
                      sex: "unknown"
                    - id: 457
                      externalIdentifier: "external-identifier-123"
                      firstName: "John"
                      lastName: "Doe"
                      dateOfBirth: "1987-09-13"
                      email: "email@example.com"
                      phoneNumber: "111-222-3333"
                      address:
                        lineOne: "1234 Market Street"
                        lineTwo: "Suite 110"
                        city: "Philadelphia"
                        state: "PA"
                        zipCode: "19137"
                        country: "USA"
                      sex: "unknown"
                    - id: 458
                      externalIdentifier: "external-identifier-123"
                      firstName: "John"
                      lastName: "Doe"
                      dateOfBirth: "1987-09-13"
                      email: "email@example.com"
                      phoneNumber: "111-222-3333"
                      address:
                        lineOne: "1234 Market Street"
                        lineTwo: "Suite 110"
                        city: "Philadelphia"
                        state: "PA"
                        zipCode: "19137"
                        country: "USA"
                      sex: "unknown"
                    - id: 459
                      externalIdentifier: "external-identifier-123"
                      firstName: "John"
                      lastName: "Doe"
                      dateOfBirth: "1987-09-13"
                      email: "email@example.com"
                      phoneNumber: "111-222-3333"
                      address:
                        lineOne: "1234 Market Street"
                        lineTwo: "Suite 110"
                        city: "Philadelphia"
                        state: "PA"
                        zipCode: "19137"
                        country: "USA"
                      sex: "unknown"
                    - id: 460
                      externalIdentifier: "external-identifier-123"
                      firstName: "John"
                      lastName: "Doe"
                      dateOfBirth: "1987-09-13"
                      email: "email@example.com"
                      phoneNumber: "111-222-3333"
                      address:
                        lineOne: "1234 Market Street"
                        lineTwo: "Suite 110"
                        city: "Philadelphia"
                        state: "PA"
                        zipCode: "19137"
                        country: "USA"
                      sex: "unknown"
                    page: 1
                    size: 5
                    total: 10
                    first: true
                    last: false
      x-response-example: "patientPagedResponseExample"
    post:
      tags:
      - "Patients"
      description: "Creates a new patient record with the provided details.\n***\n\
        For more information see the [Patient Model](/resources/models#schema_Patient)."
      operationId: "createPatient"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Patient"
            examples:
              create-patient:
                value:
                  id: 456
                  externalIdentifier: "external-identifier-123"
                  firstName: "John"
                  lastName: "Doe"
                  dateOfBirth: "1987-09-13"
                  email: "email@example.com"
                  phoneNumber: "111-222-3333"
                  address:
                    lineOne: "1234 Market Street"
                    lineTwo: "Suite 110"
                    city: "Philadelphia"
                    state: "PA"
                    zipCode: "19137"
                    country: "USA"
                  sex: "unknown"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Patient"
      x-request-example-create-patient: "ApiV3ControllerExamples.patient"
      externalDocs:
        url: "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_Patient"
  /api/v3/patient/find-by-email:
    post:
      tags:
      - "Patients"
      description: "Fetches details of a specific patient by their email address,\
        \ if exists.\n\nTo search, pass a JSON object in the Request Body with a single\
        \ \"email\" attribute\n and the email to search for.\n"
      operationId: "fetchPatientByEmail"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
            examples:
              fetchByEmailExample:
                value:
                  email: "email@example.com"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Patient"
      x-request-example: "fetchByEmailExample"
  /api/v3/patient/{patientId}:
    get:
      tags:
      - "Patients"
      description: "Fetches details of a specific patient by their unique ID."
      operationId: "fetchPatient"
      parameters:
      - name: "patientId"
        in: "path"
        required: true
        schema:
          format: "int64"
          type: "integer"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Patient"
              examples:
                patient:
                  value:
                    id: 456
                    externalIdentifier: "external-identifier-123"
                    firstName: "John"
                    lastName: "Doe"
                    dateOfBirth: "1987-09-13"
                    email: "email@example.com"
                    phoneNumber: "111-222-3333"
                    address:
                      lineOne: "1234 Market Street"
                      lineTwo: "Suite 110"
                      city: "Philadelphia"
                      state: "PA"
                      zipCode: "19137"
                      country: "USA"
                    sex: "unknown"
      x-response-example: "ApiV3ControllerExamples.patient"
    put:
      tags:
      - "Patients"
      description: "Updates an existing patient record with new details provided in\
        \ the request body.\n***\nFor more information see the [Patient Model](/resources/models#schema_Patient)."
      operationId: "updatePatient"
      parameters:
      - name: "patientId"
        in: "path"
        required: true
        schema:
          format: "int64"
          type: "integer"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Patient"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Patient"
      externalDocs:
        url: "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_Patient"
    patch:
      tags:
      - "Patients"
      description: "Applies a partial update to a patient's record, modifying only\
        \ the fields provided in the request body.\n***\nFor more information see\
        \ the [Patient Model](/resources/models#schema_Patient)."
      operationId: "patchPatient"
      parameters:
      - name: "patientId"
        in: "path"
        required: true
        schema:
          format: "int64"
          type: "integer"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Patient"
            examples:
              update-patient-email:
                value:
                  email: "new-email@example.com"
                  sex: "unknown"
              update-patient-external-identifier:
                value:
                  externalIdentifier: "new-external-id-123"
                  sex: "unknown"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Patient"
      x-request-example-update-patient-email: "patchPatientEmailExample"
      x-request-example-update-patient-external-identifier: "patchPatientExternalIdentifierExample"
      externalDocs:
        url: "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_Patient"
  /api/v3/procurement:
    post:
      tags:
      - "Procurements"
      description: "Creates a new procurement with the provided details.\n***\nFor\
        \ more information see the [Procurement Model](/resources/models#schema_Procurement)."
      operationId: "createProcurementRequest"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Procurement"
      responses:
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                format: "int64"
                type: "integer"
      externalDocs:
        url: "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_Procurement"
  /api/v3/procurement/receipt:
    post:
      tags:
      - "Procurements"
      description: "Creates a new procurement shipping receipt with the provided details.\n\
        ***\nFor more information see the [Procurement Model](/resources/models#schema_Procurement)."
      operationId: "createShippingNotice"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Procurement"
      responses:
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                format: "int64"
                type: "integer"
      externalDocs:
        url: "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_Procurement"
  /api/v3/procurement/{procId}/upload:
    get:
      tags:
      - "Procurements"
      description: "Fetches the uploaded file from the provided Procurement ID, if\
        \ exists.\n"
      operationId: "fetchProcurementDocument"
      parameters:
      - name: "procId"
        in: "path"
        description: "The Procurement ID to fetch the CSV from."
        required: true
        schema:
          format: "int64"
          type: "integer"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                format: "binary"
                type: "string"
    post:
      tags:
      - "Procurements"
      description: "Uploads a file to the provided Procurement ID and makes accessible\
        \ to the Impilo Warehouse team for viewing.\n\nContent-Type must be set to\
        \ form-data, with a parameter of 'file' containing the CSV.\n"
      operationId: "uploadProcurementDocument"
      parameters:
      - name: "procId"
        in: "path"
        description: "The Procurement ID to attach the CSV to."
        required: true
        schema:
          format: "int64"
          type: "integer"
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: "object"
      responses:
        "201":
          description: "Created"
    delete:
      tags:
      - "Procurements"
      description: "Deletes the uploaded file from the provided Procurement ID, if\
        \ exists.\n"
      operationId: "deleteProcurementDocument"
      parameters:
      - name: "procId"
        in: "path"
        description: "The Procurement ID to delete the CSV from."
        required: true
        schema:
          format: "int64"
          type: "integer"
      responses:
        "204":
          description: "No Content"
  /api/v3/site:
    get:
      tags:
      - "Sites"
      description: "Returns a paginated list of your sites.\n\nOptional query parameters:\n\
        \    - page (integer) -- The page number of the sites returned.\n    - size\
        \ (integer) -- The number of sites returned per page.\n"
      operationId: "listSites"
      parameters:
      - name: "page"
        in: "query"
        schema:
          format: "int32"
          type: "integer"
      - name: "size"
        in: "query"
        schema:
          format: "int32"
          type: "integer"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageSite"
              examples:
                site:
                  value:
                    id: 561
                    name: "Building B"
                    active: true
                    address:
                      lineOne: "1234 Market Street"
                      lineTwo: "Suite 110"
                      city: "Philadelphia"
                      state: "PA"
                      zipCode: "19137"
                      country: "USA"
      x-response-example: "ApiV3ControllerExamples.site"
    post:
      tags:
      - "Sites"
      description: "Creates a new site with the provided details.\n\nReturns the site.\n\
        ***\nFor more information see the [Site Model](/resources/models#schema_Site)."
      operationId: "createSite"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Site"
            examples:
              create-site:
                value:
                  id: 561
                  name: "Building B"
                  active: true
                  address:
                    lineOne: "1234 Market Street"
                    lineTwo: "Suite 110"
                    city: "Philadelphia"
                    state: "PA"
                    zipCode: "19137"
                    country: "USA"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Site"
              examples:
                site:
                  value:
                    id: 561
                    name: "Building B"
                    active: true
                    address:
                      lineOne: "1234 Market Street"
                      lineTwo: "Suite 110"
                      city: "Philadelphia"
                      state: "PA"
                      zipCode: "19137"
                      country: "USA"
      x-request-example-create-site: "ApiV3ControllerExamples.site"
      x-response-example: "ApiV3ControllerExamples.site"
      externalDocs:
        url: "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_Site"
  /api/v3/site/{siteId}:
    get:
      tags:
      - "Sites"
      description: "Returns the site specified by the ID in the URL path."
      operationId: "fetchSite"
      parameters:
      - name: "siteId"
        in: "path"
        required: true
        schema:
          format: "int64"
          type: "integer"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Site"
              examples:
                site:
                  value:
                    id: 561
                    name: "Building B"
                    active: true
                    address:
                      lineOne: "1234 Market Street"
                      lineTwo: "Suite 110"
                      city: "Philadelphia"
                      state: "PA"
                      zipCode: "19137"
                      country: "USA"
      x-response-example: "ApiV3ControllerExamples.site"
    put:
      tags:
      - "Sites"
      description: "Update the site specified by the ID in the URL path with a new\
        \ site object.\n***\nFor more information see the [Site Model](/resources/models#schema_Site)."
      operationId: "updateSite"
      parameters:
      - name: "siteId"
        in: "path"
        required: true
        schema:
          format: "int64"
          type: "integer"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Site"
            examples:
              update-site:
                value:
                  id: 561
                  name: "Building B"
                  active: true
                  address:
                    lineOne: "1234 Market Street"
                    lineTwo: "Suite 110"
                    city: "Philadelphia"
                    state: "PA"
                    zipCode: "19137"
                    country: "USA"
      responses:
        "204":
          description: "No Content"
      x-request-example-update-site: "ApiV3ControllerExamples.site"
      externalDocs:
        url: "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_Site"
    patch:
      tags:
      - "Sites"
      description: "Partially update the site specified by the ID in the URL path\
        \ with a new site object.\n***\nFor more information see the [Site Model](/resources/models#schema_Site)."
      operationId: "patchSite"
      parameters:
      - name: "siteId"
        in: "path"
        required: true
        schema:
          format: "int64"
          type: "integer"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Site"
            examples:
              patch-site:
                value:
                  id: 561
                  name: "Building B"
                  active: true
                  address:
                    lineOne: "1234 Market Street"
                    lineTwo: "Suite 110"
                    city: "Philadelphia"
                    state: "PA"
                    zipCode: "19137"
                    country: "USA"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Site"
              examples:
                site:
                  value:
                    id: 561
                    name: "Building B"
                    active: true
                    address:
                      lineOne: "1234 Market Street"
                      lineTwo: "Suite 110"
                      city: "Philadelphia"
                      state: "PA"
                      zipCode: "19137"
                      country: "USA"
      x-request-example-patch-site: "ApiV3ControllerExamples.site"
      x-response-example: "ApiV3ControllerExamples.site"
      externalDocs:
        url: "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_Site"
  /api/v3/transfer/device-transfer-request:
    post:
      tags:
      - "Transfers"
      description: "Creates a Device Transfer Request, which specifies specific Device\
        \ Identifiers (such as\nSerial Numbers, IMEIs, etc) to transfer from the Requesting\
        \ customer-manufacturer to another\nCustomer account.\n\nTo complete the transfer\
        \ request, the following must be true:\n- The Customer account must be designated\
        \ as a Manufacturer\n- The Customer ID provided must be associated with the\
        \ Customer-Manufacturer making the request\n- The deviceIdentifiers parameter\
        \ must be a non-empty List of strings\n- All devices listed via the deviceIdentifiers\
        \ parameter must belong to the requesting Customer-Manufacturer\n- The Devices\
        \ listed via the deviceIdentifiers parameter must be in Available or Available\
        \ - Repacked status\n- Devices must not have a Patient assigned to them.\n\
        ***\nFor more information see the [DeviceTransferRequest Model](/resources/models#schema_DeviceTransferRequest)."
      operationId: "createDeviceTransferRequest"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeviceTransferRequest"
            examples:
              createDeviceTransferRequestExample:
                value:
                  toCustomerId: 8
                  deviceIdentifiers:
                  - "354833969951611"
                  - "A44-A0623930"
                  - "f51da43314fc"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                format: "int64"
                type: "integer"
      x-request-example: "createDeviceTransferRequestExample"
      externalDocs:
        url: "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_DeviceTransferRequest"
  /api/v3/transfer/item-transfer-request:
    post:
      tags:
      - "Transfers"
      description: "Creates an Item Transfer Request, which lists general Items and\
        \ Quantities to transfer from a\nCustomer-Manufacturer account to another\
        \ Customer account.\n\nTo complete the transfer request, the following must\
        \ be true:\n- The Customer account must be designated as a Manufacturer\n\
        - The Customer ID provided must be associated with the Customer-Manufacturer\
        \ making the request\n- The transfers parameter must be a non-empty list of\
        \ ItemTransfer objects\n- Each ItemTransfer's item parameter must include\
        \ an ID for the Item to be transferred\n- Each itemTransfer's item parameter\
        \ must be in both the Requesting AND Receiving customer catalogs\n- Each ItemTransfer's\
        \ quantity parameter must be an integer value greater than 0\n\nThe only requirement\
        \ for the ItemTransfer's item parameter is a JSON object that includes an\
        \ ID of the Item requested.\n***\nFor more information see the [ItemTransferRequest\
        \ Model](/resources/models#schema_ItemTransferRequest)."
      operationId: "createItemTransferRequest"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ItemTransferRequest"
            examples:
              createItemTransferRequestExample:
                value:
                  toCustomerId: 1
                  transfers:
                  - item:
                      id: 10
                      manufacturer:
                        id: 2
                        name: "Custom Manufacturer"
                      name: "Blood Pressure Monitor"
                      model: "iBloodPressureMonitor123"
                      sku: "0000001"
                    count: 20
                  - item:
                      id: 10
                      manufacturer:
                        id: 2
                        name: "Custom Manufacturer"
                      name: "Blood Pressure Monitor"
                      model: "iBloodPressureMonitor123"
                      sku: "0000001"
                    count: 20
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                format: "int64"
                type: "integer"
      x-request-example: "createItemTransferRequestExample"
      externalDocs:
        url: "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_ItemTransferRequest"
  /api/v3/transfer/transfer-request:
    get:
      tags:
      - "Transfers"
      description: "Retrieves a paginated list of Transfer Requests from the Impilo\
        \ platform."
      operationId: "listTransferRequests"
      parameters:
      - name: "page"
        in: "query"
        description: "The page number of the content returned."
        schema:
          format: "int32"
          default: "1"
          type: "integer"
      - name: "size"
        in: "query"
        description: "The size of the page returned. Max size is 100."
        schema:
          format: "int32"
          default: "15"
          type: "integer"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageTransferRequest"
  /api/v3/transfer/transfer-request/{id}:
    get:
      tags:
      - "Transfers"
      description: "Fetches a Transfer Request by ID from the Impilo platform."
      operationId: "fetchTransferRequest"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of the Transfer Request to fetch."
        required: true
        schema:
          format: "int64"
          type: "integer"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransferRequest"
              examples:
                item-transfer-request:
                  value:
                    id: 123
                    fromCustomer:
                      id: 2
                      name: "Customer 2"
                    toCustomer:
                      id: 3
                      name: "Customer 3"
                    currentStatus: "requested"
                    createdAt: "2024-08-08T14:03:30.918667500Z"
                    transferRequestNotes:
                    - note: "Note Text Here"
                      createdAt: "2024-08-08T14:03:30.918667500Z"
                    transferRequestEvents:
                    - name: "requested"
                      eventTimestamp: "2024-08-08T14:03:30.918667500Z"
                    requestedEntries:
                    - device:
                        id: 599
                        item:
                          id: 791
                          manufacturer:
                            id: 2
                            name: "Custom Manufacturer"
                          name: "Blood Pressure Monitor"
                          model: "iBloodPressureMonitor123"
                          sku: "0000001"
                        currentStatus: "withPatient"
                        currentPatient:
                          id: 456
                          externalIdentifier: "external-identifier-123"
                          firstName: "John"
                          lastName: "Doe"
                          dateOfBirth: "1987-09-13"
                          email: "email@example.com"
                          phoneNumber: "111-222-3333"
                          address:
                            lineOne: "1234 Market Street"
                            lineTwo: "Suite 110"
                            city: "Philadelphia"
                            state: "PA"
                            zipCode: "19137"
                            country: "USA"
                          sex: "unknown"
                        deviceIdentifiers:
                        - type: "imei"
                          value: "354833969951611"
                        - type: "serial"
                          value: "A44-A0623930"
                        - type: "macAddress"
                          value: "f51da43314fc"
                        disabledReadings: false
                device-transfer-request:
                  value:
                    id: 123
                    fromCustomer:
                      id: 2
                      name: "Customer 2"
                    toCustomer:
                      id: 3
                      name: "Customer 3"
                    currentStatus: "requested"
                    createdAt: "2024-08-08T14:03:31.059381700Z"
                    transferRequestNotes:
                    - note: "Note Text Here"
                      createdAt: "2024-08-08T14:03:31.059381700Z"
                    transferRequestEvents:
                    - name: "requested"
                      eventTimestamp: "2024-08-08T14:03:31.059381700Z"
                    requestedEntries:
                    - item:
                        id: 791
                        manufacturer:
                          id: 2
                          name: "Custom Manufacturer"
                        name: "Blood Pressure Monitor"
                        model: "iBloodPressureMonitor123"
                        sku: "0000001"
                      quantity: 5
      x-response-example-item-transfer-request: "createItemTransferResponseExample"
      x-response-example-device-transfer-request: "createDeviceTransferResponseExample"
  /api/v3/webhook:
    get:
      tags:
      - "Webhooks"
      description: "This endpoint retrieves a paginated list of V3 webhooks that the\
        \ associated Customer is subscribed to.\n"
      operationId: "listWebhooks"
      parameters:
      - name: "page"
        in: "query"
        schema:
          format: "int32"
          type: "integer"
      - name: "size"
        in: "query"
        schema:
          format: "int32"
          type: "integer"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageWebhook"
              examples:
                ListWebhooksResponse:
                  value:
                    content:
                    - id: 123
                      type: "order.status"
                      url: "https://impilo.health"
                    page: 1
                    size: 15
                    total: 1
                    first: true
                    last: true
      x-response-example: "ListWebhooksResponse"
    post:
      tags:
      - "Webhooks"
      description: "This endpoint creates a V3 webhook subscription of the type provided\
        \ in the ***type*** attribute of the Webhook object.\n> Note: This endpoint\
        \ will create a V3 webhook -- you cannot view V3 webhooks from the V1 or V2\
        \ endpoints.\n***\nFor more information see the [Webhook Model](/resources/models#schema_Webhook)."
      operationId: "createWebhook"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Webhook"
            examples:
              WebhookRequestExample:
                value:
                  type: "order.status"
                  url: "https://impilo.health"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Webhook"
              examples:
                WebhookResponseExample:
                  value:
                    id: 123
                    type: "order.status"
                    url: "https://impilo.health"
      x-request-example: "WebhookRequestExample"
      x-response-example: "WebhookResponseExample"
      externalDocs:
        url: "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_Webhook"
  /api/v3/webhook-secret:
    get:
      tags:
      - "Webhooks"
      description: "Gets your Webhook Secret if it exists. Otherwise returns an error.\n"
      operationId: "fetchWebhookSecret"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebhookSecret"
    post:
      tags:
      - "Webhooks"
      description: "Creates a Webhook Secret to use with the Impilo Platform with\
        \ the provides `secret`. The secret will be passed along as a header with\n\
        Webhooks sent from Impilo.\n\nReturns an error if you already have a Webhook\
        \ secret created.\n***\nFor more information see the [WebhookSecret Model](/resources/models#schema_WebhookSecret)."
      operationId: "createWebhookSecret"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WebhookSecret"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebhookSecret"
      externalDocs:
        url: "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_WebhookSecret"
    delete:
      tags:
      - "Webhooks"
      description: "Deletes your Webhook secret if it exists.\n\nReturns an error\
        \ if you don't have a secret configured.\n"
      operationId: "deleteWebhookSecret"
      responses:
        "204":
          description: "No Content"
    patch:
      tags:
      - "Webhooks"
      description: "Updates your Webhook Secret if it exists. Requires a `secret`\
        \ parameter.\n\nReturns an error if you don't have a secret configured.\n\
        ***\nFor more information see the [WebhookSecret Model](/resources/models#schema_WebhookSecret)."
      operationId: "updateWebhookSecret"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WebhookSecret"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebhookSecret"
      externalDocs:
        url: "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_WebhookSecret"
  /api/v3/webhook/logs:
    get:
      tags:
      - "Webhooks"
      description: "Retrieves a paginated list of webhook logs that record historical\
        \ attempts to send webhook payloads to a customer's servers. This endpoint\
        \ allows filtering logs based on webhook type, creation timestamp range, retry\
        \ attempts range, last response status, last retry timestamp range, and pagination\
        \ settings. It is useful for auditing and debugging purposes."
      operationId: "listWebhookLogs"
      parameters:
      - name: "webhookType"
        in: "query"
        description: "The webhook type"
        schema:
          $ref: "#/components/schemas/WebhookType"
      - name: "retryAttemptsMin"
        in: "query"
        description: "The minimum retry attempts"
        schema:
          format: "int32"
          type: "integer"
      - name: "retryAttemptsMax"
        in: "query"
        description: "The maximum retry attempts"
        schema:
          format: "int32"
          type: "integer"
      - name: "lastResponseStatus"
        in: "query"
        description: "The last response status"
        schema:
          type: "array"
          items:
            format: "int32"
            type: "integer"
      - name: "startLastRetryTimestamp"
        in: "query"
        description: "The minimum last retry timestamp"
        schema:
          $ref: "#/components/schemas/Instant"
      - name: "endLastRetryTimestamp"
        in: "query"
        description: "The maximum last retry timestamp"
        schema:
          $ref: "#/components/schemas/Instant"
      - name: "startTimestamp"
        in: "query"
        description: "The minimum timestamp"
        schema:
          $ref: "#/components/schemas/Instant"
      - name: "endTimestamp"
        in: "query"
        description: "The maximum timestamp (exclusive)"
        schema:
          $ref: "#/components/schemas/Instant"
      - name: "page"
        in: "query"
        description: "The number of the page to retrieve (1 based)"
        schema:
          format: "int32"
          type: "integer"
      - name: "size"
        in: "query"
        description: "The number of items per page"
        schema:
          format: "int32"
          type: "integer"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageWebhookLog"
  /api/v3/webhook/{webhookId}:
    get:
      tags:
      - "Webhooks"
      description: "This endpoint retrieves a particular Webhook of a customer by\
        \ the ID provided in the path.\n"
      operationId: "fetchWebhook"
      parameters:
      - name: "webhookId"
        in: "path"
        required: true
        schema:
          format: "int64"
          type: "integer"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Webhook"
              examples:
                fetchWebhooksResponse:
                  value:
                    id: 123
                    type: "order.status"
                    url: "https://impilo.health"
      x-response-example: "fetchWebhooksResponse"
    delete:
      tags:
      - "Webhooks"
      description: "This endpoint deletes the specified Webhook from the customer's\
        \ subscriptions.\n"
      operationId: "deleteWebhook"
      parameters:
      - name: "webhookId"
        in: "path"
        required: true
        schema:
          format: "int64"
          type: "integer"
      responses:
        "204":
          description: "No Content"
    patch:
      tags:
      - "Webhooks"
      description: "This endpoint updates the specified Webhook with a new URL provided\
        \ in the request body.\n> Note: The provided URL must be different than the\
        \ existing URL of the webhook or a 400 response will be returned.\n***\nFor\
        \ more information see the [Webhook Model](/resources/models#schema_Webhook)."
      operationId: "patchWebhook"
      parameters:
      - name: "webhookId"
        in: "path"
        required: true
        schema:
          format: "int64"
          type: "integer"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Webhook"
            examples:
              updateWebhookRequestExample:
                value:
                  url: "https://impilo.health/new-url"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Webhook"
              examples:
                updateWebhookResponseExample:
                  value:
                    id: 123
                    type: "order.status"
                    url: "https://impilo.health/new-url"
      x-request-example: "updateWebhookRequestExample"
      x-response-example: "updateWebhookResponseExample"
      externalDocs:
        url: "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_Webhook"
  /api/v3/blood-glucose-reading:
    get:
      tags:
      - "Readings - Blood Glucose"
      description: "This endpoint returns a paginated list of Blood Glucose Readings\
        \ for the patients associated with a Customer.\n\nFiltering can be done by\
        \ any of the following query parameters:\n- page (integer) -- The page number\
        \ of the content returned.\n- size (integer) -- The size of the page of content\
        \ returned.\n- patientId (long) -- The patient's Impilo identifier.\n- externalId\
        \ (string) -- Any external identifier associated with this patient.\n- startTimestamp\
        \ (string) -- An ISO-formatted string with an applicable timezone, such as\
        \ 2024-01-25T13:50:50.0Z\n- endTimestamp (string) -- An ISO-formatted string\
        \ with an applicable timezone, such as 2024-01-27T13:50:50.0Z\n"
      operationId: "listBloodGlucoseReadings"
      parameters:
      - name: "page"
        in: "query"
        schema:
          format: "int32"
          type: "integer"
      - name: "size"
        in: "query"
        schema:
          format: "int32"
          type: "integer"
      - name: "patientId"
        in: "query"
        schema:
          format: "int64"
          type: "integer"
      - name: "externalIdentifier"
        in: "query"
        schema:
          type: "string"
      - name: "startTimestamp"
        in: "query"
        schema:
          type: "string"
      - name: "endTimestamp"
        in: "query"
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageBloodGlucoseReading"
              examples:
                bloodGlucoseReadingPagedResponseExample:
                  value:
                    content:
                    - id: 42
                      patient:
                        id: 456
                        externalIdentifier: "external-identifier-123"
                        firstName: "John"
                        lastName: "Doe"
                        dateOfBirth: "1987-09-13"
                        email: "email@example.com"
                        phoneNumber: "111-222-3333"
                        address:
                          lineOne: "1234 Market Street"
                          lineTwo: "Suite 110"
                          city: "Philadelphia"
                          state: "PA"
                          zipCode: "19137"
                          country: "USA"
                        sex: "unknown"
                      item:
                        id: 791
                        manufacturer:
                          id: 2
                          name: "Custom Manufacturer"
                        name: "Blood Pressure Monitor"
                        model: "iBloodPressureMonitor123"
                        sku: "0000001"
                      device:
                        id: 599
                        item:
                          id: 791
                          manufacturer:
                            id: 2
                            name: "Custom Manufacturer"
                          name: "Blood Pressure Monitor"
                          model: "iBloodPressureMonitor123"
                          sku: "0000001"
                        currentStatus: "withPatient"
                        currentPatient:
                          id: 456
                          externalIdentifier: "external-identifier-123"
                          firstName: "John"
                          lastName: "Doe"
                          dateOfBirth: "1987-09-13"
                          email: "email@example.com"
                          phoneNumber: "111-222-3333"
                          address:
                            lineOne: "1234 Market Street"
                            lineTwo: "Suite 110"
                            city: "Philadelphia"
                            state: "PA"
                            zipCode: "19137"
                            country: "USA"
                          sex: "unknown"
                        deviceIdentifiers:
                        - type: "imei"
                          value: "354833969951611"
                        - type: "serial"
                          value: "A44-A0623930"
                        - type: "macAddress"
                          value: "f51da43314fc"
                        disabledReadings: false
                      readingTimestamp: "2024-07-04T00:00:00Z"
                      glucose: 88
                      glucoseUnit: "mgdl"
                      manual: false
                      beforeMeal: false
                      afterMeal: false
                    - id: 43
                      patient:
                        id: 456
                        externalIdentifier: "external-identifier-123"
                        firstName: "John"
                        lastName: "Doe"
                        dateOfBirth: "1987-09-13"
                        email: "email@example.com"
                        phoneNumber: "111-222-3333"
                        address:
                          lineOne: "1234 Market Street"
                          lineTwo: "Suite 110"
                          city: "Philadelphia"
                          state: "PA"
                          zipCode: "19137"
                          country: "USA"
                        sex: "unknown"
                      item:
                        id: 791
                        manufacturer:
                          id: 2
                          name: "Custom Manufacturer"
                        name: "Blood Pressure Monitor"
                        model: "iBloodPressureMonitor123"
                        sku: "0000001"
                      device:
                        id: 599
                        item:
                          id: 791
                          manufacturer:
                            id: 2
                            name: "Custom Manufacturer"
                          name: "Blood Pressure Monitor"
                          model: "iBloodPressureMonitor123"
                          sku: "0000001"
                        currentStatus: "withPatient"
                        currentPatient:
                          id: 456
                          externalIdentifier: "external-identifier-123"
                          firstName: "John"
                          lastName: "Doe"
                          dateOfBirth: "1987-09-13"
                          email: "email@example.com"
                          phoneNumber: "111-222-3333"
                          address:
                            lineOne: "1234 Market Street"
                            lineTwo: "Suite 110"
                            city: "Philadelphia"
                            state: "PA"
                            zipCode: "19137"
                            country: "USA"
                          sex: "unknown"
                        deviceIdentifiers:
                        - type: "imei"
                          value: "354833969951611"
                        - type: "serial"
                          value: "A44-A0623930"
                        - type: "macAddress"
                          value: "f51da43314fc"
                        disabledReadings: false
                      readingTimestamp: "2024-07-04T00:00:00Z"
                      glucose: 88
                      glucoseUnit: "mgdl"
                      manual: false
                      beforeMeal: false
                      afterMeal: false
                    page: 1
                    size: 2
                    total: 4
                    first: true
                    last: false
      x-response-example: "bloodGlucoseReadingPagedResponseExample"
    post:
      tags:
      - "Readings - Blood Glucose"
      description: "Records a blood glucose reading based on the provided request.\
        \ Either a device ID, device identifier, or patient ID is required.\n***\n\
        For more information see the [BloodGlucoseReadingRequest Model](/resources/models#schema_BloodGlucoseReadingRequest)."
      operationId: "recordBloodGlucoseReading"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BloodGlucoseReadingRequest"
            examples:
              device:
                value:
                  deviceId: 599
                  readingTimestamp: "2024-07-04T00:00:00Z"
                  deviceTimeZoneOffset: -14400
                  glucose: 88
                  manual: false
                  beforeMeal: false
                  afterMeal: false
              device-identifier:
                value:
                  deviceIdentifier: "354833969951611"
                  readingTimestamp: "2024-07-04T00:00:00Z"
                  deviceTimeZoneOffset: -14400
                  glucose: 88
                  manual: false
                  beforeMeal: false
                  afterMeal: false
              patient:
                value:
                  patientId: 456
                  readingTimestamp: "2024-07-04T00:00:00Z"
                  deviceTimeZoneOffset: -14400
                  glucose: 88
                  manual: false
                  beforeMeal: false
                  afterMeal: false
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BloodGlucoseReading"
              examples:
                bloodGlucoseReadingResponseExample:
                  value:
                    id: 42
                    patient:
                      id: 456
                      externalIdentifier: "external-identifier-123"
                      firstName: "John"
                      lastName: "Doe"
                      dateOfBirth: "1987-09-13"
                      email: "email@example.com"
                      phoneNumber: "111-222-3333"
                      address:
                        lineOne: "1234 Market Street"
                        lineTwo: "Suite 110"
                        city: "Philadelphia"
                        state: "PA"
                        zipCode: "19137"
                        country: "USA"
                      sex: "unknown"
                    item:
                      id: 791
                      manufacturer:
                        id: 2
                        name: "Custom Manufacturer"
                      name: "Blood Pressure Monitor"
                      model: "iBloodPressureMonitor123"
                      sku: "0000001"
                    device:
                      id: 599
                      item:
                        id: 791
                        manufacturer:
                          id: 2
                          name: "Custom Manufacturer"
                        name: "Blood Pressure Monitor"
                        model: "iBloodPressureMonitor123"
                        sku: "0000001"
                      currentStatus: "withPatient"
                      currentPatient:
                        id: 456
                        externalIdentifier: "external-identifier-123"
                        firstName: "John"
                        lastName: "Doe"
                        dateOfBirth: "1987-09-13"
                        email: "email@example.com"
                        phoneNumber: "111-222-3333"
                        address:
                          lineOne: "1234 Market Street"
                          lineTwo: "Suite 110"
                          city: "Philadelphia"
                          state: "PA"
                          zipCode: "19137"
                          country: "USA"
                        sex: "unknown"
                      deviceIdentifiers:
                      - type: "imei"
                        value: "354833969951611"
                      - type: "serial"
                        value: "A44-A0623930"
                      - type: "macAddress"
                        value: "f51da43314fc"
                      disabledReadings: false
                    readingTimestamp: "2024-07-04T00:00:00Z"
                    glucose: 88
                    glucoseUnit: "mgdl"
                    manual: false
                    beforeMeal: false
                    afterMeal: false
      x-request-example-device: "bloodGlucoseReadingRequestDeviceExample"
      x-request-example-device-identifier: "bloodGlucoseReadingRequestDeviceIdentifierExample"
      x-request-example-patient: "bloodGlucoseReadingRequestPatientExample"
      x-response-example: "bloodGlucoseReadingResponseExample"
      externalDocs:
        url: "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_BloodGlucoseReadingRequest"
  /api/v3/blood-glucose-reading/export:
    get:
      tags:
      - "Readings - Blood Glucose"
      description: "Exports blood glucose readings for a specified patient within\
        \ a given date range as either an Excel spreadsheet or a CSV file. This endpoint\
        \ allows clients to specify a patient ID, and optional start and end dates\
        \ to filter the readings by date. If no patient ID is provided, readings for\
        \ all patients may be exported depending on the implementation. The 'excel'\
        \ parameter determines the format of the export: if true, the data is returned\
        \ in Excel format; otherwise, it is returned as CSV. The response is directly\
        \ streamed to the client as either 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\
        \ for Excel or 'text/csv' for CSV format.\n"
      operationId: "exportBloodGlucoseReadings"
      parameters:
      - name: "excel"
        in: "query"
        description: "Determines the format of the export: if true, the data is returned\
          \ in Excel format; otherwise, it is returned as CSV."
        schema:
          default: false
          type: "boolean"
      - name: "patientId"
        in: "query"
        description: "The ID of the patient whose blood glucose readings are to be\
          \ exported. If not provided, readings for all patients may be exported."
        schema:
          format: "int64"
          type: "integer"
      - name: "start"
        in: "query"
        description: "The start date for filtering blood glucose readings. Only readings\
          \ after or equal to this date will be included."
        schema:
          $ref: "#/components/schemas/Instant"
      - name: "end"
        in: "query"
        description: "The end date for filtering blood glucose readings. Only readings\
          \ before this date will be included."
        schema:
          $ref: "#/components/schemas/Instant"
      responses:
        default:
          content:
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                format: "binary"
                type: "string"
            text/csv:
              schema:
                format: "binary"
                type: "string"
  /api/v3/blood-glucose-reading/{readingId}:
    get:
      tags:
      - "Readings - Blood Glucose"
      description: "This endpoint returns a specific blood glucose reading based on\
        \ the reading identifier provided in the path.\n"
      operationId: "fetchBloodGlucoseReading"
      parameters:
      - name: "readingId"
        in: "path"
        required: true
        schema:
          format: "int64"
          type: "integer"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BloodGlucoseReading"
              examples:
                bloodGlucoseReadingResponseExample:
                  value:
                    id: 42
                    patient:
                      id: 456
                      externalIdentifier: "external-identifier-123"
                      firstName: "John"
                      lastName: "Doe"
                      dateOfBirth: "1987-09-13"
                      email: "email@example.com"
                      phoneNumber: "111-222-3333"
                      address:
                        lineOne: "1234 Market Street"
                        lineTwo: "Suite 110"
                        city: "Philadelphia"
                        state: "PA"
                        zipCode: "19137"
                        country: "USA"
                      sex: "unknown"
                    item:
                      id: 791
                      manufacturer:
                        id: 2
                        name: "Custom Manufacturer"
                      name: "Blood Pressure Monitor"
                      model: "iBloodPressureMonitor123"
                      sku: "0000001"
                    device:
                      id: 599
                      item:
                        id: 791
                        manufacturer:
                          id: 2
                          name: "Custom Manufacturer"
                        name: "Blood Pressure Monitor"
                        model: "iBloodPressureMonitor123"
                        sku: "0000001"
                      currentStatus: "withPatient"
                      currentPatient:
                        id: 456
                        externalIdentifier: "external-identifier-123"
                        firstName: "John"
                        lastName: "Doe"
                        dateOfBirth: "1987-09-13"
                        email: "email@example.com"
                        phoneNumber: "111-222-3333"
                        address:
                          lineOne: "1234 Market Street"
                          lineTwo: "Suite 110"
                          city: "Philadelphia"
                          state: "PA"
                          zipCode: "19137"
                          country: "USA"
                        sex: "unknown"
                      deviceIdentifiers:
                      - type: "imei"
                        value: "354833969951611"
                      - type: "serial"
                        value: "A44-A0623930"
                      - type: "macAddress"
                        value: "f51da43314fc"
                      disabledReadings: false
                    readingTimestamp: "2024-07-04T00:00:00Z"
                    glucose: 88
                    glucoseUnit: "mgdl"
                    manual: false
                    beforeMeal: false
                    afterMeal: false
      x-response-example: "bloodGlucoseReadingResponseExample"
  /api/v3/blood-oxygen-reading:
    get:
      tags:
      - "Readings - Blood Oxygen"
      description: "Retrieves a paginated list of blood oxygen readings from the Impilo\
        \ platform. Optional parameters can be used to filter the results by page\
        \ number, page size, patient ID, external ID, start timestamp, and end timestamp.\n"
      operationId: "listBloodOxygenReadings"
      parameters:
      - name: "page"
        in: "query"
        schema:
          format: "int32"
          type: "integer"
      - name: "size"
        in: "query"
        schema:
          format: "int32"
          type: "integer"
      - name: "patientId"
        in: "query"
        schema:
          format: "int64"
          type: "integer"
      - name: "externalIdentifier"
        in: "query"
        schema:
          type: "string"
      - name: "startTimestamp"
        in: "query"
        schema:
          type: "string"
      - name: "endTimestamp"
        in: "query"
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageBloodOxygenReading"
              examples:
                bloodOxygenReadingPagedResponseExample:
                  value:
                    content:
                    - id: 42
                      patient:
                        id: 456
                        externalIdentifier: "external-identifier-123"
                        firstName: "John"
                        lastName: "Doe"
                        dateOfBirth: "1987-09-13"
                        email: "email@example.com"
                        phoneNumber: "111-222-3333"
                        address:
                          lineOne: "1234 Market Street"
                          lineTwo: "Suite 110"
                          city: "Philadelphia"
                          state: "PA"
                          zipCode: "19137"
                          country: "USA"
                        sex: "unknown"
                      item:
                        id: 791
                        manufacturer:
                          id: 2
                          name: "Custom Manufacturer"
                        name: "Blood Pressure Monitor"
                        model: "iBloodPressureMonitor123"
                        sku: "0000001"
                      device:
                        id: 599
                        item:
                          id: 791
                          manufacturer:
                            id: 2
                            name: "Custom Manufacturer"
                          name: "Blood Pressure Monitor"
                          model: "iBloodPressureMonitor123"
                          sku: "0000001"
                        currentStatus: "withPatient"
                        currentPatient:
                          id: 456
                          externalIdentifier: "external-identifier-123"
                          firstName: "John"
                          lastName: "Doe"
                          dateOfBirth: "1987-09-13"
                          email: "email@example.com"
                          phoneNumber: "111-222-3333"
                          address:
                            lineOne: "1234 Market Street"
                            lineTwo: "Suite 110"
                            city: "Philadelphia"
                            state: "PA"
                            zipCode: "19137"
                            country: "USA"
                          sex: "unknown"
                        deviceIdentifiers:
                        - type: "imei"
                          value: "354833969951611"
                        - type: "serial"
                          value: "A44-A0623930"
                        - type: "macAddress"
                          value: "f51da43314fc"
                        disabledReadings: false
                      readingTimestamp: "2024-07-04T00:00:00Z"
                      bloodOxygen: 95
                      bloodOxygenUnit: "spo2"
                      heartRate: 90
                      heartRateUnit: "bpm"
                      manual: false
                    - id: 43
                      patient:
                        id: 456
                        externalIdentifier: "external-identifier-123"
                        firstName: "John"
                        lastName: "Doe"
                        dateOfBirth: "1987-09-13"
                        email: "email@example.com"
                        phoneNumber: "111-222-3333"
                        address:
                          lineOne: "1234 Market Street"
                          lineTwo: "Suite 110"
                          city: "Philadelphia"
                          state: "PA"
                          zipCode: "19137"
                          country: "USA"
                        sex: "unknown"
                      item:
                        id: 791
                        manufacturer:
                          id: 2
                          name: "Custom Manufacturer"
                        name: "Blood Pressure Monitor"
                        model: "iBloodPressureMonitor123"
                        sku: "0000001"
                      device:
                        id: 599
                        item:
                          id: 791
                          manufacturer:
                            id: 2
                            name: "Custom Manufacturer"
                          name: "Blood Pressure Monitor"
                          model: "iBloodPressureMonitor123"
                          sku: "0000001"
                        currentStatus: "withPatient"
                        currentPatient:
                          id: 456
                          externalIdentifier: "external-identifier-123"
                          firstName: "John"
                          lastName: "Doe"
                          dateOfBirth: "1987-09-13"
                          email: "email@example.com"
                          phoneNumber: "111-222-3333"
                          address:
                            lineOne: "1234 Market Street"
                            lineTwo: "Suite 110"
                            city: "Philadelphia"
                            state: "PA"
                            zipCode: "19137"
                            country: "USA"
                          sex: "unknown"
                        deviceIdentifiers:
                        - type: "imei"
                          value: "354833969951611"
                        - type: "serial"
                          value: "A44-A0623930"
                        - type: "macAddress"
                          value: "f51da43314fc"
                        disabledReadings: false
                      readingTimestamp: "2024-07-04T00:00:00Z"
                      bloodOxygen: 95
                      bloodOxygenUnit: "spo2"
                      heartRate: 90
                      heartRateUnit: "bpm"
                      manual: false
                    page: 1
                    size: 2
                    total: 4
                    first: true
                    last: false
      x-response-example: "bloodOxygenReadingPagedResponseExample"
    post:
      tags:
      - "Readings - Blood Oxygen"
      description: "Records a blood oxygen reading based on the provided request.\
        \ Either a device ID, device identifier, or patient ID is required.\n***\n\
        For more information see the [BloodOxygenReadingRequest Model](/resources/models#schema_BloodOxygenReadingRequest)."
      operationId: "recordBloodOxygenReading"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BloodOxygenReadingRequest"
            examples:
              device:
                value:
                  deviceId: 599
                  readingTimestamp: "2024-07-04T00:00:00Z"
                  deviceTimeZoneOffset: -14400
                  bloodOxygen: 88
                  heartRate: 77
                  manual: false
              device-identifier:
                value:
                  deviceIdentifier: "354833969951611"
                  readingTimestamp: "2024-07-04T00:00:00Z"
                  deviceTimeZoneOffset: -14400
                  bloodOxygen: 88
                  heartRate: 77
                  manual: false
              patient:
                value:
                  patientId: 456
                  readingTimestamp: "2024-07-04T00:00:00Z"
                  deviceTimeZoneOffset: -14400
                  bloodOxygen: 88
                  heartRate: 77
                  manual: false
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BloodOxygenReading"
              examples:
                bloodOxygenReadingResponseExample:
                  value:
                    id: 42
                    patient:
                      id: 456
                      externalIdentifier: "external-identifier-123"
                      firstName: "John"
                      lastName: "Doe"
                      dateOfBirth: "1987-09-13"
                      email: "email@example.com"
                      phoneNumber: "111-222-3333"
                      address:
                        lineOne: "1234 Market Street"
                        lineTwo: "Suite 110"
                        city: "Philadelphia"
                        state: "PA"
                        zipCode: "19137"
                        country: "USA"
                      sex: "unknown"
                    item:
                      id: 791
                      manufacturer:
                        id: 2
                        name: "Custom Manufacturer"
                      name: "Blood Pressure Monitor"
                      model: "iBloodPressureMonitor123"
                      sku: "0000001"
                    device:
                      id: 599
                      item:
                        id: 791
                        manufacturer:
                          id: 2
                          name: "Custom Manufacturer"
                        name: "Blood Pressure Monitor"
                        model: "iBloodPressureMonitor123"
                        sku: "0000001"
                      currentStatus: "withPatient"
                      currentPatient:
                        id: 456
                        externalIdentifier: "external-identifier-123"
                        firstName: "John"
                        lastName: "Doe"
                        dateOfBirth: "1987-09-13"
                        email: "email@example.com"
                        phoneNumber: "111-222-3333"
                        address:
                          lineOne: "1234 Market Street"
                          lineTwo: "Suite 110"
                          city: "Philadelphia"
                          state: "PA"
                          zipCode: "19137"
                          country: "USA"
                        sex: "unknown"
                      deviceIdentifiers:
                      - type: "imei"
                        value: "354833969951611"
                      - type: "serial"
                        value: "A44-A0623930"
                      - type: "macAddress"
                        value: "f51da43314fc"
                      disabledReadings: false
                    readingTimestamp: "2024-07-04T00:00:00Z"
                    bloodOxygen: 95
                    bloodOxygenUnit: "spo2"
                    heartRate: 90
                    heartRateUnit: "bpm"
                    manual: false
      x-request-example-device: "bloodOxygenReadingRequestDeviceExample"
      x-request-example-device-identifier: "bloodOxygenReadingRequestDeviceIdentifierExample"
      x-request-example-patient: "bloodOxygenReadingRequestPatientExample"
      x-response-example: "bloodOxygenReadingResponseExample"
      externalDocs:
        url: "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_BloodOxygenReadingRequest"
  /api/v3/blood-oxygen-reading/export:
    get:
      tags:
      - "Readings - Blood Oxygen"
      description: "Exports blood oxygen readings for a specified patient within a\
        \ given date range as either an Excel spreadsheet or a CSV file. This endpoint\
        \ facilitates the retrieval of blood oxygen data by allowing the specification\
        \ of a patient ID and optional start and end dates to narrow down the readings.\
        \ If no patient ID is specified, the service may return readings for all patients,\
        \ contingent on the service's implementation details. The 'excel' parameter\
        \ controls the output format: if set to true, the data is delivered in Excel\
        \ format; if false, it is delivered in CSV format. The data is streamed directly\
        \ to the client and can be consumed in the specified format.\n"
      operationId: "exportBloodOxygenReadings"
      parameters:
      - name: "excel"
        in: "query"
        description: "Determines the format of the export: if true, the data is returned\
          \ in Excel format; otherwise, it is returned as CSV."
        schema:
          default: false
          type: "boolean"
      - name: "patientId"
        in: "query"
        description: "The ID of the patient whose blood oxygen readings are to be\
          \ exported. If not provided, readings for all patients may be exported."
        schema:
          format: "int64"
          type: "integer"
      - name: "start"
        in: "query"
        description: "The start date for filtering blood oxygen readings. Only readings\
          \ after or equal to this date will be included."
        schema:
          $ref: "#/components/schemas/Instant"
      - name: "end"
        in: "query"
        description: "The end date for filtering blood oxygen readings. Only readings\
          \ before this date will be included."
        schema:
          $ref: "#/components/schemas/Instant"
      responses:
        default:
          content:
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                format: "binary"
                type: "string"
            text/csv:
              schema:
                format: "binary"
                type: "string"
  /api/v3/blood-oxygen-reading/{readingId}:
    get:
      tags:
      - "Readings - Blood Oxygen"
      description: "Fetches a specific Impilo blood oxygen reading by its ID.\n"
      operationId: "fetchBloodOxygenReading"
      parameters:
      - name: "readingId"
        in: "path"
        required: true
        schema:
          format: "int64"
          type: "integer"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BloodOxygenReading"
              examples:
                bloodOxygenReadingResponseExample:
                  value:
                    id: 42
                    patient:
                      id: 456
                      externalIdentifier: "external-identifier-123"
                      firstName: "John"
                      lastName: "Doe"
                      dateOfBirth: "1987-09-13"
                      email: "email@example.com"
                      phoneNumber: "111-222-3333"
                      address:
                        lineOne: "1234 Market Street"
                        lineTwo: "Suite 110"
                        city: "Philadelphia"
                        state: "PA"
                        zipCode: "19137"
                        country: "USA"
                      sex: "unknown"
                    item:
                      id: 791
                      manufacturer:
                        id: 2
                        name: "Custom Manufacturer"
                      name: "Blood Pressure Monitor"
                      model: "iBloodPressureMonitor123"
                      sku: "0000001"
                    device:
                      id: 599
                      item:
                        id: 791
                        manufacturer:
                          id: 2
                          name: "Custom Manufacturer"
                        name: "Blood Pressure Monitor"
                        model: "iBloodPressureMonitor123"
                        sku: "0000001"
                      currentStatus: "withPatient"
                      currentPatient:
                        id: 456
                        externalIdentifier: "external-identifier-123"
                        firstName: "John"
                        lastName: "Doe"
                        dateOfBirth: "1987-09-13"
                        email: "email@example.com"
                        phoneNumber: "111-222-3333"
                        address:
                          lineOne: "1234 Market Street"
                          lineTwo: "Suite 110"
                          city: "Philadelphia"
                          state: "PA"
                          zipCode: "19137"
                          country: "USA"
                        sex: "unknown"
                      deviceIdentifiers:
                      - type: "imei"
                        value: "354833969951611"
                      - type: "serial"
                        value: "A44-A0623930"
                      - type: "macAddress"
                        value: "f51da43314fc"
                      disabledReadings: false
                    readingTimestamp: "2024-07-04T00:00:00Z"
                    bloodOxygen: 95
                    bloodOxygenUnit: "spo2"
                    heartRate: 90
                    heartRateUnit: "bpm"
                    manual: false
      x-response-example: "bloodOxygenReadingResponseExample"
  /api/v3/blood-pressure-reading:
    get:
      tags:
      - "Readings - Blood Pressure"
      description: "Retrieves a paginated list of blood pressure readings from the\
        \ Impilo platform. Optional parameters can be used to filter the results by\
        \ page number, page size, patient ID, external ID, start timestamp, and end\
        \ timestamp."
      operationId: "listBloodPressureReadings"
      parameters:
      - name: "page"
        in: "query"
        schema:
          format: "int32"
          minimum: 1
          type: "integer"
      - name: "size"
        in: "query"
        schema:
          format: "int32"
          type: "integer"
      - name: "patientId"
        in: "query"
        schema:
          format: "int64"
          type: "integer"
      - name: "externalIdentifier"
        in: "query"
        schema:
          type: "string"
      - name: "startTimestamp"
        in: "query"
        schema:
          type: "string"
      - name: "endTimestamp"
        in: "query"
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageBloodPressureReading"
              examples:
                bloodPressureReadingPagedResponseExample:
                  value:
                    content:
                    - id: 42
                      patient:
                        id: 456
                        externalIdentifier: "external-identifier-123"
                        firstName: "John"
                        lastName: "Doe"
                        dateOfBirth: "1987-09-13"
                        email: "email@example.com"
                        phoneNumber: "111-222-3333"
                        address:
                          lineOne: "1234 Market Street"
                          lineTwo: "Suite 110"
                          city: "Philadelphia"
                          state: "PA"
                          zipCode: "19137"
                          country: "USA"
                        sex: "unknown"
                      item:
                        id: 791
                        manufacturer:
                          id: 2
                          name: "Custom Manufacturer"
                        name: "Blood Pressure Monitor"
                        model: "iBloodPressureMonitor123"
                        sku: "0000001"
                      device:
                        id: 599
                        item:
                          id: 791
                          manufacturer:
                            id: 2
                            name: "Custom Manufacturer"
                          name: "Blood Pressure Monitor"
                          model: "iBloodPressureMonitor123"
                          sku: "0000001"
                        currentStatus: "withPatient"
                        currentPatient:
                          id: 456
                          externalIdentifier: "external-identifier-123"
                          firstName: "John"
                          lastName: "Doe"
                          dateOfBirth: "1987-09-13"
                          email: "email@example.com"
                          phoneNumber: "111-222-3333"
                          address:
                            lineOne: "1234 Market Street"
                            lineTwo: "Suite 110"
                            city: "Philadelphia"
                            state: "PA"
                            zipCode: "19137"
                            country: "USA"
                          sex: "unknown"
                        deviceIdentifiers:
                        - type: "imei"
                          value: "354833969951611"
                        - type: "serial"
                          value: "A44-A0623930"
                        - type: "macAddress"
                          value: "f51da43314fc"
                        disabledReadings: false
                      readingTimestamp: "2024-07-04T00:00:00Z"
                      systolic: 120
                      systolicUnit: "mmhg"
                      diastolic: 80
                      diastolicUnit: "mmhg"
                      heartRate: 70
                      heartRateUnit: "bpm"
                      manual: false
                    - id: 43
                      patient:
                        id: 456
                        externalIdentifier: "external-identifier-123"
                        firstName: "John"
                        lastName: "Doe"
                        dateOfBirth: "1987-09-13"
                        email: "email@example.com"
                        phoneNumber: "111-222-3333"
                        address:
                          lineOne: "1234 Market Street"
                          lineTwo: "Suite 110"
                          city: "Philadelphia"
                          state: "PA"
                          zipCode: "19137"
                          country: "USA"
                        sex: "unknown"
                      item:
                        id: 791
                        manufacturer:
                          id: 2
                          name: "Custom Manufacturer"
                        name: "Blood Pressure Monitor"
                        model: "iBloodPressureMonitor123"
                        sku: "0000001"
                      device:
                        id: 599
                        item:
                          id: 791
                          manufacturer:
                            id: 2
                            name: "Custom Manufacturer"
                          name: "Blood Pressure Monitor"
                          model: "iBloodPressureMonitor123"
                          sku: "0000001"
                        currentStatus: "withPatient"
                        currentPatient:
                          id: 456
                          externalIdentifier: "external-identifier-123"
                          firstName: "John"
                          lastName: "Doe"
                          dateOfBirth: "1987-09-13"
                          email: "email@example.com"
                          phoneNumber: "111-222-3333"
                          address:
                            lineOne: "1234 Market Street"
                            lineTwo: "Suite 110"
                            city: "Philadelphia"
                            state: "PA"
                            zipCode: "19137"
                            country: "USA"
                          sex: "unknown"
                        deviceIdentifiers:
                        - type: "imei"
                          value: "354833969951611"
                        - type: "serial"
                          value: "A44-A0623930"
                        - type: "macAddress"
                          value: "f51da43314fc"
                        disabledReadings: false
                      readingTimestamp: "2024-07-04T00:00:00Z"
                      systolic: 120
                      systolicUnit: "mmhg"
                      diastolic: 80
                      diastolicUnit: "mmhg"
                      heartRate: 70
                      heartRateUnit: "bpm"
                      manual: false
                    page: 1
                    size: 2
                    total: 4
                    first: true
                    last: false
      x-response-example: "bloodPressureReadingPagedResponseExample"
    post:
      tags:
      - "Readings - Blood Pressure"
      description: "Records a blood pressure reading based on the provided request.\
        \ Either a device ID, device identifier, or patient ID is required.\n***\n\
        For more information see the [BloodPressureReadingRequest Model](/resources/models#schema_BloodPressureReadingRequest)."
      operationId: "recordBloodPressureReading"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BloodPressureReadingRequest"
            examples:
              device:
                value:
                  deviceId: 599
                  readingTimestamp: "2024-07-04T00:00:00Z"
                  deviceTimeZoneOffset: -14400
                  systolic: 132
                  diastolic: 72
                  heartRate: 78
                  manual: false
              device-identifier:
                value:
                  deviceIdentifier: "354833969951611"
                  readingTimestamp: "2024-07-04T00:00:00Z"
                  deviceTimeZoneOffset: -14400
                  systolic: 132
                  diastolic: 72
                  heartRate: 78
                  manual: false
              patient:
                value:
                  patientId: 456
                  readingTimestamp: "2024-07-04T00:00:00Z"
                  deviceTimeZoneOffset: -14400
                  systolic: 132
                  diastolic: 72
                  heartRate: 78
                  manual: false
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BloodPressureReading"
              examples:
                bloodPressureReadingResponseExample:
                  value:
                    id: 42
                    patient:
                      id: 456
                      externalIdentifier: "external-identifier-123"
                      firstName: "John"
                      lastName: "Doe"
                      dateOfBirth: "1987-09-13"
                      email: "email@example.com"
                      phoneNumber: "111-222-3333"
                      address:
                        lineOne: "1234 Market Street"
                        lineTwo: "Suite 110"
                        city: "Philadelphia"
                        state: "PA"
                        zipCode: "19137"
                        country: "USA"
                      sex: "unknown"
                    item:
                      id: 791
                      manufacturer:
                        id: 2
                        name: "Custom Manufacturer"
                      name: "Blood Pressure Monitor"
                      model: "iBloodPressureMonitor123"
                      sku: "0000001"
                    device:
                      id: 599
                      item:
                        id: 791
                        manufacturer:
                          id: 2
                          name: "Custom Manufacturer"
                        name: "Blood Pressure Monitor"
                        model: "iBloodPressureMonitor123"
                        sku: "0000001"
                      currentStatus: "withPatient"
                      currentPatient:
                        id: 456
                        externalIdentifier: "external-identifier-123"
                        firstName: "John"
                        lastName: "Doe"
                        dateOfBirth: "1987-09-13"
                        email: "email@example.com"
                        phoneNumber: "111-222-3333"
                        address:
                          lineOne: "1234 Market Street"
                          lineTwo: "Suite 110"
                          city: "Philadelphia"
                          state: "PA"
                          zipCode: "19137"
                          country: "USA"
                        sex: "unknown"
                      deviceIdentifiers:
                      - type: "imei"
                        value: "354833969951611"
                      - type: "serial"
                        value: "A44-A0623930"
                      - type: "macAddress"
                        value: "f51da43314fc"
                      disabledReadings: false
                    readingTimestamp: "2024-07-04T00:00:00Z"
                    systolic: 120
                    systolicUnit: "mmhg"
                    diastolic: 80
                    diastolicUnit: "mmhg"
                    heartRate: 70
                    heartRateUnit: "bpm"
                    manual: false
      x-request-example-device: "bloodPressureReadingRequestDeviceExample"
      x-request-example-device-identifier: "bloodPressureReadingRequestDeviceIdentifierExample"
      x-request-example-patient: "bloodPressureReadingRequestPatientExample"
      x-response-example: "bloodPressureReadingResponseExample"
      externalDocs:
        url: "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_BloodPressureReadingRequest"
  /api/v3/blood-pressure-reading/export:
    get:
      tags:
      - "Readings - Blood Pressure"
      description: "Provides an export of blood pressure readings for a specified\
        \ patient over a selected date range, available in either Excel or CSV format.\
        \ Users can specify a patient ID to retrieve data for a particular individual,\
        \ or leave the parameter empty to potentially export data for all patients,\
        \ depending on service implementation. Optional start and end date parameters\
        \ allow for filtering the data by the desired timeframe. The 'excel' flag\
        \ determines the format of the output; when true, the data is exported in\
        \ Excel format, otherwise, it is provided as a CSV file. The response consists\
        \ of a direct stream of the chosen data format to the client.\n"
      operationId: "exportBloodPressureReadings"
      parameters:
      - name: "excel"
        in: "query"
        description: "Determines the format of the export: if true, the data is returned\
          \ in Excel format; otherwise, it is returned as CSV."
        schema:
          default: false
          type: "boolean"
      - name: "patientId"
        in: "query"
        description: "The ID of the patient whose blood pressure readings are to be\
          \ exported. If not provided, readings for all patients may be exported."
        schema:
          format: "int64"
          type: "integer"
      - name: "start"
        in: "query"
        description: "The start date for filtering blood pressure readings. Only readings\
          \ after or equal to this date will be included."
        schema:
          $ref: "#/components/schemas/Instant"
      - name: "end"
        in: "query"
        description: "The end date for filtering blood pressure readings. Only readings\
          \ before this date will be included."
        schema:
          $ref: "#/components/schemas/Instant"
      responses:
        default:
          content:
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                format: "binary"
                type: "string"
            text/csv:
              schema:
                format: "binary"
                type: "string"
  /api/v3/blood-pressure-reading/{readingId}:
    get:
      tags:
      - "Readings - Blood Pressure"
      description: "Fetches a specific Impilo blood pressure reading by its ID."
      operationId: "fetchBloodPressureReading"
      parameters:
      - name: "readingId"
        in: "path"
        required: true
        schema:
          format: "int64"
          type: "integer"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BloodPressureReading"
              examples:
                bloodPressureReadingResponseExample:
                  value:
                    id: 42
                    patient:
                      id: 456
                      externalIdentifier: "external-identifier-123"
                      firstName: "John"
                      lastName: "Doe"
                      dateOfBirth: "1987-09-13"
                      email: "email@example.com"
                      phoneNumber: "111-222-3333"
                      address:
                        lineOne: "1234 Market Street"
                        lineTwo: "Suite 110"
                        city: "Philadelphia"
                        state: "PA"
                        zipCode: "19137"
                        country: "USA"
                      sex: "unknown"
                    item:
                      id: 791
                      manufacturer:
                        id: 2
                        name: "Custom Manufacturer"
                      name: "Blood Pressure Monitor"
                      model: "iBloodPressureMonitor123"
                      sku: "0000001"
                    device:
                      id: 599
                      item:
                        id: 791
                        manufacturer:
                          id: 2
                          name: "Custom Manufacturer"
                        name: "Blood Pressure Monitor"
                        model: "iBloodPressureMonitor123"
                        sku: "0000001"
                      currentStatus: "withPatient"
                      currentPatient:
                        id: 456
                        externalIdentifier: "external-identifier-123"
                        firstName: "John"
                        lastName: "Doe"
                        dateOfBirth: "1987-09-13"
                        email: "email@example.com"
                        phoneNumber: "111-222-3333"
                        address:
                          lineOne: "1234 Market Street"
                          lineTwo: "Suite 110"
                          city: "Philadelphia"
                          state: "PA"
                          zipCode: "19137"
                          country: "USA"
                        sex: "unknown"
                      deviceIdentifiers:
                      - type: "imei"
                        value: "354833969951611"
                      - type: "serial"
                        value: "A44-A0623930"
                      - type: "macAddress"
                        value: "f51da43314fc"
                      disabledReadings: false
                    readingTimestamp: "2024-07-04T00:00:00Z"
                    systolic: 120
                    systolicUnit: "mmhg"
                    diastolic: 80
                    diastolicUnit: "mmhg"
                    heartRate: 70
                    heartRateUnit: "bpm"
                    manual: false
      x-response-example: "bloodPressureReadingResponseExample"
  /api/v3/heart-rate-reading:
    get:
      tags:
      - "Readings - Heart Rate"
      description: "Retrieves a paginated list of heart rate readings from the Impilo\
        \ platform."
      operationId: "listHeartRateReadings"
      parameters:
      - name: "page"
        in: "query"
        schema:
          format: "int32"
          type: "integer"
      - name: "size"
        in: "query"
        schema:
          format: "int32"
          type: "integer"
      - name: "patientId"
        in: "query"
        schema:
          format: "int64"
          type: "integer"
      - name: "externalIdentifier"
        in: "query"
        schema:
          type: "string"
      - name: "startTimestamp"
        in: "query"
        schema:
          $ref: "#/components/schemas/Instant"
      - name: "endTimestamp"
        in: "query"
        schema:
          $ref: "#/components/schemas/Instant"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageHeartRateReading"
              examples:
                heartRateReadingPagedResponseExample:
                  value:
                    content:
                    - id: 42
                      patient:
                        id: 456
                        externalIdentifier: "external-identifier-123"
                        firstName: "John"
                        lastName: "Doe"
                        dateOfBirth: "1987-09-13"
                        email: "email@example.com"
                        phoneNumber: "111-222-3333"
                        address:
                          lineOne: "1234 Market Street"
                          lineTwo: "Suite 110"
                          city: "Philadelphia"
                          state: "PA"
                          zipCode: "19137"
                          country: "USA"
                        sex: "unknown"
                      item:
                        id: 791
                        manufacturer:
                          id: 2
                          name: "Custom Manufacturer"
                        name: "Blood Pressure Monitor"
                        model: "iBloodPressureMonitor123"
                        sku: "0000001"
                      device:
                        id: 599
                        item:
                          id: 791
                          manufacturer:
                            id: 2
                            name: "Custom Manufacturer"
                          name: "Blood Pressure Monitor"
                          model: "iBloodPressureMonitor123"
                          sku: "0000001"
                        currentStatus: "withPatient"
                        currentPatient:
                          id: 456
                          externalIdentifier: "external-identifier-123"
                          firstName: "John"
                          lastName: "Doe"
                          dateOfBirth: "1987-09-13"
                          email: "email@example.com"
                          phoneNumber: "111-222-3333"
                          address:
                            lineOne: "1234 Market Street"
                            lineTwo: "Suite 110"
                            city: "Philadelphia"
                            state: "PA"
                            zipCode: "19137"
                            country: "USA"
                          sex: "unknown"
                        deviceIdentifiers:
                        - type: "imei"
                          value: "354833969951611"
                        - type: "serial"
                          value: "A44-A0623930"
                        - type: "macAddress"
                          value: "f51da43314fc"
                        disabledReadings: false
                      readingTimestamp: "2024-07-04T00:00:00Z"
                      manual: false
                      heartRate: 70
                    - id: 43
                      patient:
                        id: 456
                        externalIdentifier: "external-identifier-123"
                        firstName: "John"
                        lastName: "Doe"
                        dateOfBirth: "1987-09-13"
                        email: "email@example.com"
                        phoneNumber: "111-222-3333"
                        address:
                          lineOne: "1234 Market Street"
                          lineTwo: "Suite 110"
                          city: "Philadelphia"
                          state: "PA"
                          zipCode: "19137"
                          country: "USA"
                        sex: "unknown"
                      item:
                        id: 791
                        manufacturer:
                          id: 2
                          name: "Custom Manufacturer"
                        name: "Blood Pressure Monitor"
                        model: "iBloodPressureMonitor123"
                        sku: "0000001"
                      device:
                        id: 599
                        item:
                          id: 791
                          manufacturer:
                            id: 2
                            name: "Custom Manufacturer"
                          name: "Blood Pressure Monitor"
                          model: "iBloodPressureMonitor123"
                          sku: "0000001"
                        currentStatus: "withPatient"
                        currentPatient:
                          id: 456
                          externalIdentifier: "external-identifier-123"
                          firstName: "John"
                          lastName: "Doe"
                          dateOfBirth: "1987-09-13"
                          email: "email@example.com"
                          phoneNumber: "111-222-3333"
                          address:
                            lineOne: "1234 Market Street"
                            lineTwo: "Suite 110"
                            city: "Philadelphia"
                            state: "PA"
                            zipCode: "19137"
                            country: "USA"
                          sex: "unknown"
                        deviceIdentifiers:
                        - type: "imei"
                          value: "354833969951611"
                        - type: "serial"
                          value: "A44-A0623930"
                        - type: "macAddress"
                          value: "f51da43314fc"
                        disabledReadings: false
                      readingTimestamp: "2024-07-04T00:00:00Z"
                      manual: false
                      heartRate: 70
                    page: 1
                    size: 2
                    total: 4
                    first: true
                    last: false
      x-response-example: "heartRateReadingPagedResponseExample"
    post:
      tags:
      - "Readings - Heart Rate"
      description: "Records a heart rate reading based on the provided request. Either\
        \ a device ID, device identifier, or patient ID is required.\n***\nFor more\
        \ information see the [HeartRateReadingRequest Model](/resources/models#schema_HeartRateReadingRequest)."
      operationId: "recordHeartRateReading"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/HeartRateReadingRequest"
            examples:
              heartRateReadingRequestExample:
                value:
                  deviceId: 599
                  deviceIdentifier: "354833969951611"
                  patientId: 456
                  readingTimestamp: "2024-07-04T00:00:00Z"
                  manual: false
                  heartRate: 70
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HeartRateReading"
              examples:
                heartRateReadingExample:
                  value:
                    id: 42
                    patient:
                      id: 456
                      externalIdentifier: "external-identifier-123"
                      firstName: "John"
                      lastName: "Doe"
                      dateOfBirth: "1987-09-13"
                      email: "email@example.com"
                      phoneNumber: "111-222-3333"
                      address:
                        lineOne: "1234 Market Street"
                        lineTwo: "Suite 110"
                        city: "Philadelphia"
                        state: "PA"
                        zipCode: "19137"
                        country: "USA"
                      sex: "unknown"
                    item:
                      id: 791
                      manufacturer:
                        id: 2
                        name: "Custom Manufacturer"
                      name: "Blood Pressure Monitor"
                      model: "iBloodPressureMonitor123"
                      sku: "0000001"
                    device:
                      id: 599
                      item:
                        id: 791
                        manufacturer:
                          id: 2
                          name: "Custom Manufacturer"
                        name: "Blood Pressure Monitor"
                        model: "iBloodPressureMonitor123"
                        sku: "0000001"
                      currentStatus: "withPatient"
                      currentPatient:
                        id: 456
                        externalIdentifier: "external-identifier-123"
                        firstName: "John"
                        lastName: "Doe"
                        dateOfBirth: "1987-09-13"
                        email: "email@example.com"
                        phoneNumber: "111-222-3333"
                        address:
                          lineOne: "1234 Market Street"
                          lineTwo: "Suite 110"
                          city: "Philadelphia"
                          state: "PA"
                          zipCode: "19137"
                          country: "USA"
                        sex: "unknown"
                      deviceIdentifiers:
                      - type: "imei"
                        value: "354833969951611"
                      - type: "serial"
                        value: "A44-A0623930"
                      - type: "macAddress"
                        value: "f51da43314fc"
                      disabledReadings: false
                    readingTimestamp: "2024-07-04T00:00:00Z"
                    manual: false
                    heartRate: 70
      x-request-example: "heartRateReadingRequestExample"
      x-response-example: "heartRateReadingExample"
      externalDocs:
        url: "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_HeartRateReadingRequest"
  /api/v3/heart-rate-reading/{readingId}:
    get:
      tags:
      - "Readings - Heart Rate"
      description: "Fetches a specific Impilo heart rate reading by its ID."
      operationId: "fetchHeartRateReading"
      parameters:
      - name: "readingId"
        in: "path"
        required: true
        schema:
          format: "int64"
          type: "integer"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HeartRateReading"
              examples:
                heartRateReadingExample:
                  value:
                    id: 42
                    patient:
                      id: 456
                      externalIdentifier: "external-identifier-123"
                      firstName: "John"
                      lastName: "Doe"
                      dateOfBirth: "1987-09-13"
                      email: "email@example.com"
                      phoneNumber: "111-222-3333"
                      address:
                        lineOne: "1234 Market Street"
                        lineTwo: "Suite 110"
                        city: "Philadelphia"
                        state: "PA"
                        zipCode: "19137"
                        country: "USA"
                      sex: "unknown"
                    item:
                      id: 791
                      manufacturer:
                        id: 2
                        name: "Custom Manufacturer"
                      name: "Blood Pressure Monitor"
                      model: "iBloodPressureMonitor123"
                      sku: "0000001"
                    device:
                      id: 599
                      item:
                        id: 791
                        manufacturer:
                          id: 2
                          name: "Custom Manufacturer"
                        name: "Blood Pressure Monitor"
                        model: "iBloodPressureMonitor123"
                        sku: "0000001"
                      currentStatus: "withPatient"
                      currentPatient:
                        id: 456
                        externalIdentifier: "external-identifier-123"
                        firstName: "John"
                        lastName: "Doe"
                        dateOfBirth: "1987-09-13"
                        email: "email@example.com"
                        phoneNumber: "111-222-3333"
                        address:
                          lineOne: "1234 Market Street"
                          lineTwo: "Suite 110"
                          city: "Philadelphia"
                          state: "PA"
                          zipCode: "19137"
                          country: "USA"
                        sex: "unknown"
                      deviceIdentifiers:
                      - type: "imei"
                        value: "354833969951611"
                      - type: "serial"
                        value: "A44-A0623930"
                      - type: "macAddress"
                        value: "f51da43314fc"
                      disabledReadings: false
                    readingTimestamp: "2024-07-04T00:00:00Z"
                    manual: false
                    heartRate: 70
      x-response-example: "heartRateReadingExample"
  /api/v3/heart-rate-variability-reading:
    get:
      tags:
      - "Readings - Heart Rate Variability"
      description: "Retrieves a paginated list of heart rate variability readings\
        \ from the Impilo platform."
      operationId: "listHeartRateVariabilityReadings"
      parameters:
      - name: "page"
        in: "query"
        schema:
          format: "int32"
          type: "integer"
      - name: "size"
        in: "query"
        schema:
          format: "int32"
          type: "integer"
      - name: "patientId"
        in: "query"
        schema:
          format: "int64"
          type: "integer"
      - name: "externalIdentifier"
        in: "query"
        schema:
          type: "string"
      - name: "startTimestamp"
        in: "query"
        schema:
          $ref: "#/components/schemas/Instant"
      - name: "endTimestamp"
        in: "query"
        schema:
          $ref: "#/components/schemas/Instant"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageHeartRateVariabilityReading"
              examples:
                heartRateVariabilityReadingPagedResponseExample:
                  value:
                    content:
                    - id: 42
                      patient:
                        id: 456
                        externalIdentifier: "external-identifier-123"
                        firstName: "John"
                        lastName: "Doe"
                        dateOfBirth: "1987-09-13"
                        email: "email@example.com"
                        phoneNumber: "111-222-3333"
                        address:
                          lineOne: "1234 Market Street"
                          lineTwo: "Suite 110"
                          city: "Philadelphia"
                          state: "PA"
                          zipCode: "19137"
                          country: "USA"
                        sex: "unknown"
                      item:
                        id: 791
                        manufacturer:
                          id: 2
                          name: "Custom Manufacturer"
                        name: "Blood Pressure Monitor"
                        model: "iBloodPressureMonitor123"
                        sku: "0000001"
                      device:
                        id: 599
                        item:
                          id: 791
                          manufacturer:
                            id: 2
                            name: "Custom Manufacturer"
                          name: "Blood Pressure Monitor"
                          model: "iBloodPressureMonitor123"
                          sku: "0000001"
                        currentStatus: "withPatient"
                        currentPatient:
                          id: 456
                          externalIdentifier: "external-identifier-123"
                          firstName: "John"
                          lastName: "Doe"
                          dateOfBirth: "1987-09-13"
                          email: "email@example.com"
                          phoneNumber: "111-222-3333"
                          address:
                            lineOne: "1234 Market Street"
                            lineTwo: "Suite 110"
                            city: "Philadelphia"
                            state: "PA"
                            zipCode: "19137"
                            country: "USA"
                          sex: "unknown"
                        deviceIdentifiers:
                        - type: "imei"
                          value: "354833969951611"
                        - type: "serial"
                          value: "A44-A0623930"
                        - type: "macAddress"
                          value: "f51da43314fc"
                        disabledReadings: false
                      readingTimestamp: "2024-07-04T00:00:00Z"
                      manual: false
                      heartRate: 70
                      heartRateVariability: 10.0
                      heartRateVariabilityDuration: 100
                      heartRateVariabilityAlgorithmType: "sdann"
                    - id: 43
                      patient:
                        id: 456
                        externalIdentifier: "external-identifier-123"
                        firstName: "John"
                        lastName: "Doe"
                        dateOfBirth: "1987-09-13"
                        email: "email@example.com"
                        phoneNumber: "111-222-3333"
                        address:
                          lineOne: "1234 Market Street"
                          lineTwo: "Suite 110"
                          city: "Philadelphia"
                          state: "PA"
                          zipCode: "19137"
                          country: "USA"
                        sex: "unknown"
                      item:
                        id: 791
                        manufacturer:
                          id: 2
                          name: "Custom Manufacturer"
                        name: "Blood Pressure Monitor"
                        model: "iBloodPressureMonitor123"
                        sku: "0000001"
                      device:
                        id: 599
                        item:
                          id: 791
                          manufacturer:
                            id: 2
                            name: "Custom Manufacturer"
                          name: "Blood Pressure Monitor"
                          model: "iBloodPressureMonitor123"
                          sku: "0000001"
                        currentStatus: "withPatient"
                        currentPatient:
                          id: 456
                          externalIdentifier: "external-identifier-123"
                          firstName: "John"
                          lastName: "Doe"
                          dateOfBirth: "1987-09-13"
                          email: "email@example.com"
                          phoneNumber: "111-222-3333"
                          address:
                            lineOne: "1234 Market Street"
                            lineTwo: "Suite 110"
                            city: "Philadelphia"
                            state: "PA"
                            zipCode: "19137"
                            country: "USA"
                          sex: "unknown"
                        deviceIdentifiers:
                        - type: "imei"
                          value: "354833969951611"
                        - type: "serial"
                          value: "A44-A0623930"
                        - type: "macAddress"
                          value: "f51da43314fc"
                        disabledReadings: false
                      readingTimestamp: "2024-07-04T00:00:00Z"
                      manual: false
                      heartRate: 70
                      heartRateVariability: 10.0
                      heartRateVariabilityDuration: 100
                      heartRateVariabilityAlgorithmType: "sdann"
                    page: 1
                    size: 2
                    total: 4
                    first: true
                    last: false
      x-response-example: "heartRateVariabilityReadingPagedResponseExample"
    post:
      tags:
      - "Readings - Heart Rate Variability"
      description: "Records a heart rate variability reading based on the provided\
        \ request. Either a device ID, device identifier, or patient ID is required.\n\
        ***\nFor more information see the [HeartRateVariabilityReadingRequest Model](/resources/models#schema_HeartRateVariabilityReadingRequest)."
      operationId: "recordHeartRateVariabilityReading"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/HeartRateVariabilityReadingRequest"
            examples:
              heartRateVariabilityReadingRequestExample:
                value:
                  deviceId: 599
                  deviceIdentifier: "354833969951611"
                  patientId: 456
                  readingTimestamp: "2024-07-04T00:00:00Z"
                  manual: false
                  heartRate: 70
                  heartRateVariability: 10.0
                  heartRateVariabilityDuration: 100
                  heartRateVariabilityAlgorithmType: "sdann"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HeartRateVariabilityReading"
              examples:
                heartRateVariabilityReadingExample:
                  value:
                    id: 42
                    patient:
                      id: 456
                      externalIdentifier: "external-identifier-123"
                      firstName: "John"
                      lastName: "Doe"
                      dateOfBirth: "1987-09-13"
                      email: "email@example.com"
                      phoneNumber: "111-222-3333"
                      address:
                        lineOne: "1234 Market Street"
                        lineTwo: "Suite 110"
                        city: "Philadelphia"
                        state: "PA"
                        zipCode: "19137"
                        country: "USA"
                      sex: "unknown"
                    item:
                      id: 791
                      manufacturer:
                        id: 2
                        name: "Custom Manufacturer"
                      name: "Blood Pressure Monitor"
                      model: "iBloodPressureMonitor123"
                      sku: "0000001"
                    device:
                      id: 599
                      item:
                        id: 791
                        manufacturer:
                          id: 2
                          name: "Custom Manufacturer"
                        name: "Blood Pressure Monitor"
                        model: "iBloodPressureMonitor123"
                        sku: "0000001"
                      currentStatus: "withPatient"
                      currentPatient:
                        id: 456
                        externalIdentifier: "external-identifier-123"
                        firstName: "John"
                        lastName: "Doe"
                        dateOfBirth: "1987-09-13"
                        email: "email@example.com"
                        phoneNumber: "111-222-3333"
                        address:
                          lineOne: "1234 Market Street"
                          lineTwo: "Suite 110"
                          city: "Philadelphia"
                          state: "PA"
                          zipCode: "19137"
                          country: "USA"
                        sex: "unknown"
                      deviceIdentifiers:
                      - type: "imei"
                        value: "354833969951611"
                      - type: "serial"
                        value: "A44-A0623930"
                      - type: "macAddress"
                        value: "f51da43314fc"
                      disabledReadings: false
                    readingTimestamp: "2024-07-04T00:00:00Z"
                    manual: false
                    heartRate: 70
                    heartRateVariability: 10.0
                    heartRateVariabilityDuration: 100
                    heartRateVariabilityAlgorithmType: "sdann"
      x-request-example: "heartRateVariabilityReadingRequestExample"
      x-response-example: "heartRateVariabilityReadingExample"
      externalDocs:
        url: "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_HeartRateVariabilityReadingRequest"
  /api/v3/heart-rate-variability-reading/{readingId}:
    get:
      tags:
      - "Readings - Heart Rate Variability"
      description: "Fetches a specific Impilo heart rate variability reading by its\
        \ ID."
      operationId: "fetchHeartRateVariabilityReading"
      parameters:
      - name: "readingId"
        in: "path"
        required: true
        schema:
          format: "int64"
          type: "integer"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HeartRateVariabilityReading"
              examples:
                heartRateVariabilityReadingPagedResponseExample:
                  value:
                    content:
                    - id: 42
                      patient:
                        id: 456
                        externalIdentifier: "external-identifier-123"
                        firstName: "John"
                        lastName: "Doe"
                        dateOfBirth: "1987-09-13"
                        email: "email@example.com"
                        phoneNumber: "111-222-3333"
                        address:
                          lineOne: "1234 Market Street"
                          lineTwo: "Suite 110"
                          city: "Philadelphia"
                          state: "PA"
                          zipCode: "19137"
                          country: "USA"
                        sex: "unknown"
                      item:
                        id: 791
                        manufacturer:
                          id: 2
                          name: "Custom Manufacturer"
                        name: "Blood Pressure Monitor"
                        model: "iBloodPressureMonitor123"
                        sku: "0000001"
                      device:
                        id: 599
                        item:
                          id: 791
                          manufacturer:
                            id: 2
                            name: "Custom Manufacturer"
                          name: "Blood Pressure Monitor"
                          model: "iBloodPressureMonitor123"
                          sku: "0000001"
                        currentStatus: "withPatient"
                        currentPatient:
                          id: 456
                          externalIdentifier: "external-identifier-123"
                          firstName: "John"
                          lastName: "Doe"
                          dateOfBirth: "1987-09-13"
                          email: "email@example.com"
                          phoneNumber: "111-222-3333"
                          address:
                            lineOne: "1234 Market Street"
                            lineTwo: "Suite 110"
                            city: "Philadelphia"
                            state: "PA"
                            zipCode: "19137"
                            country: "USA"
                          sex: "unknown"
                        deviceIdentifiers:
                        - type: "imei"
                          value: "354833969951611"
                        - type: "serial"
                          value: "A44-A0623930"
                        - type: "macAddress"
                          value: "f51da43314fc"
                        disabledReadings: false
                      readingTimestamp: "2024-07-04T00:00:00Z"
                      manual: false
                      heartRate: 70
                      heartRateVariability: 10.0
                      heartRateVariabilityDuration: 100
                      heartRateVariabilityAlgorithmType: "sdann"
                    - id: 43
                      patient:
                        id: 456
                        externalIdentifier: "external-identifier-123"
                        firstName: "John"
                        lastName: "Doe"
                        dateOfBirth: "1987-09-13"
                        email: "email@example.com"
                        phoneNumber: "111-222-3333"
                        address:
                          lineOne: "1234 Market Street"
                          lineTwo: "Suite 110"
                          city: "Philadelphia"
                          state: "PA"
                          zipCode: "19137"
                          country: "USA"
                        sex: "unknown"
                      item:
                        id: 791
                        manufacturer:
                          id: 2
                          name: "Custom Manufacturer"
                        name: "Blood Pressure Monitor"
                        model: "iBloodPressureMonitor123"
                        sku: "0000001"
                      device:
                        id: 599
                        item:
                          id: 791
                          manufacturer:
                            id: 2
                            name: "Custom Manufacturer"
                          name: "Blood Pressure Monitor"
                          model: "iBloodPressureMonitor123"
                          sku: "0000001"
                        currentStatus: "withPatient"
                        currentPatient:
                          id: 456
                          externalIdentifier: "external-identifier-123"
                          firstName: "John"
                          lastName: "Doe"
                          dateOfBirth: "1987-09-13"
                          email: "email@example.com"
                          phoneNumber: "111-222-3333"
                          address:
                            lineOne: "1234 Market Street"
                            lineTwo: "Suite 110"
                            city: "Philadelphia"
                            state: "PA"
                            zipCode: "19137"
                            country: "USA"
                          sex: "unknown"
                        deviceIdentifiers:
                        - type: "imei"
                          value: "354833969951611"
                        - type: "serial"
                          value: "A44-A0623930"
                        - type: "macAddress"
                          value: "f51da43314fc"
                        disabledReadings: false
                      readingTimestamp: "2024-07-04T00:00:00Z"
                      manual: false
                      heartRate: 70
                      heartRateVariability: 10.0
                      heartRateVariabilityDuration: 100
                      heartRateVariabilityAlgorithmType: "sdann"
                    page: 1
                    size: 2
                    total: 4
                    first: true
                    last: false
      x-response-example: "heartRateVariabilityReadingPagedResponseExample"
  /api/v3/peak-flow-reading:
    get:
      tags:
      - "Readings - Peak Flow"
      description: "Retrieves a paginated list of peak flow readings from the Impilo\
        \ platform. Optional parameters can be used to filter the results by page\
        \ number, page size, patient ID, external ID, start timestamp, and end timestamp."
      operationId: "listPeakFlowReadings"
      parameters:
      - name: "page"
        in: "query"
        schema:
          format: "int32"
          minimum: 1
          type: "integer"
      - name: "size"
        in: "query"
        schema:
          format: "int32"
          type: "integer"
      - name: "patientId"
        in: "query"
        schema:
          format: "int64"
          type: "integer"
      - name: "externalIdentifier"
        in: "query"
        schema:
          type: "string"
      - name: "startTimestamp"
        in: "query"
        schema:
          type: "string"
      - name: "endTimestamp"
        in: "query"
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagePeakFlowReading"
              examples:
                peakFlowReadingPagedResponseExample:
                  value:
                    content:
                    - id: 42
                      patient:
                        id: 456
                        externalIdentifier: "external-identifier-123"
                        firstName: "John"
                        lastName: "Doe"
                        dateOfBirth: "1987-09-13"
                        email: "email@example.com"
                        phoneNumber: "111-222-3333"
                        address:
                          lineOne: "1234 Market Street"
                          lineTwo: "Suite 110"
                          city: "Philadelphia"
                          state: "PA"
                          zipCode: "19137"
                          country: "USA"
                        sex: "unknown"
                      item:
                        id: 791
                        manufacturer:
                          id: 2
                          name: "Custom Manufacturer"
                        name: "Blood Pressure Monitor"
                        model: "iBloodPressureMonitor123"
                        sku: "0000001"
                      device:
                        id: 599
                        item:
                          id: 791
                          manufacturer:
                            id: 2
                            name: "Custom Manufacturer"
                          name: "Blood Pressure Monitor"
                          model: "iBloodPressureMonitor123"
                          sku: "0000001"
                        currentStatus: "withPatient"
                        currentPatient:
                          id: 456
                          externalIdentifier: "external-identifier-123"
                          firstName: "John"
                          lastName: "Doe"
                          dateOfBirth: "1987-09-13"
                          email: "email@example.com"
                          phoneNumber: "111-222-3333"
                          address:
                            lineOne: "1234 Market Street"
                            lineTwo: "Suite 110"
                            city: "Philadelphia"
                            state: "PA"
                            zipCode: "19137"
                            country: "USA"
                          sex: "unknown"
                        deviceIdentifiers:
                        - type: "imei"
                          value: "354833969951611"
                        - type: "serial"
                          value: "A44-A0623930"
                        - type: "macAddress"
                          value: "f51da43314fc"
                        disabledReadings: false
                      readingTimestamp: "2024-07-04T00:00:00Z"
                      manual: false
                      deviceTimeZoneOffset: 0
                      patientTimeZoneOffset: 0
                      peakExpiratoryFlow: 100.3
                      forcedExpiratoryVolume: 0.62
                    - id: 43
                      patient:
                        id: 456
                        externalIdentifier: "external-identifier-123"
                        firstName: "John"
                        lastName: "Doe"
                        dateOfBirth: "1987-09-13"
                        email: "email@example.com"
                        phoneNumber: "111-222-3333"
                        address:
                          lineOne: "1234 Market Street"
                          lineTwo: "Suite 110"
                          city: "Philadelphia"
                          state: "PA"
                          zipCode: "19137"
                          country: "USA"
                        sex: "unknown"
                      item:
                        id: 791
                        manufacturer:
                          id: 2
                          name: "Custom Manufacturer"
                        name: "Blood Pressure Monitor"
                        model: "iBloodPressureMonitor123"
                        sku: "0000001"
                      device:
                        id: 599
                        item:
                          id: 791
                          manufacturer:
                            id: 2
                            name: "Custom Manufacturer"
                          name: "Blood Pressure Monitor"
                          model: "iBloodPressureMonitor123"
                          sku: "0000001"
                        currentStatus: "withPatient"
                        currentPatient:
                          id: 456
                          externalIdentifier: "external-identifier-123"
                          firstName: "John"
                          lastName: "Doe"
                          dateOfBirth: "1987-09-13"
                          email: "email@example.com"
                          phoneNumber: "111-222-3333"
                          address:
                            lineOne: "1234 Market Street"
                            lineTwo: "Suite 110"
                            city: "Philadelphia"
                            state: "PA"
                            zipCode: "19137"
                            country: "USA"
                          sex: "unknown"
                        deviceIdentifiers:
                        - type: "imei"
                          value: "354833969951611"
                        - type: "serial"
                          value: "A44-A0623930"
                        - type: "macAddress"
                          value: "f51da43314fc"
                        disabledReadings: false
                      readingTimestamp: "2024-07-04T00:00:00Z"
                      manual: false
                      deviceTimeZoneOffset: 0
                      patientTimeZoneOffset: 0
                      peakExpiratoryFlow: 100.3
                      forcedExpiratoryVolume: 0.62
                    page: 1
                    size: 2
                    total: 4
                    first: true
                    last: false
      x-response-example: "peakFlowReadingPagedResponseExample"
    post:
      tags:
      - "Readings - Peak Flow"
      description: "Records a peak flow reading based on the provided request. Either\
        \ a device ID, device identifier, or patient ID is required.\n***\nFor more\
        \ information see the [PeakFlowReadingRequest Model](/resources/models#schema_PeakFlowReadingRequest)."
      operationId: "recordPeakFlowReading"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PeakFlowReadingRequest"
            examples:
              device:
                value:
                  deviceId: 599
                  readingTimestamp: "2024-07-04T00:00:00Z"
                  deviceTimeZoneOffset: -14400
                  peakExpiratoryFlow: 132.0
                  forcedExpiratoryVolumeInOneSecond: 0.89
                  manual: false
              device-identifier:
                value:
                  deviceIdentifier: "354833969951611"
                  readingTimestamp: "2024-07-04T00:00:00Z"
                  deviceTimeZoneOffset: -14400
                  peakExpiratoryFlow: 132.0
                  forcedExpiratoryVolumeInOneSecond: 0.89
                  manual: false
              patient:
                value:
                  patientId: 456
                  readingTimestamp: "2024-07-04T00:00:00Z"
                  deviceTimeZoneOffset: -14400
                  peakExpiratoryFlow: 132.0
                  forcedExpiratoryVolumeInOneSecond: 0.89
                  manual: false
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PeakFlowReading"
              examples:
                peakFlowReadingResponseExample:
                  value:
                    id: 42
                    patient:
                      id: 456
                      externalIdentifier: "external-identifier-123"
                      firstName: "John"
                      lastName: "Doe"
                      dateOfBirth: "1987-09-13"
                      email: "email@example.com"
                      phoneNumber: "111-222-3333"
                      address:
                        lineOne: "1234 Market Street"
                        lineTwo: "Suite 110"
                        city: "Philadelphia"
                        state: "PA"
                        zipCode: "19137"
                        country: "USA"
                      sex: "unknown"
                    item:
                      id: 791
                      manufacturer:
                        id: 2
                        name: "Custom Manufacturer"
                      name: "Blood Pressure Monitor"
                      model: "iBloodPressureMonitor123"
                      sku: "0000001"
                    device:
                      id: 599
                      item:
                        id: 791
                        manufacturer:
                          id: 2
                          name: "Custom Manufacturer"
                        name: "Blood Pressure Monitor"
                        model: "iBloodPressureMonitor123"
                        sku: "0000001"
                      currentStatus: "withPatient"
                      currentPatient:
                        id: 456
                        externalIdentifier: "external-identifier-123"
                        firstName: "John"
                        lastName: "Doe"
                        dateOfBirth: "1987-09-13"
                        email: "email@example.com"
                        phoneNumber: "111-222-3333"
                        address:
                          lineOne: "1234 Market Street"
                          lineTwo: "Suite 110"
                          city: "Philadelphia"
                          state: "PA"
                          zipCode: "19137"
                          country: "USA"
                        sex: "unknown"
                      deviceIdentifiers:
                      - type: "imei"
                        value: "354833969951611"
                      - type: "serial"
                        value: "A44-A0623930"
                      - type: "macAddress"
                        value: "f51da43314fc"
                      disabledReadings: false
                    readingTimestamp: "2024-07-04T00:00:00Z"
                    manual: false
                    deviceTimeZoneOffset: 0
                    patientTimeZoneOffset: 0
                    peakExpiratoryFlow: 100.3
                    forcedExpiratoryVolume: 0.62
      x-request-example-device: "peakFlowReadingRequestDeviceExample"
      x-request-example-device-identifier: "peakFlowReadingRequestDeviceIdentifierExample"
      x-request-example-patient: "peakFlowReadingRequestPatientExample"
      x-response-example: "peakFlowReadingResponseExample"
      externalDocs:
        url: "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_PeakFlowReadingRequest"
  /api/v3/peak-flow-reading/{readingId}:
    get:
      tags:
      - "Readings - Peak Flow"
      description: "Fetches a specific Impilo peak flow reading by its ID."
      operationId: "fetchPeakFlowReading"
      parameters:
      - name: "readingId"
        in: "path"
        required: true
        schema:
          format: "int64"
          type: "integer"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PeakFlowReading"
              examples:
                peakFlowReadingResponseExample:
                  value:
                    id: 42
                    patient:
                      id: 456
                      externalIdentifier: "external-identifier-123"
                      firstName: "John"
                      lastName: "Doe"
                      dateOfBirth: "1987-09-13"
                      email: "email@example.com"
                      phoneNumber: "111-222-3333"
                      address:
                        lineOne: "1234 Market Street"
                        lineTwo: "Suite 110"
                        city: "Philadelphia"
                        state: "PA"
                        zipCode: "19137"
                        country: "USA"
                      sex: "unknown"
                    item:
                      id: 791
                      manufacturer:
                        id: 2
                        name: "Custom Manufacturer"
                      name: "Blood Pressure Monitor"
                      model: "iBloodPressureMonitor123"
                      sku: "0000001"
                    device:
                      id: 599
                      item:
                        id: 791
                        manufacturer:
                          id: 2
                          name: "Custom Manufacturer"
                        name: "Blood Pressure Monitor"
                        model: "iBloodPressureMonitor123"
                        sku: "0000001"
                      currentStatus: "withPatient"
                      currentPatient:
                        id: 456
                        externalIdentifier: "external-identifier-123"
                        firstName: "John"
                        lastName: "Doe"
                        dateOfBirth: "1987-09-13"
                        email: "email@example.com"
                        phoneNumber: "111-222-3333"
                        address:
                          lineOne: "1234 Market Street"
                          lineTwo: "Suite 110"
                          city: "Philadelphia"
                          state: "PA"
                          zipCode: "19137"
                          country: "USA"
                        sex: "unknown"
                      deviceIdentifiers:
                      - type: "imei"
                        value: "354833969951611"
                      - type: "serial"
                        value: "A44-A0623930"
                      - type: "macAddress"
                        value: "f51da43314fc"
                      disabledReadings: false
                    readingTimestamp: "2024-07-04T00:00:00Z"
                    manual: false
                    deviceTimeZoneOffset: 0
                    patientTimeZoneOffset: 0
                    peakExpiratoryFlow: 100.3
                    forcedExpiratoryVolume: 0.62
      x-response-example: "peakFlowReadingResponseExample"
  /api/v3/temperature-reading:
    get:
      tags:
      - "Readings - Temperature"
      description: "Retrieves a paginated list of temperature readings from the Impilo\
        \ platform. Optional parameters can be used to filter the results by page\
        \ number, page size, patient ID, external ID, start timestamp, and end timestamp."
      operationId: "listTemperatureReadings"
      parameters:
      - name: "page"
        in: "query"
        schema:
          format: "int32"
          type: "integer"
      - name: "size"
        in: "query"
        schema:
          format: "int32"
          type: "integer"
      - name: "patientId"
        in: "query"
        schema:
          format: "int64"
          type: "integer"
      - name: "externalIdentifier"
        in: "query"
        schema:
          type: "string"
      - name: "startTimestamp"
        in: "query"
        schema:
          type: "string"
      - name: "endTimestamp"
        in: "query"
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageTemperatureReading"
              examples:
                temperatureReadingPagedResponseExample:
                  value:
                    content:
                    - id: 42
                      patient:
                        id: 456
                        externalIdentifier: "external-identifier-123"
                        firstName: "John"
                        lastName: "Doe"
                        dateOfBirth: "1987-09-13"
                        email: "email@example.com"
                        phoneNumber: "111-222-3333"
                        address:
                          lineOne: "1234 Market Street"
                          lineTwo: "Suite 110"
                          city: "Philadelphia"
                          state: "PA"
                          zipCode: "19137"
                          country: "USA"
                        sex: "unknown"
                      item:
                        id: 791
                        manufacturer:
                          id: 2
                          name: "Custom Manufacturer"
                        name: "Blood Pressure Monitor"
                        model: "iBloodPressureMonitor123"
                        sku: "0000001"
                      device:
                        id: 599
                        item:
                          id: 791
                          manufacturer:
                            id: 2
                            name: "Custom Manufacturer"
                          name: "Blood Pressure Monitor"
                          model: "iBloodPressureMonitor123"
                          sku: "0000001"
                        currentStatus: "withPatient"
                        currentPatient:
                          id: 456
                          externalIdentifier: "external-identifier-123"
                          firstName: "John"
                          lastName: "Doe"
                          dateOfBirth: "1987-09-13"
                          email: "email@example.com"
                          phoneNumber: "111-222-3333"
                          address:
                            lineOne: "1234 Market Street"
                            lineTwo: "Suite 110"
                            city: "Philadelphia"
                            state: "PA"
                            zipCode: "19137"
                            country: "USA"
                          sex: "unknown"
                        deviceIdentifiers:
                        - type: "imei"
                          value: "354833969951611"
                        - type: "serial"
                          value: "A44-A0623930"
                        - type: "macAddress"
                          value: "f51da43314fc"
                        disabledReadings: false
                      temperatureUnit: "Fahrenheit"
                      temperature: 98.6
                      readingTimestamp: "2024-07-04T00:00:00Z"
                    - id: 43
                      patient:
                        id: 456
                        externalIdentifier: "external-identifier-123"
                        firstName: "John"
                        lastName: "Doe"
                        dateOfBirth: "1987-09-13"
                        email: "email@example.com"
                        phoneNumber: "111-222-3333"
                        address:
                          lineOne: "1234 Market Street"
                          lineTwo: "Suite 110"
                          city: "Philadelphia"
                          state: "PA"
                          zipCode: "19137"
                          country: "USA"
                        sex: "unknown"
                      item:
                        id: 791
                        manufacturer:
                          id: 2
                          name: "Custom Manufacturer"
                        name: "Blood Pressure Monitor"
                        model: "iBloodPressureMonitor123"
                        sku: "0000001"
                      device:
                        id: 599
                        item:
                          id: 791
                          manufacturer:
                            id: 2
                            name: "Custom Manufacturer"
                          name: "Blood Pressure Monitor"
                          model: "iBloodPressureMonitor123"
                          sku: "0000001"
                        currentStatus: "withPatient"
                        currentPatient:
                          id: 456
                          externalIdentifier: "external-identifier-123"
                          firstName: "John"
                          lastName: "Doe"
                          dateOfBirth: "1987-09-13"
                          email: "email@example.com"
                          phoneNumber: "111-222-3333"
                          address:
                            lineOne: "1234 Market Street"
                            lineTwo: "Suite 110"
                            city: "Philadelphia"
                            state: "PA"
                            zipCode: "19137"
                            country: "USA"
                          sex: "unknown"
                        deviceIdentifiers:
                        - type: "imei"
                          value: "354833969951611"
                        - type: "serial"
                          value: "A44-A0623930"
                        - type: "macAddress"
                          value: "f51da43314fc"
                        disabledReadings: false
                      temperatureUnit: "Fahrenheit"
                      temperature: 98.6
                      readingTimestamp: "2024-07-04T00:00:00Z"
                    page: 1
                    size: 2
                    total: 4
                    first: true
                    last: false
      x-response-example: "temperatureReadingPagedResponseExample"
    post:
      tags:
      - "Readings - Temperature"
      description: "Records a temperature reading based on the provided request. Either\
        \ a device ID, device identifier, or patient ID is required.\n***\nFor more\
        \ information see the [TemperatureReadingRequest Model](/resources/models#schema_TemperatureReadingRequest)."
      operationId: "recordTemperatureReading"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TemperatureReadingRequest"
            examples:
              device:
                value:
                  deviceId: 599
                  readingTimestamp: "2024-07-04T00:00:00Z"
                  deviceTimeZoneOffset: -14400
                  temperatureUnit: "F"
                  temperature: 97.2
                  manual: false
              device-identifier:
                value:
                  deviceIdentifier: "354833969951611"
                  readingTimestamp: "2024-07-04T00:00:00Z"
                  deviceTimeZoneOffset: -14400
                  temperatureUnit: "F"
                  temperature: 97.2
                  manual: false
              patient:
                value:
                  patientId: 456
                  readingTimestamp: "2024-07-04T00:00:00Z"
                  deviceTimeZoneOffset: -14400
                  temperatureUnit: "F"
                  temperature: 97.2
                  manual: false
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TemperatureReading"
              examples:
                temperatureReadingResponseExample:
                  value:
                    id: 42
                    patient:
                      id: 456
                      externalIdentifier: "external-identifier-123"
                      firstName: "John"
                      lastName: "Doe"
                      dateOfBirth: "1987-09-13"
                      email: "email@example.com"
                      phoneNumber: "111-222-3333"
                      address:
                        lineOne: "1234 Market Street"
                        lineTwo: "Suite 110"
                        city: "Philadelphia"
                        state: "PA"
                        zipCode: "19137"
                        country: "USA"
                      sex: "unknown"
                    item:
                      id: 791
                      manufacturer:
                        id: 2
                        name: "Custom Manufacturer"
                      name: "Blood Pressure Monitor"
                      model: "iBloodPressureMonitor123"
                      sku: "0000001"
                    device:
                      id: 599
                      item:
                        id: 791
                        manufacturer:
                          id: 2
                          name: "Custom Manufacturer"
                        name: "Blood Pressure Monitor"
                        model: "iBloodPressureMonitor123"
                        sku: "0000001"
                      currentStatus: "withPatient"
                      currentPatient:
                        id: 456
                        externalIdentifier: "external-identifier-123"
                        firstName: "John"
                        lastName: "Doe"
                        dateOfBirth: "1987-09-13"
                        email: "email@example.com"
                        phoneNumber: "111-222-3333"
                        address:
                          lineOne: "1234 Market Street"
                          lineTwo: "Suite 110"
                          city: "Philadelphia"
                          state: "PA"
                          zipCode: "19137"
                          country: "USA"
                        sex: "unknown"
                      deviceIdentifiers:
                      - type: "imei"
                        value: "354833969951611"
                      - type: "serial"
                        value: "A44-A0623930"
                      - type: "macAddress"
                        value: "f51da43314fc"
                      disabledReadings: false
                    temperatureUnit: "Fahrenheit"
                    temperature: 98.6
                    readingTimestamp: "2024-07-04T00:00:00Z"
      x-request-example-device: "temperatureReadingRequestDeviceExample"
      x-request-example-device-identifier: "temperatureReadingRequestDeviceIdentifierExample"
      x-request-example-patient: "temperatureReadingRequestPatientExample"
      x-response-example: "temperatureReadingResponseExample"
      externalDocs:
        url: "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_TemperatureReadingRequest"
  /api/v3/temperature-reading/export:
    get:
      tags:
      - "Readings - Temperature"
      description: "Facilitates the export of temperature readings for a specified\
        \ patient within a chosen date range, in either Excel or CSV format. This\
        \ endpoint allows the selection of a patient ID for targeted data retrieval,\
        \ or can provide readings for all patients if no specific ID is provided,\
        \ subject to service implementation. The start and end dates are optional\
        \ and can be used to filter the readings to a specific period. The 'excel'\
        \ parameter decides the output format: setting this to true returns the data\
        \ in Excel format, while false yields CSV format. The endpoint streams the\
        \ output directly to the client in the specified format.\n"
      operationId: "exportTemperatureReadings"
      parameters:
      - name: "excel"
        in: "query"
        description: "Determines the format of the export: if true, the data is returned\
          \ in Excel format; otherwise, it is returned as CSV."
        schema:
          default: false
          type: "boolean"
      - name: "patientId"
        in: "query"
        description: "The ID of the patient whose temperature readings are to be exported.\
          \ If not provided, readings for all patients may be exported."
        schema:
          format: "int64"
          type: "integer"
      - name: "start"
        in: "query"
        description: "The start date for filtering temperature readings. Only readings\
          \ after or equal to this date will be included."
        schema:
          $ref: "#/components/schemas/Instant"
      - name: "end"
        in: "query"
        description: "The end date for filtering temperature readings. Only readings\
          \ before this date will be included."
        schema:
          $ref: "#/components/schemas/Instant"
      responses:
        default:
          content:
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                format: "binary"
                type: "string"
            text/csv:
              schema:
                format: "binary"
                type: "string"
  /api/v3/temperature-reading/{readingId}:
    get:
      tags:
      - "Readings - Temperature"
      description: "Fetches a specific Impilo temperature reading by its ID."
      operationId: "fetchTemperatureReading"
      parameters:
      - name: "readingId"
        in: "path"
        required: true
        schema:
          format: "int64"
          type: "integer"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TemperatureReading"
              examples:
                temperatureReadingResponseExample:
                  value:
                    id: 42
                    patient:
                      id: 456
                      externalIdentifier: "external-identifier-123"
                      firstName: "John"
                      lastName: "Doe"
                      dateOfBirth: "1987-09-13"
                      email: "email@example.com"
                      phoneNumber: "111-222-3333"
                      address:
                        lineOne: "1234 Market Street"
                        lineTwo: "Suite 110"
                        city: "Philadelphia"
                        state: "PA"
                        zipCode: "19137"
                        country: "USA"
                      sex: "unknown"
                    item:
                      id: 791
                      manufacturer:
                        id: 2
                        name: "Custom Manufacturer"
                      name: "Blood Pressure Monitor"
                      model: "iBloodPressureMonitor123"
                      sku: "0000001"
                    device:
                      id: 599
                      item:
                        id: 791
                        manufacturer:
                          id: 2
                          name: "Custom Manufacturer"
                        name: "Blood Pressure Monitor"
                        model: "iBloodPressureMonitor123"
                        sku: "0000001"
                      currentStatus: "withPatient"
                      currentPatient:
                        id: 456
                        externalIdentifier: "external-identifier-123"
                        firstName: "John"
                        lastName: "Doe"
                        dateOfBirth: "1987-09-13"
                        email: "email@example.com"
                        phoneNumber: "111-222-3333"
                        address:
                          lineOne: "1234 Market Street"
                          lineTwo: "Suite 110"
                          city: "Philadelphia"
                          state: "PA"
                          zipCode: "19137"
                          country: "USA"
                        sex: "unknown"
                      deviceIdentifiers:
                      - type: "imei"
                        value: "354833969951611"
                      - type: "serial"
                        value: "A44-A0623930"
                      - type: "macAddress"
                        value: "f51da43314fc"
                      disabledReadings: false
                    temperatureUnit: "Fahrenheit"
                    temperature: 98.6
                    readingTimestamp: "2024-07-04T00:00:00Z"
      x-response-example: "temperatureReadingResponseExample"
  /api/v3/weight-reading:
    get:
      tags:
      - "Readings - Weight"
      description: "Retrieves a paginated list of weight readings from the Impilo\
        \ platform. Optional parameters can be used to filter the results by page\
        \ number, page size, patient ID, external ID, start timestamp, and end timestamp."
      operationId: "listWeightReadings"
      parameters:
      - name: "page"
        in: "query"
        schema:
          format: "int32"
          minimum: 1
          type: "integer"
      - name: "size"
        in: "query"
        schema:
          format: "int32"
          type: "integer"
      - name: "patientId"
        in: "query"
        schema:
          format: "int64"
          type: "integer"
      - name: "externalIdentifier"
        in: "query"
        schema:
          type: "string"
      - name: "startTimestamp"
        in: "query"
        schema:
          type: "string"
      - name: "endTimestamp"
        in: "query"
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageWeightReading"
              examples:
                weightReadingPagedResponseExample:
                  value:
                    content:
                    - id: 42
                      patient:
                        id: 456
                        externalIdentifier: "external-identifier-123"
                        firstName: "John"
                        lastName: "Doe"
                        dateOfBirth: "1987-09-13"
                        email: "email@example.com"
                        phoneNumber: "111-222-3333"
                        address:
                          lineOne: "1234 Market Street"
                          lineTwo: "Suite 110"
                          city: "Philadelphia"
                          state: "PA"
                          zipCode: "19137"
                          country: "USA"
                        sex: "unknown"
                      item:
                        id: 791
                        manufacturer:
                          id: 2
                          name: "Custom Manufacturer"
                        name: "Blood Pressure Monitor"
                        model: "iBloodPressureMonitor123"
                        sku: "0000001"
                      device:
                        id: 599
                        item:
                          id: 791
                          manufacturer:
                            id: 2
                            name: "Custom Manufacturer"
                          name: "Blood Pressure Monitor"
                          model: "iBloodPressureMonitor123"
                          sku: "0000001"
                        currentStatus: "withPatient"
                        currentPatient:
                          id: 456
                          externalIdentifier: "external-identifier-123"
                          firstName: "John"
                          lastName: "Doe"
                          dateOfBirth: "1987-09-13"
                          email: "email@example.com"
                          phoneNumber: "111-222-3333"
                          address:
                            lineOne: "1234 Market Street"
                            lineTwo: "Suite 110"
                            city: "Philadelphia"
                            state: "PA"
                            zipCode: "19137"
                            country: "USA"
                          sex: "unknown"
                        deviceIdentifiers:
                        - type: "imei"
                          value: "354833969951611"
                        - type: "serial"
                          value: "A44-A0623930"
                        - type: "macAddress"
                          value: "f51da43314fc"
                        disabledReadings: false
                      readingTimestamp: "2024-07-04T00:00:00Z"
                      weight: 140.4
                      weightUnit: "lbs"
                      manual: false
                    - id: 43
                      patient:
                        id: 456
                        externalIdentifier: "external-identifier-123"
                        firstName: "John"
                        lastName: "Doe"
                        dateOfBirth: "1987-09-13"
                        email: "email@example.com"
                        phoneNumber: "111-222-3333"
                        address:
                          lineOne: "1234 Market Street"
                          lineTwo: "Suite 110"
                          city: "Philadelphia"
                          state: "PA"
                          zipCode: "19137"
                          country: "USA"
                        sex: "unknown"
                      item:
                        id: 791
                        manufacturer:
                          id: 2
                          name: "Custom Manufacturer"
                        name: "Blood Pressure Monitor"
                        model: "iBloodPressureMonitor123"
                        sku: "0000001"
                      device:
                        id: 599
                        item:
                          id: 791
                          manufacturer:
                            id: 2
                            name: "Custom Manufacturer"
                          name: "Blood Pressure Monitor"
                          model: "iBloodPressureMonitor123"
                          sku: "0000001"
                        currentStatus: "withPatient"
                        currentPatient:
                          id: 456
                          externalIdentifier: "external-identifier-123"
                          firstName: "John"
                          lastName: "Doe"
                          dateOfBirth: "1987-09-13"
                          email: "email@example.com"
                          phoneNumber: "111-222-3333"
                          address:
                            lineOne: "1234 Market Street"
                            lineTwo: "Suite 110"
                            city: "Philadelphia"
                            state: "PA"
                            zipCode: "19137"
                            country: "USA"
                          sex: "unknown"
                        deviceIdentifiers:
                        - type: "imei"
                          value: "354833969951611"
                        - type: "serial"
                          value: "A44-A0623930"
                        - type: "macAddress"
                          value: "f51da43314fc"
                        disabledReadings: false
                      readingTimestamp: "2024-07-04T00:00:00Z"
                      weight: 140.4
                      weightUnit: "lbs"
                      manual: false
                    page: 1
                    size: 2
                    total: 4
                    first: true
                    last: false
      x-response-example: "weightReadingPagedResponseExample"
    post:
      tags:
      - "Readings - Weight"
      description: "This endpoint records a weight reading based on the provided request.\
        \ Either a device ID, device identifier, or patient ID is required.\n***\n\
        For more information see the [WeightReadingRequest Model](/resources/models#schema_WeightReadingRequest)."
      operationId: "recordWeightReading"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WeightReadingRequest"
            examples:
              device:
                value:
                  deviceId: 599
                  readingTimestamp: "2024-07-04T00:00:00Z"
                  deviceTimeZoneOffset: -14400
                  weight: 140.4
                  manual: false
              device-identifier:
                value:
                  deviceIdentifier: "354833969951611"
                  readingTimestamp: "2024-07-04T00:00:00Z"
                  deviceTimeZoneOffset: -14400
                  weight: 140.4
                  manual: false
              patient:
                value:
                  patientId: 456
                  readingTimestamp: "2024-07-04T00:00:00Z"
                  deviceTimeZoneOffset: -14400
                  weight: 140.4
                  manual: false
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WeightReading"
              examples:
                weightReadingResponseExample:
                  value:
                    id: 42
                    patient:
                      id: 456
                      externalIdentifier: "external-identifier-123"
                      firstName: "John"
                      lastName: "Doe"
                      dateOfBirth: "1987-09-13"
                      email: "email@example.com"
                      phoneNumber: "111-222-3333"
                      address:
                        lineOne: "1234 Market Street"
                        lineTwo: "Suite 110"
                        city: "Philadelphia"
                        state: "PA"
                        zipCode: "19137"
                        country: "USA"
                      sex: "unknown"
                    item:
                      id: 791
                      manufacturer:
                        id: 2
                        name: "Custom Manufacturer"
                      name: "Blood Pressure Monitor"
                      model: "iBloodPressureMonitor123"
                      sku: "0000001"
                    device:
                      id: 599
                      item:
                        id: 791
                        manufacturer:
                          id: 2
                          name: "Custom Manufacturer"
                        name: "Blood Pressure Monitor"
                        model: "iBloodPressureMonitor123"
                        sku: "0000001"
                      currentStatus: "withPatient"
                      currentPatient:
                        id: 456
                        externalIdentifier: "external-identifier-123"
                        firstName: "John"
                        lastName: "Doe"
                        dateOfBirth: "1987-09-13"
                        email: "email@example.com"
                        phoneNumber: "111-222-3333"
                        address:
                          lineOne: "1234 Market Street"
                          lineTwo: "Suite 110"
                          city: "Philadelphia"
                          state: "PA"
                          zipCode: "19137"
                          country: "USA"
                        sex: "unknown"
                      deviceIdentifiers:
                      - type: "imei"
                        value: "354833969951611"
                      - type: "serial"
                        value: "A44-A0623930"
                      - type: "macAddress"
                        value: "f51da43314fc"
                      disabledReadings: false
                    readingTimestamp: "2024-07-04T00:00:00Z"
                    weight: 140.4
                    weightUnit: "lbs"
                    manual: false
      x-request-example-device: "weightReadingRequestDeviceExample"
      x-request-example-device-identifier: "weightReadingRequestDeviceIdentifierExample"
      x-request-example-patient: "weightReadingRequestPatientExample"
      x-response-example: "weightReadingResponseExample"
      externalDocs:
        url: "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_WeightReadingRequest"
  /api/v3/weight-reading/export:
    get:
      tags:
      - "Readings - Weight"
      description: "Exports weight readings for a specified patient over a selected\
        \ date range, available in either Excel or CSV format. This endpoint allows\
        \ the specification of a patient ID, enabling the retrieval of weight data\
        \ for an individual patient. Alternatively, if no patient ID is provided,\
        \ it may export readings for all patients, dependent on the implementation\
        \ details of the service. Users can also specify start and end dates to filter\
        \ the export to a specific timeframe. The 'excel' parameter dictates the format\
        \ of the output; if set to true, the readings are exported in Excel format,\
        \ otherwise in CSV format\n"
      operationId: "exportWeightReadings"
      parameters:
      - name: "excel"
        in: "query"
        description: "Determines the format of the export: if true, the data is returned\
          \ in Excel format; otherwise, it is returned as CSV."
        schema:
          default: false
          type: "boolean"
      - name: "patientId"
        in: "query"
        description: "The ID of the patient whose weight readings are to be exported.\
          \ If not provided, readings for all patients may be exported."
        schema:
          format: "int64"
          type: "integer"
      - name: "start"
        in: "query"
        description: "The start date for filtering weight readings. Only readings\
          \ after or equal to this date will be included."
        schema:
          $ref: "#/components/schemas/Instant"
      - name: "end"
        in: "query"
        description: "The end date for filtering weight readings. Only readings before\
          \ this date will be included."
        schema:
          $ref: "#/components/schemas/Instant"
      responses:
        default:
          content:
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                format: "binary"
                type: "string"
  /api/v3/weight-reading/{readingId}:
    get:
      tags:
      - "Readings - Weight"
      description: "Fetches a specific Impilo weight reading by its ID."
      operationId: "fetchWeightReading"
      parameters:
      - name: "readingId"
        in: "path"
        required: true
        schema:
          format: "int64"
          type: "integer"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WeightReading"
              examples:
                weightReadingResponseExample:
                  value:
                    id: 42
                    patient:
                      id: 456
                      externalIdentifier: "external-identifier-123"
                      firstName: "John"
                      lastName: "Doe"
                      dateOfBirth: "1987-09-13"
                      email: "email@example.com"
                      phoneNumber: "111-222-3333"
                      address:
                        lineOne: "1234 Market Street"
                        lineTwo: "Suite 110"
                        city: "Philadelphia"
                        state: "PA"
                        zipCode: "19137"
                        country: "USA"
                      sex: "unknown"
                    item:
                      id: 791
                      manufacturer:
                        id: 2
                        name: "Custom Manufacturer"
                      name: "Blood Pressure Monitor"
                      model: "iBloodPressureMonitor123"
                      sku: "0000001"
                    device:
                      id: 599
                      item:
                        id: 791
                        manufacturer:
                          id: 2
                          name: "Custom Manufacturer"
                        name: "Blood Pressure Monitor"
                        model: "iBloodPressureMonitor123"
                        sku: "0000001"
                      currentStatus: "withPatient"
                      currentPatient:
                        id: 456
                        externalIdentifier: "external-identifier-123"
                        firstName: "John"
                        lastName: "Doe"
                        dateOfBirth: "1987-09-13"
                        email: "email@example.com"
                        phoneNumber: "111-222-3333"
                        address:
                          lineOne: "1234 Market Street"
                          lineTwo: "Suite 110"
                          city: "Philadelphia"
                          state: "PA"
                          zipCode: "19137"
                          country: "USA"
                        sex: "unknown"
                      deviceIdentifiers:
                      - type: "imei"
                        value: "354833969951611"
                      - type: "serial"
                        value: "A44-A0623930"
                      - type: "macAddress"
                        value: "f51da43314fc"
                      disabledReadings: false
                    readingTimestamp: "2024-07-04T00:00:00Z"
                    weight: 140.4
                    weightUnit: "lbs"
                    manual: false
      x-response-example: "weightReadingResponseExample"
  /api/v3/test/blood-glucose-webhook:
    post:
      tags:
      - "Tests"
      description: "Trigger a test blood glucose webhook\n***\nFor more information\
        \ see the [TestBloodGlucoseWebhookRequest Model](/resources/models#schema_TestBloodGlucoseWebhookRequest)."
      operationId: "triggerBloodGlucoseWebhook"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestBloodGlucoseWebhookRequest"
            examples:
              createTestBloodGlucoseWebhookRequestExample:
                value:
                  patientId: 1
                  glucose: 95
      responses:
        "201":
          description: "Created"
      x-request-example: "createTestBloodGlucoseWebhookRequestExample"
      externalDocs:
        url: "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_TestBloodGlucoseWebhookRequest"
  /api/v3/test/blood-oxygen-webhook:
    post:
      tags:
      - "Tests"
      description: "Trigger a test blood oxygen webhook\n***\nFor more information\
        \ see the [TestBloodOxygenWebhookRequest Model](/resources/models#schema_TestBloodOxygenWebhookRequest)."
      operationId: "triggerBloodOxygenWebhook"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestBloodOxygenWebhookRequest"
            examples:
              createTestBloodOxygenWebhookRequestExample:
                value:
                  patientId: 1
                  bloodOxygen: 98
                  heartRate: 75
      responses:
        "201":
          description: "Created"
      x-request-example: "createTestBloodOxygenWebhookRequestExample"
      externalDocs:
        url: "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_TestBloodOxygenWebhookRequest"
  /api/v3/test/blood-pressure-webhook:
    post:
      tags:
      - "Tests"
      description: "Trigger a test blood pressure webhook\n***\nFor more information\
        \ see the [TestBloodPressureWebhookRequest Model](/resources/models#schema_TestBloodPressureWebhookRequest)."
      operationId: "triggerBloodPressureWebhook"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestBloodPressureWebhookRequest"
            examples:
              createTestBloodPressureWebhookRequestExample:
                value:
                  patientId: 1
                  systolic: 120
                  diastolic: 80
                  heartRate: 100
      responses:
        "201":
          description: "Created"
      x-request-example: "createTestBloodPressureWebhookRequestExample"
      externalDocs:
        url: "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_TestBloodPressureWebhookRequest"
  /api/v3/test/device-association-created:
    post:
      tags:
      - "Tests"
      description: "Trigger a test device association created webhook\n***\nFor more\
        \ information see the [TestDeviceAssociationWebhook Model](/resources/models#schema_TestDeviceAssociationWebhook)."
      operationId: "triggerDeviceAssociationCreated"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestDeviceAssociationWebhook"
            examples:
              createTestDeviceAssociationWebhookExample:
                value:
                  patientId: 1
                  deviceId: 1
                  deviceIdentifier: "DEVICE123"
      responses:
        "201":
          description: "Created"
      x-request-example: "createTestDeviceAssociationWebhookExample"
      externalDocs:
        url: "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_TestDeviceAssociationWebhook"
  /api/v3/test/device-association-removed:
    post:
      tags:
      - "Tests"
      description: "Trigger a test device association removed webhook\n***\nFor more\
        \ information see the [TestDeviceAssociationWebhook Model](/resources/models#schema_TestDeviceAssociationWebhook)."
      operationId: "triggerDeviceAssociationRemoved"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestDeviceAssociationWebhook"
            examples:
              createTestDeviceAssociationWebhookExample:
                value:
                  patientId: 1
                  deviceId: 1
                  deviceIdentifier: "DEVICE123"
      responses:
        "201":
          description: "Created"
      x-request-example: "createTestDeviceAssociationWebhookExample"
      externalDocs:
        url: "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_TestDeviceAssociationWebhook"
  /api/v3/test/order-status-full-webhook:
    post:
      tags:
      - "Tests"
      description: "Trigger a test order status full webhook\n***\nFor more information\
        \ see the [TestOrderStatusFullWebhook Model](/resources/models#schema_TestOrderStatusFullWebhook)."
      operationId: "orderStatusFullWebhook"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestOrderStatusFullWebhook"
            examples:
              createTestOrderStatusFullWebhookExample:
                value:
                  orderId: 1
                  externalOrderIds:
                  - "123"
                  - "456"
                  patientId: 1
                  orderStatus: "shipped"
                  trackingNumber: "TRACK123"
      responses:
        "201":
          description: "Created"
      x-request-example: "createTestOrderStatusFullWebhookExample"
      externalDocs:
        url: "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_TestOrderStatusFullWebhook"
  /api/v3/test/order-status-webhook:
    post:
      tags:
      - "Tests"
      description: "Send a test order status webhook\n***\nFor more information see\
        \ the [TestOrderStatusWebhookRequest Model](/resources/models#schema_TestOrderStatusWebhookRequest)."
      operationId: "triggerOrderStatusWebhook"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestOrderStatusWebhookRequest"
            examples:
              createTestOrderStatusWebhookRequestExample:
                value:
                  orderId: 1
                  externalOrderIds:
                  - "123"
                  - "456"
                  orderStatusName: "orderPlaced"
      responses:
        "201":
          description: "Created"
      x-request-example: "createTestOrderStatusWebhookRequestExample"
      externalDocs:
        url: "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_TestOrderStatusWebhookRequest"
  /api/v3/test/weight-webhook:
    post:
      tags:
      - "Tests"
      description: "Trigger a test weight webhook\n***\nFor more information see the\
        \ [TestWeightWebhookRequest Model](/resources/models#schema_TestWeightWebhookRequest)."
      operationId: "triggerWeightWebhook"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestWeightWebhookRequest"
            examples:
              createTestWeightWebhookRequestExample:
                value:
                  patientId: 1
                  weight: 70.5
      responses:
        "201":
          description: "Created"
      x-request-example: "createTestWeightWebhookRequestExample"
      externalDocs:
        url: "https://staging-impilo.docs.buildwithfern.com/resources/models#schema_TestWeightWebhookRequest"
components:
  securitySchemes:
    ApiKeyAuth:
      type: "apiKey"
      in: "header"
      name: "Impilo-API-Key"
  schemas:
    Address:
      description: "Represents a physical address, including information such as street\
        \ lines, city, state, zip code, country, and an optional note for additional\
        \ details."
      type: "object"
      properties:
        lineOne:
          description: "Address line one."
          type: "string"
        lineTwo:
          description: "Address line two."
          type: "string"
        lineThree:
          description: "Address line three."
          type: "string"
        city:
          description: "Address city."
          type: "string"
        state:
          description: "Address state."
          type: "string"
        zipCode:
          description: "Address zip code."
          type: "string"
        country:
          description: "Address country."
          type: "string"
        note:
          description: "Address note."
          type: "string"
    AssociateDeviceRequest:
      type: "object"
      properties:
        deviceId:
          format: "int64"
          description: "The ID of the device. Either this value or a Device Identifier\
            \ are required to identify the Device."
          type: "integer"
          example: 1
        deviceIdentifier:
          description: "The Identifier, such as a Serial Number, of the device. Either\
            \ this value or a Device Id are required to identify the Device."
          type: "string"
          example: "ABC123"
        patientId:
          format: "int64"
          description: "The ID of the patient to have the Device associated to. Either\
            \ this value or a Patient External Identifier are required to identify\
            \ who should be (dis)associated with the device."
          type: "integer"
        patientExternalIdentifier:
          description: "The External Identifier of the patient to have the Device\
            \ (dis)associated to. Either this value or a Patient Id are required to\
            \ identify who should be (dis)associated with the device."
          type: "string"
    BloodGlucoseReading:
      description: "This page describes Impilo's blood glucose reading model."
      required:
      - "readingTimestamp"
      type: "object"
      properties:
        id:
          format: "int64"
          description: "Unique identifier for the reading."
          type: "integer"
        readingTimestamp:
          format: "date-time"
          description: "The UTC timestamp at which the reading was taken."
          type: "string"
          writeOnly: true
        manual:
          description: "True if the reading value was entered manually, false or null\
            \ otherwise."
          type: "boolean"
        deviceTimeZoneOffset:
          format: "int32"
          description: "The offset of the device's timezone from UTC in seconds. Null\
            \ if unavailable."
          type: "integer"
          example: -14400
        patientTimeZoneOffset:
          format: "int32"
          description: "The offset of the patient's timezone from UTC in seconds.\
            \ Null if unavailable."
          type: "integer"
          example: -14400
        patient:
          description: "The patient who took the reading."
          type: "object"
          allOf:
          - $ref: "#/components/schemas/Patient"
        item:
          description: "The item used to take the reading."
          type: "object"
          allOf:
          - $ref: "#/components/schemas/Item"
        device:
          description: "The device used to take the reading."
          type: "object"
          allOf:
          - $ref: "#/components/schemas/Device"
        glucose:
          format: "int32"
          description: "The blood glucose measurement value."
          type: "integer"
        glucoseUnit:
          $ref: "#/components/schemas/BloodGlucoseUnit"
        beforeMeal:
          description: "True if the reading was taken before a meal, false otherwise."
          type: "boolean"
        afterMeal:
          description: "True if the reading was taken after a meal, false otherwise."
          type: "boolean"
    BloodGlucoseReadingRequest:
      description: "This page describes Impilo's blood glucose reading model."
      required:
      - "readingTimestamp"
      - "glucose"
      type: "object"
      properties:
        deviceId:
          format: "int64"
          description: "The id of the device that took the reading."
          type: "integer"
        deviceIdentifier:
          description: "The device identifier of the device that took the reading."
          type: "string"
        patientId:
          format: "int64"
          description: "The id of the patient that took the reading."
          type: "integer"
        readingTimestamp:
          format: "date-time"
          description: "The UTC timestamp at which the reading was taken."
          type: "string"
          example: "2022-03-10T16:15:50Z"
        deviceTimeZoneOffset:
          format: "int32"
          description: "The offset of the device's timezone from UTC in seconds. Null\
            \ if unavailable."
          type: "integer"
          example: -14400
        glucose:
          format: "int32"
          description: "The blood glucose measurement value."
          type: "integer"
        manual:
          description: "True if the reading value was entered manually, false or null\
            \ otherwise."
          type: "boolean"
        beforeMeal:
          description: "True if the reading was taken before a meal, false otherwise."
          type: "boolean"
        afterMeal:
          description: "True if the reading was taken after a meal, false otherwise."
          type: "boolean"
    BloodGlucoseUnit:
      enum:
      - "mgdl"
      type: "string"
      x-fern-enum:
        mgdl:
          description: "Blood glucose unit of measurement is milligrams per deciliter."
    BloodOxygenReading:
      description: "This page describes Impilo's blood oxygen reading model."
      required:
      - "readingTimestamp"
      type: "object"
      properties:
        id:
          format: "int64"
          description: "Unique identifier for the reading."
          type: "integer"
        readingTimestamp:
          format: "date-time"
          description: "The UTC timestamp at which the reading was taken."
          type: "string"
          writeOnly: true
        manual:
          description: "True if the reading value was entered manually, false or null\
            \ otherwise."
          type: "boolean"
        deviceTimeZoneOffset:
          format: "int32"
          description: "The offset of the device's timezone from UTC in seconds. Null\
            \ if unavailable."
          type: "integer"
          example: -14400
        patientTimeZoneOffset:
          format: "int32"
          description: "The offset of the patient's timezone from UTC in seconds.\
            \ Null if unavailable."
          type: "integer"
          example: -14400
        patient:
          description: "The patient who took the reading."
          type: "object"
          allOf:
          - $ref: "#/components/schemas/Patient"
        item:
          description: "The item used to take the reading."
          type: "object"
          allOf:
          - $ref: "#/components/schemas/Item"
        device:
          description: "The device used to take the reading."
          type: "object"
          allOf:
          - $ref: "#/components/schemas/Device"
        bloodOxygen:
          format: "int32"
          description: "The blood oxygen (spo2) measurement value."
          type: "integer"
        bloodOxygenUnit:
          $ref: "#/components/schemas/BloodOxygenUnit"
        heartRate:
          format: "int32"
          description: "The heart rate measurement value."
          type: "integer"
        heartRateUnit:
          $ref: "#/components/schemas/HeartRateUnit"
    BloodOxygenReadingRequest:
      description: "This page describes Impilo's blood oxygen reading model."
      required:
      - "readingTimestamp"
      - "bloodOxygen"
      type: "object"
      properties:
        deviceId:
          format: "int64"
          description: "The id of the device that took the reading."
          type: "integer"
        deviceIdentifier:
          description: "The device identifier of the device that took the reading."
          type: "string"
        patientId:
          format: "int64"
          description: "The id of the patient that took the reading."
          type: "integer"
        readingTimestamp:
          format: "date-time"
          description: "The UTC timestamp at which the reading was taken."
          type: "string"
          example: "2022-03-10T16:15:50Z"
        deviceTimeZoneOffset:
          format: "int32"
          description: "The offset of the device's timezone from UTC in seconds. Null\
            \ if unavailable."
          type: "integer"
          example: -14400
        bloodOxygen:
          format: "int32"
          description: "The blood oxygen (spo2) measurement value."
          type: "integer"
        heartRate:
          format: "int32"
          description: "The heart rate measurement value."
          type: "integer"
        manual:
          description: "True if the reading value was entered manually, false or null\
            \ otherwise."
          type: "boolean"
    BloodOxygenUnit:
      enum:
      - "spo2"
      type: "string"
      x-fern-enum:
        spo2:
          description: "Blood glucose unit of measurement is milligrams per deciliter."
    BloodPressureReading:
      description: "This page describes Impilo's blood pressure reading model."
      required:
      - "readingTimestamp"
      type: "object"
      properties:
        id:
          format: "int64"
          description: "Unique identifier for the reading."
          type: "integer"
        readingTimestamp:
          format: "date-time"
          description: "The UTC timestamp at which the reading was taken."
          type: "string"
          writeOnly: true
        manual:
          description: "True if the reading value was entered manually, false or null\
            \ otherwise."
          type: "boolean"
        deviceTimeZoneOffset:
          format: "int32"
          description: "The offset of the device's timezone from UTC in seconds. Null\
            \ if unavailable."
          type: "integer"
          example: -14400
        patientTimeZoneOffset:
          format: "int32"
          description: "The offset of the patient's timezone from UTC in seconds.\
            \ Null if unavailable."
          type: "integer"
          example: -14400
        patient:
          description: "The patient who took the reading."
          type: "object"
          allOf:
          - $ref: "#/components/schemas/Patient"
        item:
          description: "The item used to take the reading."
          type: "object"
          allOf:
          - $ref: "#/components/schemas/Item"
        device:
          description: "The device used to take the reading."
          type: "object"
          allOf:
          - $ref: "#/components/schemas/Device"
        systolic:
          format: "int32"
          description: "The systolic measurement value."
          type: "integer"
        systolicUnit:
          $ref: "#/components/schemas/BloodPressureUnit"
        diastolic:
          format: "int32"
          description: "The diastolic measurement value."
          type: "integer"
        diastolicUnit:
          $ref: "#/components/schemas/BloodPressureUnit"
        heartRate:
          format: "int32"
          description: "The heart rate measurement value."
          type: "integer"
        heartRateUnit:
          $ref: "#/components/schemas/HeartRateUnit"
    BloodPressureReadingRequest:
      description: "This page describes Impilo's blood pressure reading model."
      required:
      - "readingTimestamp"
      - "systolic"
      - "diastolic"
      type: "object"
      properties:
        deviceId:
          format: "int64"
          description: "The id of the device that took the reading."
          type: "integer"
        deviceIdentifier:
          description: "The device identifier of the device that took the reading."
          type: "string"
        patientId:
          format: "int64"
          description: "The id of the patient that took the reading."
          type: "integer"
        readingTimestamp:
          format: "date-time"
          description: "The UTC timestamp at which the reading was taken."
          type: "string"
          example: "2022-03-10T16:15:50Z"
        deviceTimeZoneOffset:
          format: "int32"
          description: "The offset of the device's timezone from UTC in seconds. Null\
            \ if unavailable."
          type: "integer"
          example: -14400
        systolic:
          format: "int32"
          description: "The systolic measurement value."
          type: "integer"
        diastolic:
          format: "int32"
          description: "The diastolic measurement value."
          type: "integer"
        heartRate:
          format: "int32"
          description: "The heart rate measurement value."
          type: "integer"
        manual:
          description: "True if the reading value was entered manually, false or null\
            \ otherwise."
          type: "boolean"
    BloodPressureUnit:
      enum:
      - "mmhg"
      type: "string"
      x-fern-enum:
        mmhg:
          description: "Pressure unit of measurement is millimeters of mercury."
    ClinicalNote:
      description: "Clinical note for patients."
      type: "object"
      properties:
        id:
          format: "int64"
          description: "The unique identifier of the clinical note."
          type: "integer"
        type:
          description: "The type of the clinical note."
          type: "string"
          allOf:
          - $ref: "#/components/schemas/ClinicalNoteType"
        cptCode:
          description: "The CPT code associated with the clinical note."
          type: "object"
          allOf:
          - $ref: "#/components/schemas/CptCode"
        createTimestamp:
          format: "date-time"
          description: "The timestamp when the clinical note was created."
          type: "string"
          example: "2022-03-10T16:15:50Z"
        lastUpdateTimestamp:
          format: "date-time"
          description: "The timestamp when the clinical note was last updated."
          type: "string"
          example: "2022-03-10T16:15:50Z"
        open:
          description: "Indicates whether the clinical note is open."
          type: "boolean"
        mdCode:
          description: "The MD code associated with the clinical note."
          type: "string"
        dxCode:
          description: "The DX code associated with the clinical note."
          type: "string"
        description:
          description: "The description of the clinical note."
          type: "string"
        createdBy:
          description: "The user who created the clinical note."
          type: "object"
          allOf:
          - $ref: "#/components/schemas/EndUser"
        assignee:
          description: "The user assigned to the clinical note."
          type: "object"
          allOf:
          - $ref: "#/components/schemas/EndUser"
        patient:
          description: "The patient associated with the clinical note."
          type: "object"
          allOf:
          - $ref: "#/components/schemas/Patient"
        activity:
          description: "List of activities associated with the clinical note."
          type: "array"
          items:
            $ref: "#/components/schemas/ClinicalNoteActivity"
        totalTime:
          format: "int32"
          description: "Total time in minutes spent on the clinical note."
          type: "integer"
    ClinicalNoteActivity:
      description: "Clinical note activity."
      type: "object"
      properties:
        createTimestamp:
          format: "date-time"
          description: "The timestamp when the activity was created."
          type: "string"
          example: "2022-03-10T16:15:50Z"
        comment:
          description: "The comment associated with the activity."
          type: "string"
        minutesSpent:
          format: "int32"
          description: "The number of minutes spent on the activity."
          type: "integer"
        createdBy:
          description: "The user who created the activity."
          type: "object"
          allOf:
          - $ref: "#/components/schemas/EndUser"
    ClinicalNoteSort:
      enum:
      - "open"
      - "createTimestamp"
      type: "string"
    ClinicalNoteType:
      enum:
      - "other"
      - "cptCode"
      type: "string"
      x-fern-enum:
        other:
          description: "Clinical note of other type."
        cptCode:
          description: "Clinical note related to a CPT code."
    CptCode:
      type: "object"
      properties:
        value:
          type: "string"
        displayAs:
          type: "string"
    Customer:
      type: "object"
      properties:
        id:
          format: "int64"
          type: "integer"
        name:
          type: "string"
    Device:
      description: "A device is an instance of an item. Impilo creates device records\
        \ for items that are serialized, i.e., items where each individual unit is\
        \ identified by a serial number, IMEI, or other identifier."
      type: "object"
      properties:
        id:
          format: "int64"
          description: "Unique identifier for the device, managed by Impilo."
          type: "integer"
          readOnly: true
          example: 1
        item:
          description: "The manufacturer for this item."
          type: "object"
          allOf:
          - $ref: "#/components/schemas/Item"
        currentStatus:
          description: "The current status of this device."
          type: "string"
        used:
          description: "True if this device is used, false otherwise."
          type: "boolean"
        currentPatient:
          description: "The patient currently in possession of this device. Null if\
            \ this device is not currently with a patient."
          type: "object"
          allOf:
          - $ref: "#/components/schemas/Patient"
        site:
          description: "The site to which this device is assigned."
          type: "object"
          allOf:
          - $ref: "#/components/schemas/Site"
        lastHealthCheck:
          description: "Timestamp for the last time Impilo received a signal from\
            \ this device."
          type: "string"
        deviceIdentifiers:
          description: "An array of the device identifiers for this device."
          type: "array"
          items:
            $ref: "#/components/schemas/DeviceIdentifier"
        deviceEvents:
          description: "An array of the device events for this device."
          type: "array"
          items:
            $ref: "#/components/schemas/DeviceEvent"
        externalIdentifier:
          description: "The external identifier for this device."
          type: "string"
        disabledReadings:
          description: "True if readings from this device are disabled, false otherwise.\
            \ If true, Impilo will not save or process readings from this device.\
            \ Webhooks and alerts will not be triggered for readings taken on this\
            \ device."
          type: "boolean"
    DeviceEvent:
      description: "A device event represents a significant activity or occurrence\
        \ detected by the device. Impilo tracks these events to provide insights into\
        \ device usage and operational status."
      type: "object"
      properties:
        type:
          description: "The event type for the Device Event."
          type: "string"
        eventTimestamp:
          description: "The timestamp when the Device Event was created."
          type: "string"
    DeviceIdentifier:
      description: "A device is an instance of an item. Impilo creates device records\
        \ for items that are serialized, i.e., items where each individual unit is\
        \ identified by a serial number, IMEI, or other identifier."
      type: "object"
      properties:
        type:
          description: "The type of the Device Identifier."
          type: "string"
        value:
          description: "The value of the Device Identifier, based on it's type."
          type: "string"
    DeviceIdentifierType:
      enum:
      - "simCardNumber"
      - "macAddress"
      - "iccid"
      - "serial"
      - "imei"
      type: "string"
    DeviceReferenceRequest:
      description: "A request to reference a device by either its ID or Identifier."
      type: "object"
      properties:
        deviceId:
          format: "int64"
          description: "The ID of the device. Either this value or a Device Identifier\
            \ are required to identify the Device."
          type: "integer"
          example: 1
        deviceIdentifier:
          description: "The Identifier, such as a Serial Number, of the device. Either\
            \ this value or a Device Id are required to identify the Device."
          type: "string"
          example: "ABC123"
    DeviceSort:
      enum:
      - "itemName"
      - "itemModel"
      - "itemSku"
      - "deviceId"
      type: "string"
    DeviceStatus:
      enum:
      - "initiated"
      - "awaitingShipment"
      - "available"
      - "withPatient"
      - "availableAtSite"
      - "delivered"
      - "used"
      - "refurbishing"
      - "decommissioned"
      - "shipped"
      - "availableRepacked"
      - "returnedManufacturer"
      - "packed"
      type: "string"
      x-fern-enum:
        initiated:
          description: "Device initialization has been initiated."
        awaitingShipment:
          description: "Device is awaiting shipment."
        available:
          description: "Device is available for use."
        withPatient:
          description: "Device is currently with a patient."
        availableAtSite:
          description: "Device is available at a site."
        delivered:
          description: "Device has been delivered."
        used:
          description: "Device is currently in use."
        refurbishing:
          description: "Device is being refurbished."
        decommissioned:
          description: "Device has been decommissioned."
        shipped:
          description: "Device has been shipped."
        availableRepacked:
          description: "Device is available and repacked."
        returnedManufacturer:
          description: "Device has been returned to the manufacturer."
        packed:
          description: "Device is packed and ready for shipment or use."
    DeviceTransferRequest:
      required:
      - "toCustomerId"
      - "deviceIdentifiers"
      type: "object"
      properties:
        toCustomerId:
          format: "int64"
          description: "The ID of the Customer to transfer the Devices to."
          type: "integer"
        deviceIdentifiers:
          description: "A list of strings containing the Device Identifier values\
            \ to transfer."
          type: "array"
          items:
            type: "string"
    DimensionUnit:
      enum:
      - "in"
      - "cm"
      type: "string"
      x-fern-enum:
        in:
          description: "Inches."
        cm:
          description: "Centimeters."
    EndUser:
      description: "User information."
      type: "object"
      properties:
        id:
          format: "int64"
          description: "The unique identifier of the user."
          type: "integer"
        firstName:
          description: "The first name of the user."
          type: "string"
        lastName:
          description: "The last name of the user."
          type: "string"
        email:
          description: "The email address of the user."
          type: "string"
    HeartRateReading:
      description: "Impilo's heart rate model."
      type: "object"
      properties:
        id:
          format: "int64"
          description: "Unique identifier for the reading."
          type: "integer"
        readingTimestamp:
          format: "date-time"
          type: "string"
          example: "2022-03-10T16:15:50Z"
          writeOnly: true
        manual:
          description: "True if the reading value was entered manually, false or null\
            \ otherwise."
          type: "boolean"
          writeOnly: true
        deviceTimeZoneOffset:
          format: "int32"
          description: "The offset of the device's timezone from UTC in seconds. Null\
            \ if unavailable."
          type: "integer"
          example: -14400
        patientTimeZoneOffset:
          format: "int32"
          description: "The offset of the patient's timezone from UTC in seconds.\
            \ Null if unavailable."
          type: "integer"
          example: -14400
        heartRate:
          format: "int32"
          description: "The heart rate measurement value."
          type: "integer"
        patient:
          $ref: "#/components/schemas/Patient"
        item:
          $ref: "#/components/schemas/Item"
        device:
          $ref: "#/components/schemas/Device"
    HeartRateReadingRequest:
      required:
      - "readingTimestamp"
      type: "object"
      properties:
        deviceId:
          format: "int64"
          description: "The id of the device that took the reading."
          type: "integer"
        deviceIdentifier:
          description: "The device identifier of the device that took the reading."
          type: "string"
        patientId:
          format: "int64"
          description: "The id of the patient that took the reading."
          type: "integer"
        readingTimestamp:
          description: "The UTC timestamp at which the reading was taken."
          type: "string"
          allOf:
          - $ref: "#/components/schemas/Instant"
        deviceTimeZoneOffset:
          format: "int32"
          description: "The offset of the device's timezone from UTC in seconds. Null\
            \ if unavailable."
          type: "integer"
          example: -14400
        manual:
          description: "True if the reading value was entered manually, false or null\
            \ otherwise."
          type: "boolean"
        heartRate:
          format: "int32"
          description: "The heart rate measurement value."
          type: "integer"
    HeartRateUnit:
      enum:
      - "bpm"
      type: "string"
      x-fern-enum:
        bpm:
          description: "Heart rate unit of measurement is beats per minute."
    HeartRateVariabilityAlgorithmType:
      enum:
      - "sdann"
      - "sdnn"
      - "sdrr"
      type: "string"
      x-fern-enum:
        sdann:
          description: "Standard deviation of the average NN intervals calculated\
            \ over short periods."
        sdnn:
          description: "Standard deviation of all NN intervals."
        sdrr:
          description: "Standard deviation of the differences between adjacent NN\
            \ intervals."
    HeartRateVariabilityReading:
      description: "Impilo's heart rate variability model."
      required:
      - "heartRateVariability"
      type: "object"
      properties:
        id:
          format: "int64"
          description: "Unique identifier for the reading."
          type: "integer"
        readingTimestamp:
          format: "date-time"
          type: "string"
          example: "2022-03-10T16:15:50Z"
          writeOnly: true
        manual:
          description: "True if the reading value was entered manually, false or null\
            \ otherwise."
          type: "boolean"
          writeOnly: true
        deviceTimeZoneOffset:
          format: "int32"
          description: "The offset of the device's timezone from UTC in seconds. Null\
            \ if unavailable."
          type: "integer"
          example: -14400
        patientTimeZoneOffset:
          format: "int32"
          description: "The offset of the patient's timezone from UTC in seconds.\
            \ Null if unavailable."
          type: "integer"
          example: -14400
        heartRate:
          format: "int32"
          description: "The heart rate measurement value."
          type: "integer"
        heartRateVariability:
          format: "double"
          description: "The heart rate variability value."
          type: "number"
        heartRateVariabilityDuration:
          format: "int64"
          description: "The duration over which the heart rate variability was measured,\
            \ in milliseconds."
          type: "integer"
        patient:
          $ref: "#/components/schemas/Patient"
        item:
          $ref: "#/components/schemas/Item"
        device:
          $ref: "#/components/schemas/Device"
        heartRateVariabilityAlgorithmType:
          $ref: "#/components/schemas/HeartRateVariabilityAlgorithmType"
    HeartRateVariabilityReadingRequest:
      required:
      - "readingTimestamp"
      - "heartRateVariability"
      type: "object"
      properties:
        deviceId:
          format: "int64"
          description: "The id of the device that took the reading."
          type: "integer"
        deviceIdentifier:
          description: "The device identifier of the device that took the reading."
          type: "string"
        patientId:
          format: "int64"
          description: "The id of the patient that took the reading."
          type: "integer"
        readingTimestamp:
          description: "The UTC timestamp at which the reading was taken."
          type: "string"
          allOf:
          - $ref: "#/components/schemas/Instant"
        deviceTimeZoneOffset:
          format: "int32"
          description: "The offset of the device's timezone from UTC in seconds. Null\
            \ if unavailable."
          type: "integer"
          example: -14400
        manual:
          description: "True if the reading value was entered manually, false or null\
            \ otherwise."
          type: "boolean"
        heartRate:
          format: "int32"
          description: "The heart rate measurement value."
          type: "integer"
        heartRateVariability:
          format: "double"
          description: "The heart rate variability value."
          type: "number"
        heartRateVariabilityDuration:
          format: "int64"
          description: "The duration over which the heart rate variability was measured,\
            \ in milliseconds."
          type: "integer"
        heartRateVariabilityAlgorithmType:
          $ref: "#/components/schemas/HeartRateVariabilityAlgorithmType"
    Instant:
      format: "date-time"
      type: "string"
      example: "2022-03-10T16:15:50Z"
    InventoryRecord:
      type: "object"
      properties:
        item:
          $ref: "#/components/schemas/Item"
        newCount:
          format: "int32"
          type: "integer"
        usedCount:
          format: "int32"
          type: "integer"
        site:
          $ref: "#/components/schemas/Site"
    InventorySummaryRecord:
      type: "object"
      properties:
        item:
          $ref: "#/components/schemas/Item"
        newCount:
          format: "int32"
          type: "integer"
        usedCount:
          format: "int32"
          type: "integer"
    Item:
      description: "An item is any of the supplies handled by Impilo. Examples include\
        \ medical devices like a blood pressure monitor or weight scale, but the term\
        \ 'item' also refers to non-medical supplies like AAA batteries and package\
        \ inserts. A customer catalog is a subset of all items supported by Impilo.\
        \ This is set during onboarding and may be modified by your account manager\
        \ at any time. A customer may view the items in their catalog."
      type: "object"
      properties:
        id:
          format: "int64"
          description: "Unique identifier for the item, managed by Impilo."
          type: "integer"
          readOnly: true
          example: 1
        manufacturer:
          description: "The manufacturer for this item."
          type: "object"
          allOf:
          - $ref: "#/components/schemas/Manufacturer"
        name:
          description: "The name for this item."
          type: "string"
        model:
          description: "The manufacturer-assigned model for this item."
          type: "string"
        sku:
          description: "The Impilo-assigned SKU for this item."
          type: "string"
        orderable:
          description: "Whether an Item is able to be ordered."
          type: "boolean"
    ItemClass:
      enum:
      - "wearable"
      - "glucose"
      - "miscellaneous"
      - "circulatory"
      - "packaging"
      - "lab"
      - "body"
      - "familyPlanning"
      - "cpap"
      - "connectivity"
      - "generalHealth"
      - "service"
      - "thermometer"
      - "power"
      - "respiratory"
      - "info"
      type: "string"
      x-fern-enum:
        wearable:
          description: "Items related to wearable devices."
        glucose:
          description: "Items related to glucose monitoring."
        miscellaneous:
          description: "Miscellaneous items."
        circulatory:
          description: "Items related to the circulatory system."
        packaging:
          description: "Items related to packaging."
        lab:
          description: "Items related to laboratory equipment."
        body:
          description: "Items related to the body."
        familyPlanning:
          description: "Items related to family planning."
        cpap:
          description: "Items related to Continuous Positive Airway Pressure (CPAP)."
        connectivity:
          description: "Items related to connectivity."
        generalHealth:
          description: "Items related to general health."
        service:
          description: "Service-related items."
        thermometer:
          description: "Items related to thermometers."
        power:
          description: "Items related to power supply."
        respiratory:
          description: "Items related to the respiratory system."
        info:
          description: "Informational items."
    ItemDetailed:
      description: "An item is any of the supplies handled by Impilo. Examples include\
        \ medical devices like a blood pressure monitor or weight scale, but the term\
        \ 'item' also refers to non-medical supplies like AAA batteries and package\
        \ inserts. A customer catalog is a subset of all items supported by Impilo.\
        \ This is set during onboarding and may be modified by your account manager\
        \ at any time. A customer may view the items in their catalog. Detailed Item\
        \ views are only seen in the Item list and fetch endpoints -- otherwise, a\
        \ lighter version of an Item is returned with other non-Item endpoints."
      type: "object"
      properties:
        id:
          format: "int64"
          description: "Unique identifier for the item, managed by Impilo."
          type: "integer"
          readOnly: true
          example: 1
        manufacturer:
          description: "The manufacturer for this item."
          type: "object"
          allOf:
          - $ref: "#/components/schemas/Manufacturer"
        name:
          description: "The name for this item."
          type: "string"
        model:
          description: "The manufacturer-assigned model for this item."
          type: "string"
        sku:
          description: "The Impilo-assigned SKU for this item."
          type: "string"
        orderable:
          description: "Whether an Item is able to be ordered."
          type: "boolean"
        deviceIdentifierType:
          $ref: "#/components/schemas/DeviceIdentifierType"
        itemClass:
          $ref: "#/components/schemas/ItemClass"
        itemClassType:
          description: "The Class Type associated with this item."
          type: "string"
        size:
          $ref: "#/components/schemas/ItemSize"
        dimensions:
          description: "The physical dimensions of this item."
          type: "object"
          allOf:
          - $ref: "#/components/schemas/ItemDimensions"
        readingType:
          $ref: "#/components/schemas/ReadingType"
    ItemDimensions:
      description: "The length, width, height, and units of distance for the physical\
        \ body of the Item."
      type: "object"
      properties:
        length:
          format: "double"
          description: "The length of the Item."
          type: "number"
        width:
          format: "double"
          description: "The width of the Item."
          type: "number"
        height:
          format: "double"
          description: "The height of the Item."
          type: "number"
        unit:
          $ref: "#/components/schemas/DimensionUnit"
    ItemRequest:
      description: "An ItemRequest object consists of a name (required), a model,\
        \ and (if applicable) a deviceIdentifierType that is being requested to be\
        \ created by a Manufacturer.\n\nDevice Identifier Types must match the DeviceIdentifierType\
        \ model.\n"
      required:
      - "name"
      type: "object"
      properties:
        name:
          description: "The name for this item."
          type: "string"
        model:
          description: "The manufacturer-assigned model for this item."
          type: "string"
        deviceIdentifierType:
          $ref: "#/components/schemas/DeviceIdentifierType"
    ItemSize:
      enum:
      - "standard"
      - "small"
      - "large"
      - "extraLarge"
      - "medium"
      type: "string"
      x-fern-enum:
        standard:
          description: "Standard sized item."
        small:
          description: "Small sized item."
        large:
          description: "Large sized item."
        extraLarge:
          description: "Extra large sized item."
        medium:
          description: "Medium sized item."
    ItemSort:
      enum:
      - "itemId"
      - "itemName"
      - "itemModel"
      - "itemSku"
      type: "string"
    ItemTransfer:
      required:
      - "item"
      - "count"
      type: "object"
      properties:
        item:
          description: "The Item being requested to transfer. Only the ID of the item\
            \ is required."
          type: "object"
          allOf:
          - $ref: "#/components/schemas/Item"
        count:
          format: "int32"
          description: "The number of Items being requested for transfer."
          type: "integer"
    ItemTransferRequest:
      required:
      - "toCustomerId"
      - "transfers"
      type: "object"
      properties:
        toCustomerId:
          format: "int64"
          description: "The ID of the Customer to transfer the Devices to."
          type: "integer"
        transfers:
          description: "A list of ItemTransfer objects containing the Item IDs and\
            \ quantities to transfer."
          type: "array"
          items:
            $ref: "#/components/schemas/ItemTransfer"
    Kit:
      description: "A kit is a named collection of items that can be ordered as one\
        \ unit."
      type: "object"
      properties:
        id:
          format: "int64"
          type: "integer"
        name:
          description: "The name of the kit."
          type: "string"
        archived:
          description: "True if the kit is archived, false otherwise."
          type: "boolean"
        kitItems:
          description: "An array of kit items."
          type: "array"
          items:
            $ref: "#/components/schemas/KitItem"
    KitItem:
      type: "object"
      properties:
        item:
          $ref: "#/components/schemas/Item"
        count:
          format: "int32"
          type: "integer"
    LocalDate:
      format: "date"
      type: "string"
      example: "2022-03-10"
    Manufacturer:
      description: "A manufacturer is a supplier of an item. Every item has exactly\
        \ one manufacturer."
      type: "object"
      properties:
        id:
          format: "int64"
          description: "Unique identifier for the manufacturer, managed by Impilo."
          type: "integer"
          readOnly: true
          example: 1
        name:
          description: "The name of the manufacturer."
          type: "string"
    Order:
      type: "object"
      properties:
        id:
          format: "int64"
          description: "Unique identifier for the order"
          type: "integer"
          readOnly: true
        externalOrderIds:
          description: "An array of order ids specified by the client"
          type: "array"
          items:
            type: "string"
        patient:
          description: "The patient receiving the order. Exactly one of patient or\
            \ site must be not null."
          type: "object"
          allOf:
          - $ref: "#/components/schemas/Patient"
        site:
          description: "The site receiving the order. Exactly one of patient or site\
            \ must be not null."
          type: "object"
          allOf:
          - $ref: "#/components/schemas/Site"
        currentStatus:
          description: "The current status of the order"
          enum:
          - "availableForPickup"
          - "onHold"
          - "unsuccessfulDelivery"
          - "awaitingShipment"
          - "returnIssued"
          - "pendingInventory"
          - "delivered"
          - "reconfirmAddress"
          - "unableToFulfill"
          - "orderPlaced"
          - "shipped"
          - "voided"
          - "pendingAdditionalInformation"
          type: "string"
          readOnly: true
          x-fern-enum:
            availableForPickup:
              description: "Order is waiting for the recipient to pickup at the post\
                \ office."
            onHold:
              description: "Order is on hold, possibly due to inventory or internal\
                \ reviews."
            unsuccessfulDelivery:
              description: "Delivery of the order was attempted but unsuccessful."
            awaitingShipment:
              description: "Order is ready to be shipped but is waiting for the next\
                \ shipment cycle."
            returnIssued:
              description: "A return process has been initiated for the order."
            pendingInventory:
              description: "Order is waiting for inventory to become available before\
                \ it can be fulfilled."
            delivered:
              description: "Order has been successfully delivered to the recipient."
            reconfirmAddress:
              description: "Customer needs to reconfirm their address."
            unableToFulfill:
              description: "Order cannot be fulfilled due to current limitations or\
                \ issues."
            orderPlaced:
              description: "Order has been successfully placed and is in the system."
            shipped:
              description: "Order has been shipped to the recipient."
            voided:
              description: "Order has been canceled and is no longer valid."
            pendingAdditionalInformation:
              description: "Order is pending as additional information is required\
                \ from the recipient."
        orderItems:
          description: "Array of items on the order. At least one of orderItems or\
            \ orderKits must be not null."
          type: "array"
          items:
            $ref: "#/components/schemas/OrderItem"
        orderKits:
          description: "Array of order kits on the order. At least one of orderItems\
            \ or orderKits must be not null."
          type: "array"
          items:
            $ref: "#/components/schemas/OrderKit"
        orderEvents:
          description: "Array of order events. These are the status updates for the\
            \ order."
          type: "array"
          items:
            $ref: "#/components/schemas/OrderEvent"
          readOnly: true
        trackingNumbers:
          description: "Array of tracking numbers for the order."
          type: "array"
          items:
            $ref: "#/components/schemas/TrackingNumber"
          readOnly: true
        devices:
          description: "The order item devices"
          type: "array"
          items:
            $ref: "#/components/schemas/Device"
          readOnly: true
        packedKits:
          description: "The kits packed in the order"
          type: "array"
          items:
            $ref: "#/components/schemas/PackedKit"
          readOnly: true
        shippingOption:
          $ref: "#/components/schemas/ShippingOption"
    OrderEvent:
      type: "object"
      properties:
        name:
          type: "string"
        eventTimestamp:
          type: "string"
    OrderItem:
      type: "object"
      properties:
        item:
          $ref: "#/components/schemas/Item"
        count:
          format: "int32"
          type: "integer"
    OrderKit:
      type: "object"
      properties:
        kit:
          $ref: "#/components/schemas/Kit"
        count:
          format: "int32"
          type: "integer"
    PackedKit:
      type: "object"
      properties:
        kit:
          $ref: "#/components/schemas/Kit"
        devices:
          type: "array"
          items:
            $ref: "#/components/schemas/Device"
    PageBloodGlucoseReading:
      description: "Pagination is supported whenever an API response returns a list\
        \ of objects. In paginated responses, objects are nested in a content attribute\
        \ and have first and last attributes indicating whether you are on the first\
        \ or last page, respectively. Additionally, the pagination response includes\
        \ a page attribute indicating the current page number, a size attribute indicating\
        \ the current page size, and a total attribute indicating the number of objects\
        \ matching the request."
      type: "object"
      properties:
        content:
          description: "The content of the page, consisting of a list of objects."
          type: "array"
          items:
            $ref: "#/components/schemas/BloodGlucoseReading"
        page:
          format: "int32"
          description: "The current page number. The first page has value 1."
          type: "integer"
        size:
          format: "int32"
          description: "The current page size. Default 15, maximum 250."
          type: "integer"
        total:
          format: "int32"
          description: "The number of objects matching the request."
          type: "integer"
        first:
          description: "True if this is the first page, false otherwise."
          type: "boolean"
        last:
          description: "True if this is the last page, false otherwise."
          type: "boolean"
    PageBloodOxygenReading:
      description: "Pagination is supported whenever an API response returns a list\
        \ of objects. In paginated responses, objects are nested in a content attribute\
        \ and have first and last attributes indicating whether you are on the first\
        \ or last page, respectively. Additionally, the pagination response includes\
        \ a page attribute indicating the current page number, a size attribute indicating\
        \ the current page size, and a total attribute indicating the number of objects\
        \ matching the request."
      type: "object"
      properties:
        content:
          description: "The content of the page, consisting of a list of objects."
          type: "array"
          items:
            $ref: "#/components/schemas/BloodOxygenReading"
        page:
          format: "int32"
          description: "The current page number. The first page has value 1."
          type: "integer"
        size:
          format: "int32"
          description: "The current page size. Default 15, maximum 250."
          type: "integer"
        total:
          format: "int32"
          description: "The number of objects matching the request."
          type: "integer"
        first:
          description: "True if this is the first page, false otherwise."
          type: "boolean"
        last:
          description: "True if this is the last page, false otherwise."
          type: "boolean"
    PageBloodPressureReading:
      description: "Pagination is supported whenever an API response returns a list\
        \ of objects. In paginated responses, objects are nested in a content attribute\
        \ and have first and last attributes indicating whether you are on the first\
        \ or last page, respectively. Additionally, the pagination response includes\
        \ a page attribute indicating the current page number, a size attribute indicating\
        \ the current page size, and a total attribute indicating the number of objects\
        \ matching the request."
      type: "object"
      properties:
        content:
          description: "The content of the page, consisting of a list of objects."
          type: "array"
          items:
            $ref: "#/components/schemas/BloodPressureReading"
        page:
          format: "int32"
          description: "The current page number. The first page has value 1."
          type: "integer"
        size:
          format: "int32"
          description: "The current page size. Default 15, maximum 250."
          type: "integer"
        total:
          format: "int32"
          description: "The number of objects matching the request."
          type: "integer"
        first:
          description: "True if this is the first page, false otherwise."
          type: "boolean"
        last:
          description: "True if this is the last page, false otherwise."
          type: "boolean"
    PageClinicalNote:
      description: "Pagination is supported whenever an API response returns a list\
        \ of objects. In paginated responses, objects are nested in a content attribute\
        \ and have first and last attributes indicating whether you are on the first\
        \ or last page, respectively. Additionally, the pagination response includes\
        \ a page attribute indicating the current page number, a size attribute indicating\
        \ the current page size, and a total attribute indicating the number of objects\
        \ matching the request."
      type: "object"
      properties:
        content:
          description: "The content of the page, consisting of a list of objects."
          type: "array"
          items:
            $ref: "#/components/schemas/ClinicalNote"
        page:
          format: "int32"
          description: "The current page number. The first page has value 1."
          type: "integer"
        size:
          format: "int32"
          description: "The current page size. Default 15, maximum 250."
          type: "integer"
        total:
          format: "int32"
          description: "The number of objects matching the request."
          type: "integer"
        first:
          description: "True if this is the first page, false otherwise."
          type: "boolean"
        last:
          description: "True if this is the last page, false otherwise."
          type: "boolean"
    PageDevice:
      description: "Pagination is supported whenever an API response returns a list\
        \ of objects. In paginated responses, objects are nested in a content attribute\
        \ and have first and last attributes indicating whether you are on the first\
        \ or last page, respectively. Additionally, the pagination response includes\
        \ a page attribute indicating the current page number, a size attribute indicating\
        \ the current page size, and a total attribute indicating the number of objects\
        \ matching the request."
      type: "object"
      properties:
        content:
          description: "The content of the page, consisting of a list of objects."
          type: "array"
          items:
            $ref: "#/components/schemas/Device"
        page:
          format: "int32"
          description: "The current page number. The first page has value 1."
          type: "integer"
        size:
          format: "int32"
          description: "The current page size. Default 15, maximum 250."
          type: "integer"
        total:
          format: "int32"
          description: "The number of objects matching the request."
          type: "integer"
        first:
          description: "True if this is the first page, false otherwise."
          type: "boolean"
        last:
          description: "True if this is the last page, false otherwise."
          type: "boolean"
    PageHeartRateReading:
      description: "Pagination is supported whenever an API response returns a list\
        \ of objects. In paginated responses, objects are nested in a content attribute\
        \ and have first and last attributes indicating whether you are on the first\
        \ or last page, respectively. Additionally, the pagination response includes\
        \ a page attribute indicating the current page number, a size attribute indicating\
        \ the current page size, and a total attribute indicating the number of objects\
        \ matching the request."
      type: "object"
      properties:
        content:
          description: "The content of the page, consisting of a list of objects."
          type: "array"
          items:
            $ref: "#/components/schemas/HeartRateReading"
        page:
          format: "int32"
          description: "The current page number. The first page has value 1."
          type: "integer"
        size:
          format: "int32"
          description: "The current page size. Default 15, maximum 250."
          type: "integer"
        total:
          format: "int32"
          description: "The number of objects matching the request."
          type: "integer"
        first:
          description: "True if this is the first page, false otherwise."
          type: "boolean"
        last:
          description: "True if this is the last page, false otherwise."
          type: "boolean"
    PageHeartRateVariabilityReading:
      description: "Pagination is supported whenever an API response returns a list\
        \ of objects. In paginated responses, objects are nested in a content attribute\
        \ and have first and last attributes indicating whether you are on the first\
        \ or last page, respectively. Additionally, the pagination response includes\
        \ a page attribute indicating the current page number, a size attribute indicating\
        \ the current page size, and a total attribute indicating the number of objects\
        \ matching the request."
      type: "object"
      properties:
        content:
          description: "The content of the page, consisting of a list of objects."
          type: "array"
          items:
            $ref: "#/components/schemas/HeartRateVariabilityReading"
        page:
          format: "int32"
          description: "The current page number. The first page has value 1."
          type: "integer"
        size:
          format: "int32"
          description: "The current page size. Default 15, maximum 250."
          type: "integer"
        total:
          format: "int32"
          description: "The number of objects matching the request."
          type: "integer"
        first:
          description: "True if this is the first page, false otherwise."
          type: "boolean"
        last:
          description: "True if this is the last page, false otherwise."
          type: "boolean"
    PageInventoryRecord:
      description: "Pagination is supported whenever an API response returns a list\
        \ of objects. In paginated responses, objects are nested in a content attribute\
        \ and have first and last attributes indicating whether you are on the first\
        \ or last page, respectively. Additionally, the pagination response includes\
        \ a page attribute indicating the current page number, a size attribute indicating\
        \ the current page size, and a total attribute indicating the number of objects\
        \ matching the request."
      type: "object"
      properties:
        content:
          description: "The content of the page, consisting of a list of objects."
          type: "array"
          items:
            $ref: "#/components/schemas/InventoryRecord"
        page:
          format: "int32"
          description: "The current page number. The first page has value 1."
          type: "integer"
        size:
          format: "int32"
          description: "The current page size. Default 15, maximum 250."
          type: "integer"
        total:
          format: "int32"
          description: "The number of objects matching the request."
          type: "integer"
        first:
          description: "True if this is the first page, false otherwise."
          type: "boolean"
        last:
          description: "True if this is the last page, false otherwise."
          type: "boolean"
    PageInventorySummaryRecord:
      description: "Pagination is supported whenever an API response returns a list\
        \ of objects. In paginated responses, objects are nested in a content attribute\
        \ and have first and last attributes indicating whether you are on the first\
        \ or last page, respectively. Additionally, the pagination response includes\
        \ a page attribute indicating the current page number, a size attribute indicating\
        \ the current page size, and a total attribute indicating the number of objects\
        \ matching the request."
      type: "object"
      properties:
        content:
          description: "The content of the page, consisting of a list of objects."
          type: "array"
          items:
            $ref: "#/components/schemas/InventorySummaryRecord"
        page:
          format: "int32"
          description: "The current page number. The first page has value 1."
          type: "integer"
        size:
          format: "int32"
          description: "The current page size. Default 15, maximum 250."
          type: "integer"
        total:
          format: "int32"
          description: "The number of objects matching the request."
          type: "integer"
        first:
          description: "True if this is the first page, false otherwise."
          type: "boolean"
        last:
          description: "True if this is the last page, false otherwise."
          type: "boolean"
    PageItemDetailed:
      description: "Pagination is supported whenever an API response returns a list\
        \ of objects. In paginated responses, objects are nested in a content attribute\
        \ and have first and last attributes indicating whether you are on the first\
        \ or last page, respectively. Additionally, the pagination response includes\
        \ a page attribute indicating the current page number, a size attribute indicating\
        \ the current page size, and a total attribute indicating the number of objects\
        \ matching the request."
      type: "object"
      properties:
        content:
          description: "The content of the page, consisting of a list of objects."
          type: "array"
          items:
            $ref: "#/components/schemas/ItemDetailed"
        page:
          format: "int32"
          description: "The current page number. The first page has value 1."
          type: "integer"
        size:
          format: "int32"
          description: "The current page size. Default 15, maximum 250."
          type: "integer"
        total:
          format: "int32"
          description: "The number of objects matching the request."
          type: "integer"
        first:
          description: "True if this is the first page, false otherwise."
          type: "boolean"
        last:
          description: "True if this is the last page, false otherwise."
          type: "boolean"
    PageKit:
      description: "Pagination is supported whenever an API response returns a list\
        \ of objects. In paginated responses, objects are nested in a content attribute\
        \ and have first and last attributes indicating whether you are on the first\
        \ or last page, respectively. Additionally, the pagination response includes\
        \ a page attribute indicating the current page number, a size attribute indicating\
        \ the current page size, and a total attribute indicating the number of objects\
        \ matching the request."
      type: "object"
      properties:
        content:
          description: "The content of the page, consisting of a list of objects."
          type: "array"
          items:
            $ref: "#/components/schemas/Kit"
        page:
          format: "int32"
          description: "The current page number. The first page has value 1."
          type: "integer"
        size:
          format: "int32"
          description: "The current page size. Default 15, maximum 250."
          type: "integer"
        total:
          format: "int32"
          description: "The number of objects matching the request."
          type: "integer"
        first:
          description: "True if this is the first page, false otherwise."
          type: "boolean"
        last:
          description: "True if this is the last page, false otherwise."
          type: "boolean"
    PageManufacturer:
      description: "Pagination is supported whenever an API response returns a list\
        \ of objects. In paginated responses, objects are nested in a content attribute\
        \ and have first and last attributes indicating whether you are on the first\
        \ or last page, respectively. Additionally, the pagination response includes\
        \ a page attribute indicating the current page number, a size attribute indicating\
        \ the current page size, and a total attribute indicating the number of objects\
        \ matching the request."
      type: "object"
      properties:
        content:
          description: "The content of the page, consisting of a list of objects."
          type: "array"
          items:
            $ref: "#/components/schemas/Manufacturer"
        page:
          format: "int32"
          description: "The current page number. The first page has value 1."
          type: "integer"
        size:
          format: "int32"
          description: "The current page size. Default 15, maximum 250."
          type: "integer"
        total:
          format: "int32"
          description: "The number of objects matching the request."
          type: "integer"
        first:
          description: "True if this is the first page, false otherwise."
          type: "boolean"
        last:
          description: "True if this is the last page, false otherwise."
          type: "boolean"
    PageOrder:
      description: "Pagination is supported whenever an API response returns a list\
        \ of objects. In paginated responses, objects are nested in a content attribute\
        \ and have first and last attributes indicating whether you are on the first\
        \ or last page, respectively. Additionally, the pagination response includes\
        \ a page attribute indicating the current page number, a size attribute indicating\
        \ the current page size, and a total attribute indicating the number of objects\
        \ matching the request."
      type: "object"
      properties:
        content:
          description: "The content of the page, consisting of a list of objects."
          type: "array"
          items:
            $ref: "#/components/schemas/Order"
        page:
          format: "int32"
          description: "The current page number. The first page has value 1."
          type: "integer"
        size:
          format: "int32"
          description: "The current page size. Default 15, maximum 250."
          type: "integer"
        total:
          format: "int32"
          description: "The number of objects matching the request."
          type: "integer"
        first:
          description: "True if this is the first page, false otherwise."
          type: "boolean"
        last:
          description: "True if this is the last page, false otherwise."
          type: "boolean"
    PagePatient:
      description: "Pagination is supported whenever an API response returns a list\
        \ of objects. In paginated responses, objects are nested in a content attribute\
        \ and have first and last attributes indicating whether you are on the first\
        \ or last page, respectively. Additionally, the pagination response includes\
        \ a page attribute indicating the current page number, a size attribute indicating\
        \ the current page size, and a total attribute indicating the number of objects\
        \ matching the request."
      type: "object"
      properties:
        content:
          description: "The content of the page, consisting of a list of objects."
          type: "array"
          items:
            $ref: "#/components/schemas/Patient"
        page:
          format: "int32"
          description: "The current page number. The first page has value 1."
          type: "integer"
        size:
          format: "int32"
          description: "The current page size. Default 15, maximum 250."
          type: "integer"
        total:
          format: "int32"
          description: "The number of objects matching the request."
          type: "integer"
        first:
          description: "True if this is the first page, false otherwise."
          type: "boolean"
        last:
          description: "True if this is the last page, false otherwise."
          type: "boolean"
    PagePeakFlowReading:
      description: "Pagination is supported whenever an API response returns a list\
        \ of objects. In paginated responses, objects are nested in a content attribute\
        \ and have first and last attributes indicating whether you are on the first\
        \ or last page, respectively. Additionally, the pagination response includes\
        \ a page attribute indicating the current page number, a size attribute indicating\
        \ the current page size, and a total attribute indicating the number of objects\
        \ matching the request."
      type: "object"
      properties:
        content:
          description: "The content of the page, consisting of a list of objects."
          type: "array"
          items:
            $ref: "#/components/schemas/PeakFlowReading"
        page:
          format: "int32"
          description: "The current page number. The first page has value 1."
          type: "integer"
        size:
          format: "int32"
          description: "The current page size. Default 15, maximum 250."
          type: "integer"
        total:
          format: "int32"
          description: "The number of objects matching the request."
          type: "integer"
        first:
          description: "True if this is the first page, false otherwise."
          type: "boolean"
        last:
          description: "True if this is the last page, false otherwise."
          type: "boolean"
    PageSite:
      description: "Pagination is supported whenever an API response returns a list\
        \ of objects. In paginated responses, objects are nested in a content attribute\
        \ and have first and last attributes indicating whether you are on the first\
        \ or last page, respectively. Additionally, the pagination response includes\
        \ a page attribute indicating the current page number, a size attribute indicating\
        \ the current page size, and a total attribute indicating the number of objects\
        \ matching the request."
      type: "object"
      properties:
        content:
          description: "The content of the page, consisting of a list of objects."
          type: "array"
          items:
            $ref: "#/components/schemas/Site"
        page:
          format: "int32"
          description: "The current page number. The first page has value 1."
          type: "integer"
        size:
          format: "int32"
          description: "The current page size. Default 15, maximum 250."
          type: "integer"
        total:
          format: "int32"
          description: "The number of objects matching the request."
          type: "integer"
        first:
          description: "True if this is the first page, false otherwise."
          type: "boolean"
        last:
          description: "True if this is the last page, false otherwise."
          type: "boolean"
    PageTemperatureReading:
      description: "Pagination is supported whenever an API response returns a list\
        \ of objects. In paginated responses, objects are nested in a content attribute\
        \ and have first and last attributes indicating whether you are on the first\
        \ or last page, respectively. Additionally, the pagination response includes\
        \ a page attribute indicating the current page number, a size attribute indicating\
        \ the current page size, and a total attribute indicating the number of objects\
        \ matching the request."
      type: "object"
      properties:
        content:
          description: "The content of the page, consisting of a list of objects."
          type: "array"
          items:
            $ref: "#/components/schemas/TemperatureReading"
        page:
          format: "int32"
          description: "The current page number. The first page has value 1."
          type: "integer"
        size:
          format: "int32"
          description: "The current page size. Default 15, maximum 250."
          type: "integer"
        total:
          format: "int32"
          description: "The number of objects matching the request."
          type: "integer"
        first:
          description: "True if this is the first page, false otherwise."
          type: "boolean"
        last:
          description: "True if this is the last page, false otherwise."
          type: "boolean"
    PageTransferRequest:
      description: "Pagination is supported whenever an API response returns a list\
        \ of objects. In paginated responses, objects are nested in a content attribute\
        \ and have first and last attributes indicating whether you are on the first\
        \ or last page, respectively. Additionally, the pagination response includes\
        \ a page attribute indicating the current page number, a size attribute indicating\
        \ the current page size, and a total attribute indicating the number of objects\
        \ matching the request."
      type: "object"
      properties:
        content:
          description: "The content of the page, consisting of a list of objects."
          type: "array"
          items:
            $ref: "#/components/schemas/TransferRequest"
        page:
          format: "int32"
          description: "The current page number. The first page has value 1."
          type: "integer"
        size:
          format: "int32"
          description: "The current page size. Default 15, maximum 250."
          type: "integer"
        total:
          format: "int32"
          description: "The number of objects matching the request."
          type: "integer"
        first:
          description: "True if this is the first page, false otherwise."
          type: "boolean"
        last:
          description: "True if this is the last page, false otherwise."
          type: "boolean"
    PageWebhook:
      description: "Pagination is supported whenever an API response returns a list\
        \ of objects. In paginated responses, objects are nested in a content attribute\
        \ and have first and last attributes indicating whether you are on the first\
        \ or last page, respectively. Additionally, the pagination response includes\
        \ a page attribute indicating the current page number, a size attribute indicating\
        \ the current page size, and a total attribute indicating the number of objects\
        \ matching the request."
      type: "object"
      properties:
        content:
          description: "The content of the page, consisting of a list of objects."
          type: "array"
          items:
            $ref: "#/components/schemas/Webhook"
        page:
          format: "int32"
          description: "The current page number. The first page has value 1."
          type: "integer"
        size:
          format: "int32"
          description: "The current page size. Default 15, maximum 250."
          type: "integer"
        total:
          format: "int32"
          description: "The number of objects matching the request."
          type: "integer"
        first:
          description: "True if this is the first page, false otherwise."
          type: "boolean"
        last:
          description: "True if this is the last page, false otherwise."
          type: "boolean"
    PageWebhookLog:
      description: "Pagination is supported whenever an API response returns a list\
        \ of objects. In paginated responses, objects are nested in a content attribute\
        \ and have first and last attributes indicating whether you are on the first\
        \ or last page, respectively. Additionally, the pagination response includes\
        \ a page attribute indicating the current page number, a size attribute indicating\
        \ the current page size, and a total attribute indicating the number of objects\
        \ matching the request."
      type: "object"
      properties:
        content:
          description: "The content of the page, consisting of a list of objects."
          type: "array"
          items:
            $ref: "#/components/schemas/WebhookLog"
        page:
          format: "int32"
          description: "The current page number. The first page has value 1."
          type: "integer"
        size:
          format: "int32"
          description: "The current page size. Default 15, maximum 250."
          type: "integer"
        total:
          format: "int32"
          description: "The number of objects matching the request."
          type: "integer"
        first:
          description: "True if this is the first page, false otherwise."
          type: "boolean"
        last:
          description: "True if this is the last page, false otherwise."
          type: "boolean"
    PageWeightReading:
      description: "Pagination is supported whenever an API response returns a list\
        \ of objects. In paginated responses, objects are nested in a content attribute\
        \ and have first and last attributes indicating whether you are on the first\
        \ or last page, respectively. Additionally, the pagination response includes\
        \ a page attribute indicating the current page number, a size attribute indicating\
        \ the current page size, and a total attribute indicating the number of objects\
        \ matching the request."
      type: "object"
      properties:
        content:
          description: "The content of the page, consisting of a list of objects."
          type: "array"
          items:
            $ref: "#/components/schemas/WeightReading"
        page:
          format: "int32"
          description: "The current page number. The first page has value 1."
          type: "integer"
        size:
          format: "int32"
          description: "The current page size. Default 15, maximum 250."
          type: "integer"
        total:
          format: "int32"
          description: "The number of objects matching the request."
          type: "integer"
        first:
          description: "True if this is the first page, false otherwise."
          type: "boolean"
        last:
          description: "True if this is the last page, false otherwise."
          type: "boolean"
    Patient:
      type: "object"
      properties:
        id:
          format: "int64"
          description: "Unique identifier for the patient, managed by Impilo."
          type: "integer"
          readOnly: true
          example: 1
        externalIdentifier:
          description: "Unique external identifier for the patient, managed by the\
            \ customer."
          type: "string"
          example: "1234abcd"
        firstName:
          description: "The patient's first name."
          type: "string"
          example: "John"
        lastName:
          description: "The patient's last name."
          type: "string"
          example: "Doe"
        dateOfBirth:
          format: "date"
          description: "The patient's date of birth in the format YYYY-MM-DD."
          type: "string"
          example: "1980-01-01"
        email:
          format: "email"
          description: "The patient's email."
          type: "string"
          example: "john.doe@example.com"
        phoneNumber:
          description: "The patient's phone number."
          type: "string"
          example: "+1234567890"
        archived:
          description: "True if the patient is archived, false otherwise."
          type: "boolean"
          example: true
        address:
          description: "The patient's shipping address."
          type: "object"
          allOf:
          - $ref: "#/components/schemas/Address"
        site:
          description: "The site responsible for this patient."
          type: "object"
          allOf:
          - $ref: "#/components/schemas/Site"
        enrolled:
          description: "The enrollment status. False if disenrolled."
          type: "boolean"
        sex:
          $ref: "#/components/schemas/Sex"
    PatientSort:
      enum:
      - "firstName"
      - "lastName"
      - "patientId"
      type: "string"
    PeakFlowReading:
      description: "This page describes Impilo's peak flow reading model."
      type: "object"
      properties:
        id:
          format: "int64"
          description: "Unique identifier for the reading."
          type: "integer"
        readingTimestamp:
          format: "date-time"
          type: "string"
          example: "2022-03-10T16:15:50Z"
          writeOnly: true
        manual:
          description: "True if the reading value was entered manually, false or null\
            \ otherwise."
          type: "boolean"
          writeOnly: true
        deviceTimeZoneOffset:
          format: "int32"
          description: "The offset of the device's timezone from UTC in seconds. Null\
            \ if unavailable."
          type: "integer"
          example: -14400
        patientTimeZoneOffset:
          format: "int32"
          description: "The offset of the patient's timezone from UTC in seconds.\
            \ Null if unavailable."
          type: "integer"
          example: -14400
        patient:
          $ref: "#/components/schemas/Patient"
        item:
          $ref: "#/components/schemas/Item"
        device:
          $ref: "#/components/schemas/Device"
        peakExpiratoryFlow:
          format: "double"
          type: "number"
        forcedExpiratoryVolume:
          format: "double"
          type: "number"
    PeakFlowReadingRequest:
      description: "This page describes Impilo's peak flow reading request model."
      required:
      - "readingTimestamp"
      - "peakExpiratoryFlow"
      type: "object"
      properties:
        deviceId:
          format: "int64"
          description: "The id of the device that took the reading."
          type: "integer"
        deviceIdentifier:
          description: "The device identifier of the device that took the reading."
          type: "string"
        patientId:
          format: "int64"
          description: "The id of the patient that took the reading."
          type: "integer"
        readingTimestamp:
          format: "date-time"
          description: "The UTC timestamp at which the reading was taken."
          type: "string"
          example: "2022-03-10T16:15:50Z"
        deviceTimeZoneOffset:
          format: "int32"
          description: "The offset of the device's timezone from UTC in seconds. Null\
            \ if unavailable."
          type: "integer"
          example: -14400
        peakExpiratoryFlow:
          format: "double"
          description: "The Peak Expiratory Flow, measured in L/min."
          type: "number"
        forcedExpiratoryVolumeInOneSecond:
          format: "double"
          description: "The Forced Expiratory Volume in One Second value, in L."
          type: "number"
        manual:
          description: "True if the reading value was entered manually, false or null\
            \ otherwise."
          type: "boolean"
    Procurement:
      description: "A procurement is a procurement of devices by a customer."
      type: "object"
      properties:
        id:
          format: "int64"
          description: "Unique identifier for the site, managed by Impilo."
          type: "integer"
          readOnly: true
          example: 1
        currentStatus:
          description: "The current status of the procurement"
          type: "string"
        procurementType:
          description: "The type of the procurement."
          type: "string"
        procurementItems:
          description: "List of items on the procurement"
          type: "array"
          items:
            $ref: "#/components/schemas/ProcurementItem"
        procurementEvents:
          description: "List of events attached to the procurement"
          type: "array"
          items:
            $ref: "#/components/schemas/ProcurementEvent"
    ProcurementEvent:
      type: "object"
      properties:
        name:
          type: "string"
        eventTimestamp:
          type: "string"
    ProcurementItem:
      type: "object"
      properties:
        item:
          $ref: "#/components/schemas/Item"
        quantityRequested:
          format: "int32"
          type: "integer"
        quantityApproved:
          format: "int32"
          type: "integer"
        costPerItem:
          format: "double"
          type: "number"
        trackingNumbers:
          type: "array"
          items:
            $ref: "#/components/schemas/TrackingNumber"
    ReadingType:
      enum:
      - "bloodPressure"
      - "heartRateVariability"
      - "heartRate"
      - "spo2"
      - "temperature"
      - "weight"
      - "peakFlow"
      - "continuousBloodGlucose"
      - "bloodGlucose"
      type: "string"
      x-fern-enum:
        bloodPressure:
          description: "Blood pressure reading type."
        heartRateVariability:
          description: "Heart rate variability reading type."
        heartRate:
          description: "Heart rate reading type."
        spo2:
          description: "SPO2 (oxygen saturation) reading type."
        temperature:
          description: "Temperature reading type."
        weight:
          description: "Weight reading type."
        peakFlow:
          description: "Peak Flow expiratory reading type."
        continuousBloodGlucose:
          description: "Continuous blood glucose reading type."
        bloodGlucose:
          description: "Blood glucose reading type."
    Sex:
      enum:
      - "other"
      - "female"
      - "male"
      - "unknown"
      type: "string"
      x-fern-enum:
        other:
          description: "Sex other than male or female."
        female:
          description: "Female sex."
        male:
          description: "Male sex."
        unknown:
          description: "Sex is unknown."
    ShippingOption:
      enum:
      - "standard"
      - "overnight"
      type: "string"
      x-fern-enum:
        standard:
          description: "Standard shipping option."
        overnight:
          description: "Overnight shipping option."
    Site:
      description: "A site is a customer-managed location that interacts with Impilo's\
        \ services. Patient may be associated with a site, and a customer may order\
        \ items and hold inventory at a site."
      type: "object"
      properties:
        id:
          format: "int64"
          description: "Unique identifier for the site, managed by Impilo."
          type: "integer"
          readOnly: true
          example: 1
        name:
          description: "The name of the site."
          type: "string"
        active:
          description: "True if the site is active, false otherwise."
          type: "boolean"
        address:
          description: "The shipping address for the site."
          type: "object"
          allOf:
          - $ref: "#/components/schemas/Address"
    TemperatureReading:
      description: "This page describes Impilo's temperature reading model."
      required:
      - "readingTimestamp"
      type: "object"
      properties:
        id:
          format: "int64"
          description: "Unique identifier for the reading."
          type: "integer"
        readingTimestamp:
          format: "date-time"
          description: "The UTC timestamp at which the reading was taken."
          type: "string"
          writeOnly: true
        manual:
          description: "True if the reading value was entered manually, false or null\
            \ otherwise."
          type: "boolean"
          writeOnly: true
        deviceTimeZoneOffset:
          format: "int32"
          description: "The offset of the device's timezone from UTC in seconds. Null\
            \ if unavailable."
          type: "integer"
          example: -14400
        patientTimeZoneOffset:
          format: "int32"
          description: "The offset of the patient's timezone from UTC in seconds.\
            \ Null if unavailable."
          type: "integer"
          example: -14400
        patient:
          description: "The patient who took the reading."
          type: "object"
          allOf:
          - $ref: "#/components/schemas/Patient"
        item:
          description: "The item used to take the reading."
          type: "object"
          allOf:
          - $ref: "#/components/schemas/Item"
        device:
          description: "The device used to take the reading."
          type: "object"
          allOf:
          - $ref: "#/components/schemas/Device"
        temperatureUnit:
          description: "The unit in which the temperature was measured."
          type: "string"
        temperature:
          format: "double"
          description: "The temperature measurement value."
          type: "number"
    TemperatureReadingRequest:
      description: "This page describes Impilo's temperature reading model."
      required:
      - "readingTimestamp"
      - "temperatureUnit"
      - "temperature"
      type: "object"
      properties:
        deviceId:
          format: "int64"
          description: "The id of the device that took the reading."
          type: "integer"
        deviceIdentifier:
          description: "The device identifier of the device that took the reading."
          type: "string"
        patientId:
          format: "int64"
          description: "The id of the patient that took the reading."
          type: "integer"
        readingTimestamp:
          format: "date-time"
          description: "The UTC timestamp at which the reading was taken."
          type: "string"
          example: "2022-03-10T16:15:50Z"
        deviceTimeZoneOffset:
          format: "int32"
          description: "The offset of the device's timezone from UTC in seconds. Null\
            \ if unavailable."
          type: "integer"
          example: -14400
        temperatureUnit:
          description: "The unit in which the temperature was measured."
          type: "string"
          allOf:
          - $ref: "#/components/schemas/TemperatureUnit"
        temperature:
          format: "double"
          description: "The temperature measurement value."
          type: "number"
        manual:
          description: "True if the reading value was entered manually, false or null\
            \ otherwise."
          type: "boolean"
    TemperatureUnit:
      enum:
      - "C"
      - "F"
      type: "string"
      x-fern-enum:
        C:
          description: "Temperature unit of measurement is Celsius."
        F:
          description: "Temperature unit of measurement is Fahrenheit."
    TestBloodGlucoseWebhookRequest:
      description: "Request model for testing blood glucose webhook."
      type: "object"
      properties:
        patientId:
          format: "int64"
          description: "Unique identifier for the patient."
          type: "integer"
        glucose:
          format: "int32"
          description: "The blood glucose measurement value."
          type: "integer"
    TestBloodOxygenWebhookRequest:
      description: "Request model for testing blood oxygen webhook."
      type: "object"
      properties:
        patientId:
          format: "int64"
          description: "Unique identifier for the patient."
          type: "integer"
        bloodOxygen:
          format: "int32"
          description: "The blood oxygen (spo2) measurement value."
          type: "integer"
        heartRate:
          format: "int32"
          description: "The heart rate measurement value."
          type: "integer"
    TestBloodPressureWebhookRequest:
      description: "Request model for testing blood pressure webhook."
      type: "object"
      properties:
        patientId:
          format: "int64"
          description: "Unique identifier for the patient."
          type: "integer"
        systolic:
          format: "int32"
          description: "The systolic blood pressure measurement value."
          type: "integer"
        diastolic:
          format: "int32"
          description: "The diastolic blood pressure measurement value."
          type: "integer"
        heartRate:
          format: "int32"
          description: "The heart rate measurement value."
          type: "integer"
    TestDeviceAssociationWebhook:
      description: "Request model for testing device association webhook."
      type: "object"
      properties:
        patientId:
          format: "int64"
          description: "Unique identifier for the patient."
          type: "integer"
        deviceId:
          format: "int64"
          description: "Unique identifier for the device."
          type: "integer"
        deviceIdentifier:
          description: "The identifier of the device."
          type: "string"
    TestOrderStatusFullWebhook:
      description: "Request model for testing order status webhook."
      type: "object"
      properties:
        orderId:
          format: "int64"
          description: "Unique identifier for the order."
          type: "integer"
        externalOrderIds:
          description: "List of external order identifiers."
          type: "array"
          items:
            type: "string"
        patientId:
          format: "int64"
          description: "Unique identifier for the patient."
          type: "integer"
        orderStatus:
          description: "Current status of the order."
          type: "string"
        trackingNumber:
          description: "Tracking number for the order shipment."
          type: "string"
    TestOrderStatusWebhookRequest:
      required:
      - "orderStatusName"
      type: "object"
      properties:
        orderId:
          format: "int64"
          description: "Unique identifier for the order, managed by Impilo. Randomly\
            \ generated for test webhooks."
          type: "integer"
          readOnly: true
          example: 1
        externalOrderIds:
          description: "List of order ids"
          type: "array"
          items:
            type: "string"
          example:
          - 1
          - 2
        orderStatusName:
          description: "Order status name"
          type: "string"
          example: "ORDER_PLACED"
    TestWeightWebhookRequest:
      description: "Request model for testing weight webhook."
      type: "object"
      properties:
        patientId:
          format: "int64"
          description: "Unique identifier for the patient."
          type: "integer"
        weight:
          format: "double"
          description: "The weight measurement value."
          type: "number"
    TrackingNumber:
      description: "The tracking number model includes details about the shipping\
        \ carrier and the tracking number value."
      type: "object"
      properties:
        carrier:
          description: "The shipping carrier for this tracking number."
          type: "string"
        value:
          description: "The tracking number value."
          type: "string"
    TransferRequest:
      type: "object"
      properties:
        id:
          format: "int64"
          description: "Unique identifier for the TransferRequest."
          type: "integer"
        fromCustomer:
          description: "Customer from which the Inventory will be transferred away\
            \ from. Typically auto-set to the caller of the TransferRequest endpoints."
          type: "object"
          allOf:
          - $ref: "#/components/schemas/Customer"
        toCustomer:
          description: "The target Customer to send the requested Inventory to."
          type: "object"
          allOf:
          - $ref: "#/components/schemas/Customer"
        currentStatus:
          $ref: "#/components/schemas/TransferRequestStatus"
        createdAt:
          format: "date-time"
          description: "The timestamp when the Transfer Request was first created."
          type: "string"
        transferRequestNotes:
          description: "Notes attached to this Transfer Request."
          type: "array"
          items:
            $ref: "#/components/schemas/TransferRequestNote"
        transferRequestEvents:
          description: "The sequence of events that this Transfer Request has undergone.\
            \ Sorted most recent event first."
          type: "array"
          items:
            $ref: "#/components/schemas/TransferRequestEvent"
        requestedEntries:
          description: "The Inventory that's being requested to transfer. Can consist\
            \ of a Device, or a combination of an Item and a Quantity."
          type: "array"
          items:
            $ref: "#/components/schemas/TransferRequestEntry"
    TransferRequestEntry:
      type: "object"
      properties:
        device:
          description: "The Device being requested to transfer to the target customer."
          type: "object"
          allOf:
          - $ref: "#/components/schemas/Device"
        item:
          description: "The Item type that's being requested to transfer to the target\
            \ customer. Used in conjunction with the quantity parameter."
          type: "object"
          allOf:
          - $ref: "#/components/schemas/Item"
        quantity:
          format: "int32"
          description: "The quantity of Item types to transfer to the target customer.\
            \ Used in conjunction with the item parameter."
          type: "integer"
    TransferRequestEvent:
      type: "object"
      properties:
        name:
          $ref: "#/components/schemas/TransferRequestStatus"
        eventTimestamp:
          format: "date-time"
          description: "The timestamp when this event took place."
          type: "string"
    TransferRequestNote:
      type: "object"
      properties:
        note:
          description: "The note that is linked to a Transfer Request."
          type: "string"
        createdAt:
          description: "The timestamp when the note was created."
          type: "string"
          allOf:
          - $ref: "#/components/schemas/Instant"
    TransferRequestStatus:
      enum:
      - "requested"
      - "approved"
      - "pendingInventory"
      - "voided"
      - "completed"
      type: "string"
      x-fern-enum:
        requested:
          description: "Transfer request has been requested."
        approved:
          description: "Transfer request has been approved."
        pendingInventory:
          description: "Transfer request is pending inventory."
        voided:
          description: "Transfer request has been voided."
        completed:
          description: "Transfer request has been completed."
    ValidateDeviceResponse:
      type: "object"
      properties:
        valid:
          description: "A Boolean value of whether this device identifier is validated\
            \ or not."
          type: "boolean"
        device:
          description: "The Device associated with the provided Device Identifier,\
            \ if exists."
          type: "object"
          allOf:
          - $ref: "#/components/schemas/Device"
    Webhook:
      description: "Impilo supports various types of webhooks. This page describes\
        \ the endpoints available for managing your webhooks."
      required:
      - "type"
      - "url"
      type: "object"
      properties:
        id:
          format: "int64"
          description: "Unique identifier for the webhook managed by Impilo."
          type: "integer"
          readOnly: true
          example: 1
        type:
          description: "The event type for the webhook."
          type: "string"
          example: "eventType"
        url:
          description: "The URL where events for this webhook will be sent."
          type: "string"
          example: "http://example.com"
    WebhookLog:
      description: "Represents a log for a webhook."
      type: "object"
      properties:
        webhookId:
          format: "int64"
          description: "ID of the webhook"
          type: "integer"
          example: 1
        webhookType:
          description: "Type of the webhook"
          type: "string"
          allOf:
          - $ref: "#/components/schemas/WebhookType"
          example: "order.status"
        webhookUrl:
          description: "URL of the webhook"
          type: "string"
          example: "http://webhookserver.com"
        payload:
          description: "Payload sent with the webhook"
          type: "string"
          example: "{'id':1234}"
        createTimestamp:
          format: "date-time"
          description: "Timestamp when the webhook was sent"
          type: "string"
          example: "2023-08-22T14:15:30.345Z"
        lastResponseStatus:
          format: "int32"
          description: "Last response status for the webhook"
          type: "integer"
          example: 200
        retryAttempts:
          format: "int32"
          description: "Number of retry attempts for the webhook"
          type: "integer"
          example: 3
        lastRetryTimestamp:
          format: "date-time"
          description: "Timestamp of the last retry attempt for the webhook"
          type: "string"
          example: "2023-08-22T14:15:30.345Z"
    WebhookSecret:
      type: "object"
      properties:
        secret:
          description: "Secret we will pass along with any Webhooks we send to your\
            \ subscribed endpoints."
          type: "string"
    WebhookType:
      enum:
      - "procurement.statusFull"
      - "supportTicket.event"
      - "reading.bloodOxygen"
      - "order.status"
      - "reading.peakFlow"
      - "transferRequest.statusFull"
      - "device.lowBattery"
      - "return.statusFull"
      - "patient.updated"
      - "reading.bloodPressure"
      - "procurement.status"
      - "device.associationCreated"
      - "device.associationRemoved"
      - "patient.created"
      - "reading.weight"
      - "reading.temperature"
      - "transferRequest.status"
      - "return.status"
      - "reading.bloodGlucose"
      - "device.weakSignal"
      - "order.statusFull"
      type: "string"
      x-fern-enum:
        procurement.statusFull:
          description: "A procurement status event occurred. The payload includes\
            \ the full procurement model."
        supportTicket.event:
          description: "A support ticket event took place."
        reading.bloodOxygen:
          description: "A reading of blood oxygen was taken."
        order.status:
          description: "An order status event occurred. The payload only includes\
            \ order id and order event type."
        reading.peakFlow:
          description: "A peak flow reading was taken."
        transferRequest.statusFull:
          description: "A transfer request status event occurred. The payload includes\
            \ the full transfer request model."
        device.lowBattery:
          description: "A device sent a low battery signal."
        return.statusFull:
          description: "A return status event was triggered."
        patient.updated:
          description: "A patient’s details were updated."
        reading.bloodPressure:
          description: "A reading of blood pressure was taken."
        procurement.status:
          description: "A procurement status event occurred. The payload only includes\
            \ procurement id and event type."
        device.associationCreated:
          description: "A patient-device association was created."
        device.associationRemoved:
          description: "A patient-device association was removed."
        patient.created:
          description: "A new patient was created."
        reading.weight:
          description: "A body weight reading was taken."
        reading.temperature:
          description: "A body temperature reading was taken."
        transferRequest.status:
          description: "A transfer request status event occurred. The payload only\
            \ includes transfer request id and transfer request event type."
        return.status:
          description: "A return status event was triggered."
        reading.bloodGlucose:
          description: "A reading of blood glucose was taken."
        device.weakSignal:
          description: "A device sent a weak signal."
        order.statusFull:
          description: "An order status event occurred. The payload includes the full\
            \ order model."
    WeightReading:
      description: "This page describes Impilo's weight reading model."
      required:
      - "readingTimestamp"
      - "weight"
      type: "object"
      properties:
        id:
          format: "int64"
          description: "Unique identifier for the reading."
          type: "integer"
        readingTimestamp:
          format: "date-time"
          description: "The UTC timestamp at which the reading was taken."
          type: "string"
          writeOnly: true
        manual:
          description: "True if the reading value was entered manually, false or null\
            \ otherwise."
          type: "boolean"
        deviceTimeZoneOffset:
          format: "int32"
          description: "The offset of the device's timezone from UTC in seconds. Null\
            \ if unavailable."
          type: "integer"
          example: -14400
        patientTimeZoneOffset:
          format: "int32"
          description: "The offset of the patient's timezone from UTC in seconds.\
            \ Null if unavailable."
          type: "integer"
          example: -14400
        patient:
          description: "The patient who took the reading."
          type: "object"
          allOf:
          - $ref: "#/components/schemas/Patient"
        item:
          description: "The item used to take the reading."
          type: "object"
          allOf:
          - $ref: "#/components/schemas/Item"
        device:
          description: "The device used to take the reading."
          type: "object"
          allOf:
          - $ref: "#/components/schemas/Device"
        weight:
          format: "double"
          description: "The weight reading in lbs."
          minimum: 0
          type: "number"
        weightUnit:
          $ref: "#/components/schemas/WeightUnit"
    WeightReadingRequest:
      description: "This page describes Impilo's weight reading model."
      required:
      - "readingTimestamp"
      - "weight"
      type: "object"
      properties:
        deviceId:
          format: "int64"
          description: "The id of the device that took the reading."
          type: "integer"
        deviceIdentifier:
          description: "The device identifier of the device that took the reading."
          type: "string"
        patientId:
          format: "int64"
          description: "The id of the patient that took the reading."
          type: "integer"
        readingTimestamp:
          format: "date-time"
          description: "The UTC timestamp at which the reading was taken."
          type: "string"
          example: "2022-03-10T16:15:50Z"
        deviceTimeZoneOffset:
          format: "int32"
          description: "The offset of the device's timezone from UTC in seconds. Null\
            \ if unavailable."
          type: "integer"
          example: -14400
        weight:
          format: "double"
          description: "The weight reading value in lbs."
          minimum: 0
          type: "number"
        manual:
          description: "True if the reading value was entered manually, false or null\
            \ otherwise."
          type: "boolean"
    WeightUnit:
      enum:
      - "lbs"
      type: "string"
      x-fern-enum:
        lbs:
          description: "Weight unit of measurement is pounds."
