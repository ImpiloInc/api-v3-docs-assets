{
  "$schema" : "https://cdn.scalar.com/schema/scalar-config.json",
  "publishOnMerge" : true,
  "subdomain" : "staging-docs",
  "customDomain" : "staging-docs.impiloplatform.com",
  "siteMeta" : {
    "favicon" : "https://cdn.jsdelivr.net/gh/ImpiloInc/api-v3-docs-assets@staging/images/favicon.png",
    "title" : "Impilo Docs",
    "description" : "Guides and references for the Impilo API."
  },
  "siteConfig" : {
    "theme" : "impilo",
    "logo" : {
      "darkMode" : "https://cdn.jsdelivr.net/gh/ImpiloInc/api-v3-docs-assets@staging/images/logo-dark-mode.png",
      "lightMode" : "https://cdn.jsdelivr.net/gh/ImpiloInc/api-v3-docs-assets@staging/images/logo-light-mode.png"
    },
    "headScript" : "(()=>{window.scalarUtils={debug:!![/^127\\.0\\.0\\.1$/,/^localhost$/,/^staging-.*$/,/^alpha-.*$/].find((r=>r.test(window.location.hostname))),debugLog:function(...args){if(!scalarUtils.debug)return;const err=new Error,stack=err.stack?.split(\"\\n\"),callerLine=stack?.[2]?.trim();console.log(\"[debug]\",...args),callerLine&&console.log(\"\\tâ†³ called from\",callerLine)},appendScript:function(src){const script=document.createElement(\"script\");return script.src=src,script.async=!0,document.head?document.head.appendChild(script):document.appendChild(script),new Promise((resolve=>{script.onload=()=>resolve(script)}))},appendModule:function(moduleName){const src=`https://unpkg.com/${moduleName}`;return scalarUtils.appendScript(src).then((()=>window[moduleName]))},pathMatch:function(pathFilter){const endSlash=pathFilter.endsWith(\"/\");endSlash&&(pathFilter=pathFilter.substring(0,pathFilter.length-1));const path=window.location.pathname;return pathFilter===path||endSlash&&path.startsWith(pathFilter+\"/\")}};const waitForTheElementModule=scalarUtils.appendModule(\"wait-for-the-element\");scalarUtils.waitFor=function(selector,options){const node=document.querySelector(selector);return node?Promise.resolve(node):waitForTheElementModule.then((module=>module.waitForTheElement(selector,options||{})))},scalarUtils.onReady=function(listener,pathFilter){if(\"function\"==typeof listener){if(\"loading\"!==document.readyState){let callback;return callback=pathFilter?()=>{scalarUtils.pathMatch(pathFilter)&&listener()}:listener,function(callback){const originalPushState=history.pushState,originalReplaceState=history.replaceState;function wrap(fn){return function(...args){const result=fn.apply(this,args);return callback(),result}}history.pushState=wrap(originalPushState),history.replaceState=wrap(originalReplaceState),window.addEventListener(\"popstate\",callback)}(callback),callback()}document.addEventListener(\"DOMContentLoaded\",(()=>scalarUtils.onReady(listener)))}}})(),(async()=>{const tagMatch=window.location.hash.match(/^#(tag\\/[a-zA-Z0-9\\-_:.#]+)$/);if(tagMatch){const button=await scalarUtils.waitFor(`#${CSS.escape(tagMatch[1])} ~ button`);button&&(scalarUtils.debugLog(\"show more button found\"),button.click())}})().catch((err=>{console.error(\"show-more.js\",err)})),(async()=>{const apiSidebarLinkConfig=async()=>{const apiHeaderLink=await scalarUtils.waitFor('a.header-item-link[href=\"/api\"]');if(apiHeaderLink){const apiSidebarLink=await scalarUtils.waitFor('.sidebar-group-item a[href=\"/api\"]');return apiSidebarLink?\"_self\"===apiSidebarLink.getAttribute(\"target\")?\"api_sidebar_link_configured\":(apiSidebarLink.setAttribute(\"target\",\"_self\"),apiSidebarLink.onclick=event=>{scalarUtils.debugLog(\"api sidebar link clicked\",event),event.preventDefault(),apiHeaderLink.click()},\"api_sidebar_link_updated\"):\"api_sidebar_link_not_found\"}return\"api_header_link_not_found\"};scalarUtils.onReady((async()=>{scalarUtils.debugLog(`api sidebar link config:${await apiSidebarLinkConfig()}`)}),\"/guides/\")})().catch((err=>{console.error(\"api-sidebar-link.js\",err)}));",
    "cssString" : ".t-doc__header .header-item-logo {height:40px; padding-right:1rem}; layout-header header.header:last-child {flex:1}; "
  },
  "guides" : [ {
    "name" : "Guides",
    "sidebar" : [ {
      "name" : "Get Started",
      "type" : "folder",
      "children" : [ {
        "name" : "Introduction",
        "path" : "/pages/welcome.md",
        "type" : "page"
      } ]
    }, {
      "name" : "Guides",
      "type" : "folder",
      "children" : [ {
        "name" : "Authentication",
        "path" : "/pages/authentication.md",
        "type" : "page"
      }, {
        "name" : "Order Management",
        "path" : "/pages/orders.md",
        "type" : "page"
      }, {
        "name" : "Patient Management",
        "path" : "/pages/patients.md",
        "type" : "page"
      }, {
        "name" : "Device Management",
        "path" : "/pages/devices.md",
        "type" : "page"
      }, {
        "name" : "Webhook Management",
        "path" : "/pages/webhooks.md",
        "type" : "page"
      } ]
    }, {
      "name" : "Resources",
      "type" : "folder",
      "children" : [ {
        "name" : "API reference",
        "url" : "/api",
        "type" : "link"
      }, {
        "name" : "OpenAPI Spec",
        "path" : "/pages/openapi-spec.md",
        "type" : "page"
      }, {
        "name" : "Mobile SDK",
        "path" : "/pages/mobile-sdk.md",
        "type" : "page"
      } ]
    } ]
  } ],
  "references" : [ {
    "name" : "API",
    "path" : "/deploy.openapi.yaml",
    "description" : ""
  } ]
}